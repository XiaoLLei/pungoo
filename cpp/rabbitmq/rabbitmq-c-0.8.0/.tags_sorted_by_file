AMQ_PLATFORM	config.h	11;"	d
ENABLE_THREAD_SAFETY	config.h	14;"	d
HAVE_DLFCN_H	config.h	17;"	d
HAVE_INTTYPES_H	config.h	23;"	d
HAVE_MEMORY_H	config.h	26;"	d
HAVE_POLL	config.h	29;"	d
HAVE_STDINT_H	config.h	41;"	d
HAVE_STDLIB_H	config.h	44;"	d
HAVE_STRINGS_H	config.h	47;"	d
HAVE_STRING_H	config.h	50;"	d
HAVE_SYS_STAT_H	config.h	53;"	d
HAVE_SYS_TYPES_H	config.h	56;"	d
HAVE_UNISTD_H	config.h	59;"	d
LT_OBJDIR	config.h	63;"	d
PACKAGE	config.h	69;"	d
PACKAGE_BUGREPORT	config.h	72;"	d
PACKAGE_NAME	config.h	75;"	d
PACKAGE_STRING	config.h	78;"	d
PACKAGE_TARNAME	config.h	81;"	d
PACKAGE_URL	config.h	84;"	d
PACKAGE_VERSION	config.h	87;"	d
STDC_HEADERS	config.h	90;"	d
VERSION	config.h	115;"	d
WITH_SSL	config.h	118;"	d
_ALL_SOURCE	config.h	94;"	d
_GNU_SOURCE	config.h	98;"	d
_POSIX_PTHREAD_SEMANTICS	config.h	102;"	d
_TANDEM_SOURCE	config.h	106;"	d
__EXTENSIONS__	config.h	110;"	d
main	examples\amqp_bind.c	/^int main(int argc, char const *const *argv)$/;"	f
WIN32_LEAN_AND_MEAN	examples\amqp_connect_timeout.c	52;"	d	file:
main	examples\amqp_connect_timeout.c	/^int main(int argc, char const *const *argv)$/;"	f
SUMMARY_EVERY_US	examples\amqp_consumer.c	50;"	d	file:
main	examples\amqp_consumer.c	/^int main(int argc, char const *const *argv)$/;"	f
run	examples\amqp_consumer.c	/^static void run(amqp_connection_state_t conn)$/;"	f	file:
main	examples\amqp_exchange_declare.c	/^int main(int argc, char const *const *argv)$/;"	f
main	examples\amqp_listen.c	/^int main(int argc, char const *const *argv)$/;"	f
main	examples\amqp_listenq.c	/^int main(int argc, char const *const *argv)$/;"	f
SUMMARY_EVERY_US	examples\amqp_producer.c	48;"	d	file:
main	examples\amqp_producer.c	/^int main(int argc, char const *const *argv)$/;"	f
send_batch	examples\amqp_producer.c	/^static void send_batch(amqp_connection_state_t conn,$/;"	f	file:
main	examples\amqp_rpc_sendstring_client.c	/^int main(int argc, char *argv[])$/;"	f
main	examples\amqp_sendstring.c	/^int main(int argc, char const *const *argv)$/;"	f
InterlockedAdd64	examples\amqp_sendstring.cpp	/^int64_t InterlockedAdd64(int64_t i, int64_t *v)$/;"	f
InterlockedIncrement64	examples\amqp_sendstring.cpp	216;"	d	file:
LOCK_PREFIX	examples\amqp_sendstring.cpp	206;"	d	file:
ThreadInfo	examples\amqp_sendstring.cpp	/^struct ThreadInfo$/;"	s	file:
amqp_dump	examples\amqp_sendstring.cpp	/^void amqp_dump(void const *buffer, size_t len)$/;"	f
count	examples\amqp_sendstring.cpp	/^    int64_t count;$/;"	m	struct:ThreadInfo	file:
die	examples\amqp_sendstring.cpp	/^void die(const char *fmt, ...)$/;"	f
die_on_amqp_error	examples\amqp_sendstring.cpp	/^void die_on_amqp_error(amqp_rpc_reply_t x, char const *context)$/;"	f
die_on_error	examples\amqp_sendstring.cpp	/^void die_on_error(int x, char const *context)$/;"	f
dump_row	examples\amqp_sendstring.cpp	/^static void dump_row(long count, int numinrow, int *chs)$/;"	f	file:
g_nPort	examples\amqp_sendstring.cpp	/^int     g_nPort = 5672;$/;"	v
g_szExchange	examples\amqp_sendstring.cpp	/^const char*   g_szExchange = "amq.direct";$/;"	v
g_szHostname	examples\amqp_sendstring.cpp	/^const char*   g_szHostname = "172.18.32.55";$/;"	v
g_szPassword	examples\amqp_sendstring.cpp	/^const char*   g_szPassword = "guest";$/;"	v
g_szRoutingkey	examples\amqp_sendstring.cpp	/^const char*   g_szRoutingkey = "test";$/;"	v
g_szUser	examples\amqp_sendstring.cpp	/^const char*   g_szUser = "guest";$/;"	v
g_szVirtualhost	examples\amqp_sendstring.cpp	/^const char*   g_szVirtualhost = "\/";$/;"	v
main	examples\amqp_sendstring.cpp	/^int main(int argc, char* argv[])$/;"	f
nouse	examples\amqp_sendstring.cpp	202;"	d	file:
rows_eq	examples\amqp_sendstring.cpp	/^static int rows_eq(int *a, int *b)$/;"	f	file:
thread_loop	examples\amqp_sendstring.cpp	/^void* thread_loop(void* arg)$/;"	f
main	examples\amqp_unbind.c	/^int main(int argc, char const *const *argv)$/;"	f
main	examples\amqps_bind.c	/^int main(int argc, char const *const *argv)$/;"	f
WIN32_LEAN_AND_MEAN	examples\amqps_connect_timeout.c	54;"	d	file:
main	examples\amqps_connect_timeout.c	/^int main(int argc, char const *const *argv)$/;"	f
SUMMARY_EVERY_US	examples\amqps_consumer.c	52;"	d	file:
main	examples\amqps_consumer.c	/^int main(int argc, char const *const *argv)$/;"	f
run	examples\amqps_consumer.c	/^static void run(amqp_connection_state_t conn)$/;"	f	file:
main	examples\amqps_exchange_declare.c	/^int main(int argc, char const *const *argv)$/;"	f
main	examples\amqps_listen.c	/^int main(int argc, char const *const *argv)$/;"	f
main	examples\amqps_listenq.c	/^int main(int argc, char const *const *argv)$/;"	f
SUMMARY_EVERY_US	examples\amqps_producer.c	50;"	d	file:
main	examples\amqps_producer.c	/^int main(int argc, char const *const *argv)$/;"	f
send_batch	examples\amqps_producer.c	/^static void send_batch(amqp_connection_state_t conn,$/;"	f	file:
main	examples\amqps_sendstring.c	/^int main(int argc, char const *const *argv)$/;"	f
main	examples\amqps_unbind.c	/^int main(int argc, char const *const *argv)$/;"	f
microsleep	examples\unix\platform_utils.c	/^void microsleep(int usec)$/;"	f
now_microseconds	examples\unix\platform_utils.c	/^uint64_t now_microseconds(void)$/;"	f
amqp_dump	examples\utils.c	/^void amqp_dump(void const *buffer, size_t len)$/;"	f
die	examples\utils.c	/^void die(const char *fmt, ...)$/;"	f
die_on_amqp_error	examples\utils.c	/^void die_on_amqp_error(amqp_rpc_reply_t x, char const *context)$/;"	f
die_on_error	examples\utils.c	/^void die_on_error(int x, char const *context)$/;"	f
dump_row	examples\utils.c	/^static void dump_row(long count, int numinrow, int *chs)$/;"	f	file:
rows_eq	examples\utils.c	/^static int rows_eq(int *a, int *b)$/;"	f	file:
librabbitmq_examples_utils_h	examples\utils.h	3;"	d
microsleep	examples\win32\platform_utils.c	/^void microsleep(int usec)$/;"	f
now_microseconds	examples\win32\platform_utils.c	/^uint64_t now_microseconds(void)$/;"	f
AMQP_BEGIN_DECLS	librabbitmq\amqp.h	44;"	d
AMQP_BEGIN_DECLS	librabbitmq\amqp.h	47;"	d
AMQP_CALL	librabbitmq\amqp.h	113;"	d
AMQP_CALL	librabbitmq\amqp.h	120;"	d
AMQP_CALL	librabbitmq\amqp.h	124;"	d
AMQP_CALL	librabbitmq\amqp.h	71;"	d
AMQP_CALL	librabbitmq\amqp.h	85;"	d
AMQP_CALL	librabbitmq\amqp.h	99;"	d
AMQP_DEFAULT_FRAME_SIZE	librabbitmq\amqp.h	339;"	d
AMQP_DEFAULT_HEARTBEAT	librabbitmq\amqp.h	361;"	d
AMQP_DEFAULT_MAX_CHANNELS	librabbitmq\amqp.h	350;"	d
AMQP_DELIVERY_NONPERSISTENT	librabbitmq\amqp.h	/^	AMQP_DELIVERY_NONPERSISTENT = 1, \/**< Non-persistent message *\/$/;"	e	enum:__anon8
AMQP_DELIVERY_PERSISTENT	librabbitmq\amqp.h	/^	AMQP_DELIVERY_PERSISTENT = 2 \/**< Persistent message *\/$/;"	e	enum:__anon8
AMQP_DEPRECATED	librabbitmq\amqp.h	128;"	d
AMQP_DEPRECATED	librabbitmq\amqp.h	131;"	d
AMQP_DEPRECATED	librabbitmq\amqp.h	134;"	d
AMQP_EMPTY_ARRAY	librabbitmq\amqp.h	824;"	d
AMQP_EMPTY_BYTES	librabbitmq\amqp.h	802;"	d
AMQP_EMPTY_TABLE	librabbitmq\amqp.h	813;"	d
AMQP_END_DECLS	librabbitmq\amqp.h	45;"	d
AMQP_END_DECLS	librabbitmq\amqp.h	48;"	d
AMQP_FIELD_KIND_ARRAY	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_ARRAY = 'A',    \/**< field array (repeated values of another datatype. datatype: amqp_array_t *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_BOOLEAN	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_BOOLEAN = 't',  \/**< boolean type. 0 = false, 1 = true @see amqp_boolean_t *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_BYTES	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_BYTES = 'x'     \/**< unformatted byte string, datatype: amqp_bytes_t *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_DECIMAL	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_DECIMAL = 'D',  \/**< amqp-decimal value, datatype: amqp_decimal_t *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_F32	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_F32 = 'f',      \/**< single-precision floating point value, datatype: float *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_F64	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_F64 = 'd',      \/**< double-precision floating point value, datatype: double *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_I16	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_I16 = 's',      \/**< 16-bit signed integer, datatype: int16_t *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_I32	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_I32 = 'I',      \/**< 32-bit signed integer, datatype: int32_t *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_I64	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_I64 = 'l',      \/**< 64-bit signed integer, datatype: int64_t *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_I8	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_I8 = 'b',       \/**< 8-bit signed integer, datatype: int8_t *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_TABLE	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_TABLE = 'F',    \/**< field table. encapsulates a table inside a table entry. datatype: amqp_table_t *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_TIMESTAMP	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_TIMESTAMP = 'T',\/**< 64-bit timestamp. datatype uint64_t *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_U16	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_U16 = 'u',      \/**< 16-bit unsigned integer, datatype: uint16_t *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_U32	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_U32 = 'i',      \/**< 32-bit unsigned integer, datatype: uint32_t *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_U64	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_U64 = 'L',      \/**< 64-bit unsigned integer, datatype: uint64_t *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_U8	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_U8 = 'B',       \/**< 8-bit unsigned integer, datatype: uint8_t *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_UTF8	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_UTF8 = 'S',     \/**< UTF-8 null-terminated character string, datatype: amqp_bytes_t *\/$/;"	e	enum:__anon4
AMQP_FIELD_KIND_VOID	librabbitmq\amqp.h	/^  AMQP_FIELD_KIND_VOID = 'V',     \/**< empty entry *\/$/;"	e	enum:__anon4
AMQP_H	librabbitmq\amqp.h	39;"	d
AMQP_PUBLIC_FUNCTION	librabbitmq\amqp.h	103;"	d
AMQP_PUBLIC_FUNCTION	librabbitmq\amqp.h	106;"	d
AMQP_PUBLIC_FUNCTION	librabbitmq\amqp.h	116;"	d
AMQP_PUBLIC_FUNCTION	librabbitmq\amqp.h	122;"	d
AMQP_PUBLIC_FUNCTION	librabbitmq\amqp.h	61;"	d
AMQP_PUBLIC_FUNCTION	librabbitmq\amqp.h	64;"	d
AMQP_PUBLIC_FUNCTION	librabbitmq\amqp.h	75;"	d
AMQP_PUBLIC_FUNCTION	librabbitmq\amqp.h	78;"	d
AMQP_PUBLIC_FUNCTION	librabbitmq\amqp.h	89;"	d
AMQP_PUBLIC_FUNCTION	librabbitmq\amqp.h	92;"	d
AMQP_PUBLIC_VARIABLE	librabbitmq\amqp.h	104;"	d
AMQP_PUBLIC_VARIABLE	librabbitmq\amqp.h	108;"	d
AMQP_PUBLIC_VARIABLE	librabbitmq\amqp.h	110;"	d
AMQP_PUBLIC_VARIABLE	librabbitmq\amqp.h	118;"	d
AMQP_PUBLIC_VARIABLE	librabbitmq\amqp.h	123;"	d
AMQP_PUBLIC_VARIABLE	librabbitmq\amqp.h	62;"	d
AMQP_PUBLIC_VARIABLE	librabbitmq\amqp.h	66;"	d
AMQP_PUBLIC_VARIABLE	librabbitmq\amqp.h	68;"	d
AMQP_PUBLIC_VARIABLE	librabbitmq\amqp.h	76;"	d
AMQP_PUBLIC_VARIABLE	librabbitmq\amqp.h	80;"	d
AMQP_PUBLIC_VARIABLE	librabbitmq\amqp.h	82;"	d
AMQP_PUBLIC_VARIABLE	librabbitmq\amqp.h	90;"	d
AMQP_PUBLIC_VARIABLE	librabbitmq\amqp.h	94;"	d
AMQP_PUBLIC_VARIABLE	librabbitmq\amqp.h	96;"	d
AMQP_RESPONSE_LIBRARY_EXCEPTION	librabbitmq\amqp.h	/^  AMQP_RESPONSE_LIBRARY_EXCEPTION,\/**< library error, an error occurred in the library, examine the library_error *\/$/;"	e	enum:amqp_response_type_enum_
AMQP_RESPONSE_NONE	librabbitmq\amqp.h	/^  AMQP_RESPONSE_NONE = 0,         \/**< the library got an EOF from the socket *\/$/;"	e	enum:amqp_response_type_enum_
AMQP_RESPONSE_NORMAL	librabbitmq\amqp.h	/^  AMQP_RESPONSE_NORMAL,           \/**< response normal, the RPC completed successfully *\/$/;"	e	enum:amqp_response_type_enum_
AMQP_RESPONSE_SERVER_EXCEPTION	librabbitmq\amqp.h	/^  AMQP_RESPONSE_SERVER_EXCEPTION  \/**< server exception, the broker returned an error, check replay *\/$/;"	e	enum:amqp_response_type_enum_
AMQP_SASL_METHOD_EXTERNAL	librabbitmq\amqp.h	/^  AMQP_SASL_METHOD_EXTERNAL = 1    \/**< the EXTERNAL SASL method for authentication to the broker *\/$/;"	e	enum:amqp_sasl_method_enum_
AMQP_SASL_METHOD_PLAIN	librabbitmq\amqp.h	/^  AMQP_SASL_METHOD_PLAIN = 0,      \/**< the PLAIN SASL method for authentication to the broker *\/$/;"	e	enum:amqp_sasl_method_enum_
AMQP_SASL_METHOD_UNDEFINED	librabbitmq\amqp.h	/^  AMQP_SASL_METHOD_UNDEFINED = -1, \/**< Invalid SASL method *\/$/;"	e	enum:amqp_sasl_method_enum_
AMQP_STATUS_BAD_AMQP_DATA	librabbitmq\amqp.h	/^  AMQP_STATUS_BAD_AMQP_DATA =             -0x0002, \/**< Incorrect or corrupt$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_BAD_URL	librabbitmq\amqp.h	/^  AMQP_STATUS_BAD_URL =                   -0x0008, \/**< malformed AMQP URL *\/$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_BROKER_UNSUPPORTED_SASL_METHOD	librabbitmq\amqp.h	/^  AMQP_STATUS_BROKER_UNSUPPORTED_SASL_METHOD = -0x0013, \/**< Broker does not$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_CONNECTION_CLOSED	librabbitmq\amqp.h	/^  AMQP_STATUS_CONNECTION_CLOSED =         -0x0007, \/**< The connection to the$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_HEARTBEAT_TIMEOUT	librabbitmq\amqp.h	/^  AMQP_STATUS_HEARTBEAT_TIMEOUT =         -0x000F, \/**< Timed out waiting for$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_HOSTNAME_RESOLUTION_FAILED	librabbitmq\amqp.h	/^  AMQP_STATUS_HOSTNAME_RESOLUTION_FAILED= -0x0005, \/**< Unable to resolve the$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_INCOMPATIBLE_AMQP_VERSION	librabbitmq\amqp.h	/^  AMQP_STATUS_INCOMPATIBLE_AMQP_VERSION = -0x0006, \/**< The broker advertised$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_INVALID_PARAMETER	librabbitmq\amqp.h	/^  AMQP_STATUS_INVALID_PARAMETER =         -0x000A, \/**< An invalid parameter$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_NO_MEMORY	librabbitmq\amqp.h	/^  AMQP_STATUS_NO_MEMORY =                 -0x0001,  \/**< Memory allocation$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_OK	librabbitmq\amqp.h	/^  AMQP_STATUS_OK =                         0x0,     \/**< Operation successful *\/$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_SOCKET_CLOSED	librabbitmq\amqp.h	/^  AMQP_STATUS_SOCKET_CLOSED =             -0x0011, \/**< Underlying socket is$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_SOCKET_ERROR	librabbitmq\amqp.h	/^  AMQP_STATUS_SOCKET_ERROR =              -0x0009, \/**< A socket error$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_SOCKET_INUSE	librabbitmq\amqp.h	/^  AMQP_STATUS_SOCKET_INUSE =              -0x0012, \/**< Underlying socket is$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_SSL_CONNECTION_FAILED	librabbitmq\amqp.h	/^  AMQP_STATUS_SSL_CONNECTION_FAILED =     -0x0203, \/**< SSL handshake failed. *\/$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_SSL_ERROR	librabbitmq\amqp.h	/^  AMQP_STATUS_SSL_ERROR =                 -0x0200, \/**< A generic SSL error$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_SSL_HOSTNAME_VERIFY_FAILED	librabbitmq\amqp.h	/^  AMQP_STATUS_SSL_HOSTNAME_VERIFY_FAILED= -0x0201, \/**< SSL validation of$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_SSL_PEER_VERIFY_FAILED	librabbitmq\amqp.h	/^  AMQP_STATUS_SSL_PEER_VERIFY_FAILED =    -0x0202, \/**< SSL validation of peer$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_TABLE_TOO_BIG	librabbitmq\amqp.h	/^  AMQP_STATUS_TABLE_TOO_BIG =             -0x000B, \/**< The amqp_table_t object$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_TCP_ERROR	librabbitmq\amqp.h	/^  AMQP_STATUS_TCP_ERROR =                 -0x0100, \/**< A generic TCP error$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_TCP_SOCKETLIB_INIT_ERROR	librabbitmq\amqp.h	/^  AMQP_STATUS_TCP_SOCKETLIB_INIT_ERROR =  -0x0101, \/**< An error occurred trying$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_TIMEOUT	librabbitmq\amqp.h	/^  AMQP_STATUS_TIMEOUT =                   -0x000D, \/**< Operation timed out *\/$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_TIMER_FAILURE	librabbitmq\amqp.h	/^  AMQP_STATUS_TIMER_FAILURE =             -0x000E, \/**< The underlying system$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_UNEXPECTED_STATE	librabbitmq\amqp.h	/^  AMQP_STATUS_UNEXPECTED_STATE =          -0x0010, \/**< Unexpected protocol$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_UNKNOWN_CLASS	librabbitmq\amqp.h	/^  AMQP_STATUS_UNKNOWN_CLASS =             -0x0003, \/**< An unknown AMQP class$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_UNKNOWN_METHOD	librabbitmq\amqp.h	/^  AMQP_STATUS_UNKNOWN_METHOD =            -0x0004, \/**< An unknown AMQP method$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_UNSUPPORTED	librabbitmq\amqp.h	/^  AMQP_STATUS_UNSUPPORTED =               -0x0014, \/**< Parameter is unsupported$/;"	e	enum:amqp_status_enum_
AMQP_STATUS_WRONG_METHOD	librabbitmq\amqp.h	/^  AMQP_STATUS_WRONG_METHOD =              -0x000C, \/**< The wrong method was$/;"	e	enum:amqp_status_enum_
AMQP_VERSION	librabbitmq\amqp.h	267;"	d
AMQP_VERSION_CODE	librabbitmq\amqp.h	242;"	d
AMQP_VERSION_IS_RELEASE	librabbitmq\amqp.h	228;"	d
AMQP_VERSION_MAJOR	librabbitmq\amqp.h	225;"	d
AMQP_VERSION_MINOR	librabbitmq\amqp.h	226;"	d
AMQP_VERSION_PATCH	librabbitmq\amqp.h	227;"	d
AMQP_VERSION_STRING	librabbitmq\amqp.h	294;"	d
AMQ_STRINGIFY	librabbitmq\amqp.h	273;"	d
AMQ_STRINGIFY_HELPER	librabbitmq\amqp.h	274;"	d
AMQ_VERSION_STRING	librabbitmq\amqp.h	276;"	d
_AMQP_STATUS_NEXT_VALUE	librabbitmq\amqp.h	/^  _AMQP_STATUS_NEXT_VALUE =               -0x0015, \/**< Internal value *\/$/;"	e	enum:amqp_status_enum_
_AMQP_STATUS_SSL_NEXT_VALUE	librabbitmq\amqp.h	/^  _AMQP_STATUS_SSL_NEXT_VALUE =           -0x0204  \/**< Internal value *\/$/;"	e	enum:amqp_status_enum_
_AMQP_STATUS_TCP_NEXT_VALUE	librabbitmq\amqp.h	/^  _AMQP_STATUS_TCP_NEXT_VALUE =           -0x0102, \/**< Internal value *\/$/;"	e	enum:amqp_status_enum_
_W64	librabbitmq\amqp.h	142;"	d
_W64	librabbitmq\amqp.h	144;"	d
alloc_block	librabbitmq\amqp.h	/^  char *alloc_block;  \/**< pointer to the current allocation block *\/$/;"	m	struct:amqp_pool_t_
alloc_used	librabbitmq\amqp.h	/^  size_t alloc_used;  \/**< number of bytes in the current allocation block that has been used *\/$/;"	m	struct:amqp_pool_t_
amqp_array_t	librabbitmq\amqp.h	/^} amqp_array_t;$/;"	t	typeref:struct:amqp_array_t_
amqp_array_t_	librabbitmq\amqp.h	/^typedef struct amqp_array_t_ {$/;"	s
amqp_boolean_t	librabbitmq\amqp.h	/^typedef int amqp_boolean_t;$/;"	t
amqp_bytes_t	librabbitmq\amqp.h	/^} amqp_bytes_t;$/;"	t	typeref:struct:amqp_bytes_t_
amqp_bytes_t_	librabbitmq\amqp.h	/^typedef struct amqp_bytes_t_ {$/;"	s
amqp_channel_t	librabbitmq\amqp.h	/^typedef uint16_t amqp_channel_t;$/;"	t
amqp_connection_info	librabbitmq\amqp.h	/^struct amqp_connection_info {$/;"	s
amqp_connection_state_t	librabbitmq\amqp.h	/^typedef struct amqp_connection_state_t_ *amqp_connection_state_t;$/;"	t	typeref:struct:amqp_connection_state_t_
amqp_decimal_t	librabbitmq\amqp.h	/^} amqp_decimal_t;$/;"	t	typeref:struct:amqp_decimal_t_
amqp_decimal_t_	librabbitmq\amqp.h	/^typedef struct amqp_decimal_t_ {$/;"	s
amqp_delivery_mode_enum	librabbitmq\amqp.h	/^} amqp_delivery_mode_enum;$/;"	t	typeref:enum:__anon8
amqp_empty_array	librabbitmq\amqp.h	/^AMQP_PUBLIC_VARIABLE const amqp_array_t amqp_empty_array;$/;"	v
amqp_empty_bytes	librabbitmq\amqp.h	/^AMQP_PUBLIC_VARIABLE const amqp_bytes_t amqp_empty_bytes;$/;"	v
amqp_empty_table	librabbitmq\amqp.h	/^AMQP_PUBLIC_VARIABLE const amqp_table_t amqp_empty_table;$/;"	v
amqp_envelope_t	librabbitmq\amqp.h	/^} amqp_envelope_t;$/;"	t	typeref:struct:amqp_envelope_t_
amqp_envelope_t_	librabbitmq\amqp.h	/^typedef struct amqp_envelope_t_ {$/;"	s
amqp_field_value_kind_t	librabbitmq\amqp.h	/^} amqp_field_value_kind_t;$/;"	t	typeref:enum:__anon4
amqp_field_value_t	librabbitmq\amqp.h	/^} amqp_field_value_t;$/;"	t	typeref:struct:amqp_field_value_t_
amqp_field_value_t_	librabbitmq\amqp.h	/^typedef struct amqp_field_value_t_ {$/;"	s
amqp_flags_t	librabbitmq\amqp.h	/^typedef uint32_t amqp_flags_t;$/;"	t
amqp_frame_t	librabbitmq\amqp.h	/^} amqp_frame_t;$/;"	t	typeref:struct:amqp_frame_t_
amqp_frame_t_	librabbitmq\amqp.h	/^typedef struct amqp_frame_t_ {$/;"	s
amqp_message_t	librabbitmq\amqp.h	/^} amqp_message_t;$/;"	t	typeref:struct:amqp_message_t_
amqp_message_t_	librabbitmq\amqp.h	/^typedef struct amqp_message_t_ {$/;"	s
amqp_method_number_t	librabbitmq\amqp.h	/^typedef uint32_t amqp_method_number_t;$/;"	t
amqp_method_t	librabbitmq\amqp.h	/^} amqp_method_t;$/;"	t	typeref:struct:amqp_method_t_
amqp_method_t_	librabbitmq\amqp.h	/^typedef struct amqp_method_t_ {$/;"	s
amqp_pool_blocklist_t	librabbitmq\amqp.h	/^} amqp_pool_blocklist_t;$/;"	t	typeref:struct:amqp_pool_blocklist_t_
amqp_pool_blocklist_t_	librabbitmq\amqp.h	/^typedef struct amqp_pool_blocklist_t_ {$/;"	s
amqp_pool_t	librabbitmq\amqp.h	/^} amqp_pool_t;$/;"	t	typeref:struct:amqp_pool_t_
amqp_pool_t_	librabbitmq\amqp.h	/^typedef struct amqp_pool_t_ {$/;"	s
amqp_response_type_enum	librabbitmq\amqp.h	/^} amqp_response_type_enum;$/;"	t	typeref:enum:amqp_response_type_enum_
amqp_response_type_enum_	librabbitmq\amqp.h	/^typedef enum amqp_response_type_enum_ {$/;"	g
amqp_rpc_reply_t	librabbitmq\amqp.h	/^} amqp_rpc_reply_t;$/;"	t	typeref:struct:amqp_rpc_reply_t_
amqp_rpc_reply_t_	librabbitmq\amqp.h	/^typedef struct amqp_rpc_reply_t_ {$/;"	s
amqp_sasl_method_enum	librabbitmq\amqp.h	/^} amqp_sasl_method_enum;$/;"	t	typeref:enum:amqp_sasl_method_enum_
amqp_sasl_method_enum_	librabbitmq\amqp.h	/^typedef enum amqp_sasl_method_enum_ {$/;"	g
amqp_socket_t	librabbitmq\amqp.h	/^typedef struct amqp_socket_t_ amqp_socket_t;$/;"	t	typeref:struct:amqp_socket_t_
amqp_status_enum	librabbitmq\amqp.h	/^} amqp_status_enum;$/;"	t	typeref:enum:amqp_status_enum_
amqp_status_enum_	librabbitmq\amqp.h	/^typedef enum amqp_status_enum_$/;"	g
amqp_table_entry_t	librabbitmq\amqp.h	/^} amqp_table_entry_t;$/;"	t	typeref:struct:amqp_table_entry_t_
amqp_table_entry_t_	librabbitmq\amqp.h	/^typedef struct amqp_table_entry_t_ {$/;"	s
amqp_table_t	librabbitmq\amqp.h	/^} amqp_table_t;$/;"	t	typeref:struct:amqp_table_t_
amqp_table_t_	librabbitmq\amqp.h	/^typedef struct amqp_table_t_ {$/;"	s
array	librabbitmq\amqp.h	/^    amqp_array_t array;       \/**< amqp_array_t type AMQP_FIELD_KIND_ARRAY *\/$/;"	m	union:amqp_field_value_t_::__anon3
blocklist	librabbitmq\amqp.h	/^  void **blocklist;   \/**< Array of memory blocks *\/$/;"	m	struct:amqp_pool_blocklist_t_
body	librabbitmq\amqp.h	/^  amqp_bytes_t body;                  \/**< message body *\/$/;"	m	struct:amqp_message_t_
body_fragment	librabbitmq\amqp.h	/^    amqp_bytes_t body_fragment; \/**< a body fragment, use if frame_type == AMQP_FRAME_BODY *\/$/;"	m	union:amqp_frame_t_::__anon5
body_size	librabbitmq\amqp.h	/^      uint64_t body_size;   \/**< size of the body in bytes *\/$/;"	m	struct:amqp_frame_t_::__anon5::__anon6
boolean	librabbitmq\amqp.h	/^    amqp_boolean_t boolean;   \/**< boolean type AMQP_FIELD_KIND_BOOLEAN *\/$/;"	m	union:amqp_field_value_t_::__anon3
bytes	librabbitmq\amqp.h	/^    amqp_bytes_t bytes;       \/**< amqp_bytes_t type AMQP_FIELD_KIND_UTF8, AMQP_FIELD_KIND_BYTES *\/$/;"	m	union:amqp_field_value_t_::__anon3
bytes	librabbitmq\amqp.h	/^  void *bytes;  \/**< pointer to the beginning of the buffer *\/$/;"	m	struct:amqp_bytes_t_
channel	librabbitmq\amqp.h	/^  amqp_channel_t channel;           \/**< channel message was delivered on *\/$/;"	m	struct:amqp_envelope_t_
channel	librabbitmq\amqp.h	/^  amqp_channel_t channel;   \/**< the channel the frame was received on *\/$/;"	m	struct:amqp_frame_t_
class_id	librabbitmq\amqp.h	/^      uint16_t class_id;    \/**< the class for the properties *\/$/;"	m	struct:amqp_frame_t_::__anon5::__anon6
consumer_tag	librabbitmq\amqp.h	/^  amqp_bytes_t consumer_tag;        \/**< the consumer tag the message was delivered to *\/$/;"	m	struct:amqp_envelope_t_
decimal	librabbitmq\amqp.h	/^    amqp_decimal_t decimal;   \/**< amqp_decimal_t AMQP_FIELD_KIND_DECIMAL *\/$/;"	m	union:amqp_field_value_t_::__anon3
decimals	librabbitmq\amqp.h	/^  uint8_t decimals;   \/**< the location of the decimal point *\/$/;"	m	struct:amqp_decimal_t_
decoded	librabbitmq\amqp.h	/^      void *decoded;        \/**< the decoded properties *\/$/;"	m	struct:amqp_frame_t_::__anon5::__anon6
decoded	librabbitmq\amqp.h	/^  void *decoded;                \/**< pointer to the decoded method,$/;"	m	struct:amqp_method_t_
delivery_tag	librabbitmq\amqp.h	/^  uint64_t delivery_tag;            \/**< the messages delivery tag *\/$/;"	m	struct:amqp_envelope_t_
entries	librabbitmq\amqp.h	/^  struct amqp_field_value_t_ *entries;  \/**< linked list of field values *\/$/;"	m	struct:amqp_array_t_	typeref:struct:amqp_array_t_::amqp_field_value_t_
entries	librabbitmq\amqp.h	/^  struct amqp_table_entry_t_ *entries;  \/**< an array of table entries *\/$/;"	m	struct:amqp_table_t_	typeref:struct:amqp_table_t_::amqp_table_entry_t_
exchange	librabbitmq\amqp.h	/^  amqp_bytes_t exchange;            \/**< exchange this message was published to *\/$/;"	m	struct:amqp_envelope_t_
f32	librabbitmq\amqp.h	/^    float f32;                \/**< float type AMQP_FIELD_KIND_F32 *\/$/;"	m	union:amqp_field_value_t_::__anon3
f64	librabbitmq\amqp.h	/^    double f64;               \/**< double type AMQP_FIELD_KIND_F64 *\/$/;"	m	union:amqp_field_value_t_::__anon3
frame_type	librabbitmq\amqp.h	/^  uint8_t frame_type;       \/**< frame type. The types:$/;"	m	struct:amqp_frame_t_
host	librabbitmq\amqp.h	/^  char *host;                 \/**< the hostname of the broker *\/$/;"	m	struct:amqp_connection_info
i16	librabbitmq\amqp.h	/^    int16_t i16;              \/**< int16_t type AMQP_FIELD_KIND_I16 *\/$/;"	m	union:amqp_field_value_t_::__anon3
i32	librabbitmq\amqp.h	/^    int32_t i32;              \/**< int32_t type AMQP_FIELD_KIND_I32 *\/$/;"	m	union:amqp_field_value_t_::__anon3
i64	librabbitmq\amqp.h	/^    int64_t i64;              \/**< int64_t type AMQP_FIELD_KIND_I64 *\/$/;"	m	union:amqp_field_value_t_::__anon3
i8	librabbitmq\amqp.h	/^    int8_t i8;                \/**< int8_t type AMQP_FIELD_KIND_I8 *\/$/;"	m	union:amqp_field_value_t_::__anon3
id	librabbitmq\amqp.h	/^  amqp_method_number_t id;      \/**< the method id number *\/$/;"	m	struct:amqp_method_t_
key	librabbitmq\amqp.h	/^  amqp_bytes_t key;           \/**< the table entry key. Its a null-terminated UTF-8 string,$/;"	m	struct:amqp_table_entry_t_
kind	librabbitmq\amqp.h	/^  uint8_t kind;             \/**< the type of the entry \/sa amqp_field_value_kind_t *\/$/;"	m	struct:amqp_field_value_t_
large_blocks	librabbitmq\amqp.h	/^  amqp_pool_blocklist_t large_blocks; \/**< allocations larger than the pagesize *\/$/;"	m	struct:amqp_pool_t_
len	librabbitmq\amqp.h	/^  size_t len;   \/**< length of the buffer in bytes *\/$/;"	m	struct:amqp_bytes_t_
library_error	librabbitmq\amqp.h	/^  int library_error;                    \/**< in case of AMQP_RESPONSE_LIBRARY_EXCEPTION this$/;"	m	struct:amqp_rpc_reply_t_
message	librabbitmq\amqp.h	/^  amqp_message_t message;           \/**< the message *\/$/;"	m	struct:amqp_envelope_t_
method	librabbitmq\amqp.h	/^    amqp_method_t method;   \/**< a method, use if frame_type == AMQP_FRAME_METHOD *\/$/;"	m	union:amqp_frame_t_::__anon5
next_page	librabbitmq\amqp.h	/^  int next_page;      \/**< an index to the next unused page block *\/$/;"	m	struct:amqp_pool_t_
num_blocks	librabbitmq\amqp.h	/^  int num_blocks;     \/**< Number of blocks in the block list *\/$/;"	m	struct:amqp_pool_blocklist_t_
num_entries	librabbitmq\amqp.h	/^  int num_entries;                      \/**< Number of entries in the table *\/$/;"	m	struct:amqp_array_t_
num_entries	librabbitmq\amqp.h	/^  int num_entries;                      \/**< length of entries array *\/$/;"	m	struct:amqp_table_t_
pages	librabbitmq\amqp.h	/^  amqp_pool_blocklist_t pages;        \/**< blocks that are the size of pagesize *\/$/;"	m	struct:amqp_pool_t_
pagesize	librabbitmq\amqp.h	/^  size_t pagesize;            \/**< the size of the page in bytes.$/;"	m	struct:amqp_pool_t_
password	librabbitmq\amqp.h	/^  char *password;             \/**< the password to authenticate with the broker, default on most brokers is 'guest' *\/$/;"	m	struct:amqp_connection_info
payload	librabbitmq\amqp.h	/^  } payload;              \/**< the payload of the frame *\/$/;"	m	struct:amqp_frame_t_	typeref:union:amqp_frame_t_::__anon5
pool	librabbitmq\amqp.h	/^  amqp_pool_t pool;                   \/**< pool used to allocate properties *\/$/;"	m	struct:amqp_message_t_
port	librabbitmq\amqp.h	/^  int port;                   \/**< the port that the broker is listening on, default on most brokers is 5672 *\/$/;"	m	struct:amqp_connection_info
properties	librabbitmq\amqp.h	/^    } properties;           \/**< message header, a.k.a., properties,$/;"	m	union:amqp_frame_t_::__anon5	typeref:struct:amqp_frame_t_::__anon5::__anon6
properties	librabbitmq\amqp.h	/^  amqp_basic_properties_t properties; \/**< message properties *\/$/;"	m	struct:amqp_message_t_
protocol_header	librabbitmq\amqp.h	/^    } protocol_header;    \/**< Used only when doing the initial handshake with the broker,$/;"	m	union:amqp_frame_t_::__anon5	typeref:struct:amqp_frame_t_::__anon5::__anon7
protocol_version_major	librabbitmq\amqp.h	/^      uint8_t protocol_version_major;   \/**< @internal third byte of handshake *\/$/;"	m	struct:amqp_frame_t_::__anon5::__anon7
protocol_version_minor	librabbitmq\amqp.h	/^      uint8_t protocol_version_minor;   \/**< @internal fourth byte of handshake *\/$/;"	m	struct:amqp_frame_t_::__anon5::__anon7
raw	librabbitmq\amqp.h	/^      amqp_bytes_t raw;     \/**< amqp-encoded properties structure *\/$/;"	m	struct:amqp_frame_t_::__anon5::__anon6
redelivered	librabbitmq\amqp.h	/^  amqp_boolean_t redelivered;       \/**< flag indicating whether this message is being redelivered *\/$/;"	m	struct:amqp_envelope_t_
reply	librabbitmq\amqp.h	/^  amqp_method_t reply;                  \/**< in case of AMQP_RESPONSE_SERVER_EXCEPTION this$/;"	m	struct:amqp_rpc_reply_t_
reply_type	librabbitmq\amqp.h	/^  amqp_response_type_enum reply_type;   \/**< the reply type:$/;"	m	struct:amqp_rpc_reply_t_
routing_key	librabbitmq\amqp.h	/^  amqp_bytes_t routing_key;         \/**< the routing key this message was published with *\/$/;"	m	struct:amqp_envelope_t_
ssize_t	librabbitmq\amqp.h	/^typedef _W64 int ssize_t;$/;"	t
ssize_t	librabbitmq\amqp.h	/^typedef __int64 ssize_t;$/;"	t
ssl	librabbitmq\amqp.h	/^  amqp_boolean_t ssl;$/;"	m	struct:amqp_connection_info
table	librabbitmq\amqp.h	/^    amqp_table_t table;       \/**< amqp_table_t type AMQP_FIELD_KIND_TABLE *\/$/;"	m	union:amqp_field_value_t_::__anon3
transport_high	librabbitmq\amqp.h	/^      uint8_t transport_high;           \/**< @internal first byte of handshake *\/$/;"	m	struct:amqp_frame_t_::__anon5::__anon7
transport_low	librabbitmq\amqp.h	/^      uint8_t transport_low;            \/**< @internal second byte of handshake *\/$/;"	m	struct:amqp_frame_t_::__anon5::__anon7
u16	librabbitmq\amqp.h	/^    uint16_t u16;             \/**< uint16_t type AMQP_FIELD_KIND_U16 *\/$/;"	m	union:amqp_field_value_t_::__anon3
u32	librabbitmq\amqp.h	/^    uint32_t u32;             \/**< uint32_t type AMQP_FIELD_KIND_U32 *\/$/;"	m	union:amqp_field_value_t_::__anon3
u64	librabbitmq\amqp.h	/^    uint64_t u64;             \/**< uint64_t type AMQP_FIELD_KIND_U64, AMQP_FIELD_KIND_TIMESTAMP *\/$/;"	m	union:amqp_field_value_t_::__anon3
u8	librabbitmq\amqp.h	/^    uint8_t u8;               \/**< uint8_t type AMQP_FIELD_KIND_U8 *\/$/;"	m	union:amqp_field_value_t_::__anon3
user	librabbitmq\amqp.h	/^  char *user;                 \/**< the username to authenticate with the broker, default on most broker is 'guest' *\/$/;"	m	struct:amqp_connection_info
value	librabbitmq\amqp.h	/^  amqp_field_value_t value;   \/**< the table entry values *\/$/;"	m	struct:amqp_table_entry_t_
value	librabbitmq\amqp.h	/^  uint32_t value;     \/**< the value before the decimal point is applied *\/$/;"	m	struct:amqp_decimal_t_
value	librabbitmq\amqp.h	/^  } value;              \/**< a union of the value *\/$/;"	m	struct:amqp_field_value_t_	typeref:union:amqp_field_value_t_::__anon3
vhost	librabbitmq\amqp.h	/^  char *vhost;                \/**< the virtual host on the broker to connect to, a good default is "\/" *\/$/;"	m	struct:amqp_connection_info
EC_base	librabbitmq\amqp_api.c	/^  EC_base = 0,$/;"	e	enum:error_category_enum_	file:
EC_ssl	librabbitmq\amqp_api.c	/^  EC_ssl = 2$/;"	e	enum:error_category_enum_	file:
EC_tcp	librabbitmq\amqp_api.c	/^  EC_tcp = 1,$/;"	e	enum:error_category_enum_	file:
ERROR_CATEGORY_MASK	librabbitmq\amqp_api.c	57;"	d	file:
ERROR_MASK	librabbitmq\amqp_api.c	56;"	d	file:
_CRT_NONSTDC_NO_DEPRECATE	librabbitmq\amqp_api.c	45;"	d	file:
_CRT_SECURE_NO_WARNINGS	librabbitmq\amqp_api.c	43;"	d	file:
amqp_abort	librabbitmq\amqp_api.c	/^void amqp_abort(const char *fmt, ...)$/;"	f
amqp_basic_ack	librabbitmq\amqp_api.c	/^int amqp_basic_ack(amqp_connection_state_t state,$/;"	f
amqp_basic_get	librabbitmq\amqp_api.c	/^amqp_rpc_reply_t amqp_basic_get(amqp_connection_state_t state,$/;"	f
amqp_basic_nack	librabbitmq\amqp_api.c	/^int amqp_basic_nack(amqp_connection_state_t state, amqp_channel_t channel,$/;"	f
amqp_basic_publish	librabbitmq\amqp_api.c	/^int amqp_basic_publish(amqp_connection_state_t state,$/;"	f
amqp_basic_reject	librabbitmq\amqp_api.c	/^int amqp_basic_reject(amqp_connection_state_t state,$/;"	f
amqp_channel_close	librabbitmq\amqp_api.c	/^amqp_rpc_reply_t amqp_channel_close(amqp_connection_state_t state,$/;"	f
amqp_connection_close	librabbitmq\amqp_api.c	/^amqp_rpc_reply_t amqp_connection_close(amqp_connection_state_t state,$/;"	f
amqp_empty_array	librabbitmq\amqp_api.c	/^const amqp_array_t amqp_empty_array = { 0, NULL };$/;"	v
amqp_empty_bytes	librabbitmq\amqp_api.c	/^const amqp_bytes_t amqp_empty_bytes = { 0, NULL };$/;"	v
amqp_empty_table	librabbitmq\amqp_api.c	/^const amqp_table_t amqp_empty_table = { 0, NULL };$/;"	v
amqp_error_string	librabbitmq\amqp_api.c	/^char *amqp_error_string(int code)$/;"	f
amqp_error_string2	librabbitmq\amqp_api.c	/^const char *amqp_error_string2(int code)$/;"	f
base_error_strings	librabbitmq\amqp_api.c	/^static const char *base_error_strings[] = {$/;"	v	file:
error_category_enum_	librabbitmq\amqp_api.c	/^enum error_category_enum_ {$/;"	g	file:
ssl_error_strings	librabbitmq\amqp_api.c	/^static const char *ssl_error_strings[] = {$/;"	v	file:
tcp_error_strings	librabbitmq\amqp_api.c	/^static const char *tcp_error_strings[] = {$/;"	v	file:
unknown_error_string	librabbitmq\amqp_api.c	/^static const char *unknown_error_string = "(unknown error)";$/;"	v	file:
AMQP_INITIAL_FRAME_POOL_PAGE_SIZE	librabbitmq\amqp_connection.c	55;"	d	file:
AMQP_INITIAL_INBOUND_SOCK_BUFFER_SIZE	librabbitmq\amqp_connection.c	59;"	d	file:
ENFORCE_STATE	librabbitmq\amqp_connection.c	62;"	d	file:
_CRT_SECURE_NO_WARNINGS	librabbitmq\amqp_connection.c	42;"	d	file:
amqp_destroy_connection	librabbitmq\amqp_connection.c	/^int amqp_destroy_connection(amqp_connection_state_t state)$/;"	f
amqp_frame_to_bytes	librabbitmq\amqp_connection.c	/^static int amqp_frame_to_bytes(const amqp_frame_t *frame, amqp_bytes_t buffer,$/;"	f	file:
amqp_get_channel_max	librabbitmq\amqp_connection.c	/^int amqp_get_channel_max(amqp_connection_state_t state)$/;"	f
amqp_get_client_properties	librabbitmq\amqp_connection.c	/^amqp_get_client_properties(amqp_connection_state_t state)$/;"	f
amqp_get_frame_max	librabbitmq\amqp_connection.c	/^int amqp_get_frame_max(amqp_connection_state_t state)$/;"	f
amqp_get_heartbeat	librabbitmq\amqp_connection.c	/^int amqp_get_heartbeat(amqp_connection_state_t state)$/;"	f
amqp_get_server_properties	librabbitmq\amqp_connection.c	/^amqp_get_server_properties(amqp_connection_state_t state)$/;"	f
amqp_get_socket	librabbitmq\amqp_connection.c	/^amqp_get_socket(amqp_connection_state_t state)$/;"	f
amqp_get_sockfd	librabbitmq\amqp_connection.c	/^int amqp_get_sockfd(amqp_connection_state_t state)$/;"	f
amqp_handle_input	librabbitmq\amqp_connection.c	/^int amqp_handle_input(amqp_connection_state_t state,$/;"	f
amqp_maybe_release_buffers	librabbitmq\amqp_connection.c	/^void amqp_maybe_release_buffers(amqp_connection_state_t state)$/;"	f
amqp_maybe_release_buffers_on_channel	librabbitmq\amqp_connection.c	/^void amqp_maybe_release_buffers_on_channel(amqp_connection_state_t state, amqp_channel_t channel)$/;"	f
amqp_new_connection	librabbitmq\amqp_connection.c	/^amqp_connection_state_t amqp_new_connection(void)$/;"	f
amqp_release_buffers	librabbitmq\amqp_connection.c	/^void amqp_release_buffers(amqp_connection_state_t state)$/;"	f
amqp_release_buffers_ok	librabbitmq\amqp_connection.c	/^amqp_boolean_t amqp_release_buffers_ok(amqp_connection_state_t state)$/;"	f
amqp_send_frame	librabbitmq\amqp_connection.c	/^int amqp_send_frame(amqp_connection_state_t state,$/;"	f
amqp_send_frame_inner	librabbitmq\amqp_connection.c	/^int amqp_send_frame_inner(amqp_connection_state_t state,$/;"	f
amqp_set_socket	librabbitmq\amqp_connection.c	/^void amqp_set_socket(amqp_connection_state_t state, amqp_socket_t *socket)$/;"	f
amqp_set_sockfd	librabbitmq\amqp_connection.c	/^void amqp_set_sockfd(amqp_connection_state_t state,$/;"	f
amqp_tune_connection	librabbitmq\amqp_connection.c	/^int amqp_tune_connection(amqp_connection_state_t state,$/;"	f
consume_data	librabbitmq\amqp_connection.c	/^static size_t consume_data(amqp_connection_state_t state,$/;"	f	file:
return_to_idle	librabbitmq\amqp_connection.c	/^static void return_to_idle(amqp_connection_state_t state)$/;"	f	file:
CLONE_BYTES_POOL	librabbitmq\amqp_consumer.c	116;"	d	file:
CLONE_BYTES_POOL	librabbitmq\amqp_consumer.c	45;"	d	file:
amqp_basic_properties_clone	librabbitmq\amqp_consumer.c	/^int amqp_basic_properties_clone(amqp_basic_properties_t *original,$/;"	f	file:
amqp_bytes_malloc_dup_failed	librabbitmq\amqp_consumer.c	/^int amqp_bytes_malloc_dup_failed(amqp_bytes_t bytes) {$/;"	f	file:
amqp_consume_message	librabbitmq\amqp_consumer.c	/^amqp_consume_message(amqp_connection_state_t state, amqp_envelope_t *envelope,$/;"	f
amqp_destroy_envelope	librabbitmq\amqp_consumer.c	/^void amqp_destroy_envelope(amqp_envelope_t *envelope)$/;"	f
amqp_destroy_message	librabbitmq\amqp_consumer.c	/^void amqp_destroy_message(amqp_message_t *message)$/;"	f
amqp_read_message	librabbitmq\amqp_consumer.c	/^amqp_rpc_reply_t amqp_read_message(amqp_connection_state_t state,$/;"	f
amqp_basic_cancel	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_basic_cancel(amqp_connection_state_t state, amqp_channel_t channel, amqp_bytes_t consumer_tag)$/;"	f
amqp_basic_consume	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_basic_consume(amqp_connection_state_t state, amqp_channel_t channel, amqp_bytes_t queue, amqp_bytes_t consumer_tag, amqp_boolean_t no_local, amqp_boolean_t no_ack, amqp_boolean_t exclusive, amqp_table_t arguments)$/;"	f
amqp_basic_qos	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_basic_qos(amqp_connection_state_t state, amqp_channel_t channel, uint32_t prefetch_size, uint16_t prefetch_count, amqp_boolean_t global)$/;"	f
amqp_basic_recover	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_basic_recover(amqp_connection_state_t state, amqp_channel_t channel, amqp_boolean_t requeue)$/;"	f
amqp_channel_flow	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_channel_flow(amqp_connection_state_t state, amqp_channel_t channel, amqp_boolean_t active)$/;"	f
amqp_channel_open	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_channel_open(amqp_connection_state_t state, amqp_channel_t channel)$/;"	f
amqp_confirm_select	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_confirm_select(amqp_connection_state_t state, amqp_channel_t channel)$/;"	f
amqp_constant_is_hard_error	librabbitmq\amqp_framing.c	/^amqp_boolean_t amqp_constant_is_hard_error(int constantNumber) {$/;"	f
amqp_constant_name	librabbitmq\amqp_framing.c	/^char const *amqp_constant_name(int constantNumber) {$/;"	f
amqp_decode_method	librabbitmq\amqp_framing.c	/^int amqp_decode_method(amqp_method_number_t methodNumber,$/;"	f
amqp_decode_properties	librabbitmq\amqp_framing.c	/^int amqp_decode_properties(uint16_t class_id,$/;"	f
amqp_encode_method	librabbitmq\amqp_framing.c	/^int amqp_encode_method(amqp_method_number_t methodNumber,$/;"	f
amqp_encode_properties	librabbitmq\amqp_framing.c	/^int amqp_encode_properties(uint16_t class_id,$/;"	f
amqp_exchange_bind	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_exchange_bind(amqp_connection_state_t state, amqp_channel_t channel, amqp_bytes_t destination, amqp_bytes_t source, amqp_bytes_t routing_key, amqp_table_t arguments)$/;"	f
amqp_exchange_declare	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_exchange_declare(amqp_connection_state_t state, amqp_channel_t channel, amqp_bytes_t exchange, amqp_bytes_t type, amqp_boolean_t passive, amqp_boolean_t durable, amqp_boolean_t auto_delete, amqp_boolean_t internal, amqp_table_t arguments)$/;"	f
amqp_exchange_delete	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_exchange_delete(amqp_connection_state_t state, amqp_channel_t channel, amqp_bytes_t exchange, amqp_boolean_t if_unused)$/;"	f
amqp_exchange_unbind	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_exchange_unbind(amqp_connection_state_t state, amqp_channel_t channel, amqp_bytes_t destination, amqp_bytes_t source, amqp_bytes_t routing_key, amqp_table_t arguments)$/;"	f
amqp_method_has_content	librabbitmq\amqp_framing.c	/^amqp_boolean_t amqp_method_has_content(amqp_method_number_t methodNumber) {$/;"	f
amqp_method_name	librabbitmq\amqp_framing.c	/^char const *amqp_method_name(amqp_method_number_t methodNumber) {$/;"	f
amqp_queue_bind	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_queue_bind(amqp_connection_state_t state, amqp_channel_t channel, amqp_bytes_t queue, amqp_bytes_t exchange, amqp_bytes_t routing_key, amqp_table_t arguments)$/;"	f
amqp_queue_declare	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_queue_declare(amqp_connection_state_t state, amqp_channel_t channel, amqp_bytes_t queue, amqp_boolean_t passive, amqp_boolean_t durable, amqp_boolean_t exclusive, amqp_boolean_t auto_delete, amqp_table_t arguments)$/;"	f
amqp_queue_delete	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_queue_delete(amqp_connection_state_t state, amqp_channel_t channel, amqp_bytes_t queue, amqp_boolean_t if_unused, amqp_boolean_t if_empty)$/;"	f
amqp_queue_purge	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_queue_purge(amqp_connection_state_t state, amqp_channel_t channel, amqp_bytes_t queue)$/;"	f
amqp_queue_unbind	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_queue_unbind(amqp_connection_state_t state, amqp_channel_t channel, amqp_bytes_t queue, amqp_bytes_t exchange, amqp_bytes_t routing_key, amqp_table_t arguments)$/;"	f
amqp_tx_commit	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_tx_commit(amqp_connection_state_t state, amqp_channel_t channel)$/;"	f
amqp_tx_rollback	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_tx_rollback(amqp_connection_state_t state, amqp_channel_t channel)$/;"	f
amqp_tx_select	librabbitmq\amqp_framing.c	/^AMQP_CALL amqp_tx_select(amqp_connection_state_t state, amqp_channel_t channel)$/;"	f
AMQP_ACCESS_CLASS	librabbitmq\amqp_framing.h	690;"	d
AMQP_ACCESS_REFUSED	librabbitmq\amqp_framing.h	59;"	d
AMQP_ACCESS_REQUEST_METHOD	librabbitmq\amqp_framing.h	318;"	d
AMQP_ACCESS_REQUEST_OK_METHOD	librabbitmq\amqp_framing.h	329;"	d
AMQP_BASIC_ACK_METHOD	librabbitmq\amqp_framing.h	587;"	d
AMQP_BASIC_APP_ID_FLAG	librabbitmq\amqp_framing.h	724;"	d
AMQP_BASIC_CANCEL_METHOD	librabbitmq\amqp_framing.h	521;"	d
AMQP_BASIC_CANCEL_OK_METHOD	librabbitmq\amqp_framing.h	528;"	d
AMQP_BASIC_CLASS	librabbitmq\amqp_framing.h	711;"	d
AMQP_BASIC_CLUSTER_ID_FLAG	librabbitmq\amqp_framing.h	725;"	d
AMQP_BASIC_CONSUME_METHOD	librabbitmq\amqp_framing.h	502;"	d
AMQP_BASIC_CONSUME_OK_METHOD	librabbitmq\amqp_framing.h	515;"	d
AMQP_BASIC_CONTENT_ENCODING_FLAG	librabbitmq\amqp_framing.h	713;"	d
AMQP_BASIC_CONTENT_TYPE_FLAG	librabbitmq\amqp_framing.h	712;"	d
AMQP_BASIC_CORRELATION_ID_FLAG	librabbitmq\amqp_framing.h	717;"	d
AMQP_BASIC_DELIVERY_MODE_FLAG	librabbitmq\amqp_framing.h	715;"	d
AMQP_BASIC_DELIVER_METHOD	librabbitmq\amqp_framing.h	553;"	d
AMQP_BASIC_EXPIRATION_FLAG	librabbitmq\amqp_framing.h	719;"	d
AMQP_BASIC_GET_EMPTY_METHOD	librabbitmq\amqp_framing.h	581;"	d
AMQP_BASIC_GET_METHOD	librabbitmq\amqp_framing.h	563;"	d
AMQP_BASIC_GET_OK_METHOD	librabbitmq\amqp_framing.h	571;"	d
AMQP_BASIC_HEADERS_FLAG	librabbitmq\amqp_framing.h	714;"	d
AMQP_BASIC_MESSAGE_ID_FLAG	librabbitmq\amqp_framing.h	720;"	d
AMQP_BASIC_NACK_METHOD	librabbitmq\amqp_framing.h	619;"	d
AMQP_BASIC_PRIORITY_FLAG	librabbitmq\amqp_framing.h	716;"	d
AMQP_BASIC_PUBLISH_METHOD	librabbitmq\amqp_framing.h	534;"	d
AMQP_BASIC_QOS_METHOD	librabbitmq\amqp_framing.h	488;"	d
AMQP_BASIC_QOS_OK_METHOD	librabbitmq\amqp_framing.h	496;"	d
AMQP_BASIC_RECOVER_ASYNC_METHOD	librabbitmq\amqp_framing.h	601;"	d
AMQP_BASIC_RECOVER_METHOD	librabbitmq\amqp_framing.h	607;"	d
AMQP_BASIC_RECOVER_OK_METHOD	librabbitmq\amqp_framing.h	613;"	d
AMQP_BASIC_REJECT_METHOD	librabbitmq\amqp_framing.h	594;"	d
AMQP_BASIC_REPLY_TO_FLAG	librabbitmq\amqp_framing.h	718;"	d
AMQP_BASIC_RETURN_METHOD	librabbitmq\amqp_framing.h	544;"	d
AMQP_BASIC_TIMESTAMP_FLAG	librabbitmq\amqp_framing.h	721;"	d
AMQP_BASIC_TYPE_FLAG	librabbitmq\amqp_framing.h	722;"	d
AMQP_BASIC_USER_ID_FLAG	librabbitmq\amqp_framing.h	723;"	d
AMQP_CHANNEL_CLASS	librabbitmq\amqp_framing.h	683;"	d
AMQP_CHANNEL_CLOSE_METHOD	librabbitmq\amqp_framing.h	303;"	d
AMQP_CHANNEL_CLOSE_OK_METHOD	librabbitmq\amqp_framing.h	312;"	d
AMQP_CHANNEL_ERROR	librabbitmq\amqp_framing.h	68;"	d
AMQP_CHANNEL_FLOW_METHOD	librabbitmq\amqp_framing.h	291;"	d
AMQP_CHANNEL_FLOW_OK_METHOD	librabbitmq\amqp_framing.h	297;"	d
AMQP_CHANNEL_OPEN_METHOD	librabbitmq\amqp_framing.h	279;"	d
AMQP_CHANNEL_OPEN_OK_METHOD	librabbitmq\amqp_framing.h	285;"	d
AMQP_COMMAND_INVALID	librabbitmq\amqp_framing.h	67;"	d
AMQP_CONFIRM_CLASS	librabbitmq\amqp_framing.h	752;"	d
AMQP_CONFIRM_SELECT_METHOD	librabbitmq\amqp_framing.h	663;"	d
AMQP_CONFIRM_SELECT_OK_METHOD	librabbitmq\amqp_framing.h	669;"	d
AMQP_CONNECTION_BLOCKED_METHOD	librabbitmq\amqp_framing.h	267;"	d
AMQP_CONNECTION_CLASS	librabbitmq\amqp_framing.h	676;"	d
AMQP_CONNECTION_CLOSE_METHOD	librabbitmq\amqp_framing.h	252;"	d
AMQP_CONNECTION_CLOSE_OK_METHOD	librabbitmq\amqp_framing.h	261;"	d
AMQP_CONNECTION_FORCED	librabbitmq\amqp_framing.h	63;"	d
AMQP_CONNECTION_OPEN_METHOD	librabbitmq\amqp_framing.h	238;"	d
AMQP_CONNECTION_OPEN_OK_METHOD	librabbitmq\amqp_framing.h	246;"	d
AMQP_CONNECTION_SECURE_METHOD	librabbitmq\amqp_framing.h	210;"	d
AMQP_CONNECTION_SECURE_OK_METHOD	librabbitmq\amqp_framing.h	216;"	d
AMQP_CONNECTION_START_METHOD	librabbitmq\amqp_framing.h	191;"	d
AMQP_CONNECTION_START_OK_METHOD	librabbitmq\amqp_framing.h	201;"	d
AMQP_CONNECTION_TUNE_METHOD	librabbitmq\amqp_framing.h	222;"	d
AMQP_CONNECTION_TUNE_OK_METHOD	librabbitmq\amqp_framing.h	230;"	d
AMQP_CONNECTION_UNBLOCKED_METHOD	librabbitmq\amqp_framing.h	273;"	d
AMQP_CONTENT_TOO_LARGE	librabbitmq\amqp_framing.h	56;"	d
AMQP_EXCHANGE_BIND_METHOD	librabbitmq\amqp_framing.h	370;"	d
AMQP_EXCHANGE_BIND_OK_METHOD	librabbitmq\amqp_framing.h	381;"	d
AMQP_EXCHANGE_CLASS	librabbitmq\amqp_framing.h	697;"	d
AMQP_EXCHANGE_DECLARE_METHOD	librabbitmq\amqp_framing.h	335;"	d
AMQP_EXCHANGE_DECLARE_OK_METHOD	librabbitmq\amqp_framing.h	349;"	d
AMQP_EXCHANGE_DELETE_METHOD	librabbitmq\amqp_framing.h	355;"	d
AMQP_EXCHANGE_DELETE_OK_METHOD	librabbitmq\amqp_framing.h	364;"	d
AMQP_EXCHANGE_UNBIND_METHOD	librabbitmq\amqp_framing.h	387;"	d
AMQP_EXCHANGE_UNBIND_OK_METHOD	librabbitmq\amqp_framing.h	398;"	d
AMQP_FRAME_BODY	librabbitmq\amqp_framing.h	51;"	d
AMQP_FRAME_END	librabbitmq\amqp_framing.h	54;"	d
AMQP_FRAME_ERROR	librabbitmq\amqp_framing.h	65;"	d
AMQP_FRAME_HEADER	librabbitmq\amqp_framing.h	50;"	d
AMQP_FRAME_HEARTBEAT	librabbitmq\amqp_framing.h	52;"	d
AMQP_FRAME_METHOD	librabbitmq\amqp_framing.h	49;"	d
AMQP_FRAME_MIN_SIZE	librabbitmq\amqp_framing.h	53;"	d
AMQP_FRAMING_H	librabbitmq\amqp_framing.h	39;"	d
AMQP_INTERNAL_ERROR	librabbitmq\amqp_framing.h	73;"	d
AMQP_INVALID_PATH	librabbitmq\amqp_framing.h	64;"	d
AMQP_NOT_ALLOWED	librabbitmq\amqp_framing.h	71;"	d
AMQP_NOT_FOUND	librabbitmq\amqp_framing.h	60;"	d
AMQP_NOT_IMPLEMENTED	librabbitmq\amqp_framing.h	72;"	d
AMQP_NO_CONSUMERS	librabbitmq\amqp_framing.h	58;"	d
AMQP_NO_ROUTE	librabbitmq\amqp_framing.h	57;"	d
AMQP_PRECONDITION_FAILED	librabbitmq\amqp_framing.h	62;"	d
AMQP_PROTOCOL_PORT	librabbitmq\amqp_framing.h	48;"	d
AMQP_PROTOCOL_VERSION_MAJOR	librabbitmq\amqp_framing.h	45;"	d
AMQP_PROTOCOL_VERSION_MINOR	librabbitmq\amqp_framing.h	46;"	d
AMQP_PROTOCOL_VERSION_REVISION	librabbitmq\amqp_framing.h	47;"	d
AMQP_QUEUE_BIND_METHOD	librabbitmq\amqp_framing.h	425;"	d
AMQP_QUEUE_BIND_OK_METHOD	librabbitmq\amqp_framing.h	436;"	d
AMQP_QUEUE_CLASS	librabbitmq\amqp_framing.h	704;"	d
AMQP_QUEUE_DECLARE_METHOD	librabbitmq\amqp_framing.h	404;"	d
AMQP_QUEUE_DECLARE_OK_METHOD	librabbitmq\amqp_framing.h	417;"	d
AMQP_QUEUE_DELETE_METHOD	librabbitmq\amqp_framing.h	456;"	d
AMQP_QUEUE_DELETE_OK_METHOD	librabbitmq\amqp_framing.h	466;"	d
AMQP_QUEUE_PURGE_METHOD	librabbitmq\amqp_framing.h	442;"	d
AMQP_QUEUE_PURGE_OK_METHOD	librabbitmq\amqp_framing.h	450;"	d
AMQP_QUEUE_UNBIND_METHOD	librabbitmq\amqp_framing.h	472;"	d
AMQP_QUEUE_UNBIND_OK_METHOD	librabbitmq\amqp_framing.h	482;"	d
AMQP_REPLY_SUCCESS	librabbitmq\amqp_framing.h	55;"	d
AMQP_RESOURCE_ERROR	librabbitmq\amqp_framing.h	70;"	d
AMQP_RESOURCE_LOCKED	librabbitmq\amqp_framing.h	61;"	d
AMQP_SYNTAX_ERROR	librabbitmq\amqp_framing.h	66;"	d
AMQP_TX_CLASS	librabbitmq\amqp_framing.h	745;"	d
AMQP_TX_COMMIT_METHOD	librabbitmq\amqp_framing.h	639;"	d
AMQP_TX_COMMIT_OK_METHOD	librabbitmq\amqp_framing.h	645;"	d
AMQP_TX_ROLLBACK_METHOD	librabbitmq\amqp_framing.h	651;"	d
AMQP_TX_ROLLBACK_OK_METHOD	librabbitmq\amqp_framing.h	657;"	d
AMQP_TX_SELECT_METHOD	librabbitmq\amqp_framing.h	627;"	d
AMQP_TX_SELECT_OK_METHOD	librabbitmq\amqp_framing.h	633;"	d
AMQP_UNEXPECTED_FRAME	librabbitmq\amqp_framing.h	69;"	d
_flags	librabbitmq\amqp_framing.h	/^  amqp_flags_t _flags; \/**< bit-mask of set fields *\/$/;"	m	struct:amqp_access_properties_t_
_flags	librabbitmq\amqp_framing.h	/^  amqp_flags_t _flags; \/**< bit-mask of set fields *\/$/;"	m	struct:amqp_basic_properties_t_
_flags	librabbitmq\amqp_framing.h	/^  amqp_flags_t _flags; \/**< bit-mask of set fields *\/$/;"	m	struct:amqp_channel_properties_t_
_flags	librabbitmq\amqp_framing.h	/^  amqp_flags_t _flags; \/**< bit-mask of set fields *\/$/;"	m	struct:amqp_confirm_properties_t_
_flags	librabbitmq\amqp_framing.h	/^  amqp_flags_t _flags; \/**< bit-mask of set fields *\/$/;"	m	struct:amqp_connection_properties_t_
_flags	librabbitmq\amqp_framing.h	/^  amqp_flags_t _flags; \/**< bit-mask of set fields *\/$/;"	m	struct:amqp_exchange_properties_t_
_flags	librabbitmq\amqp_framing.h	/^  amqp_flags_t _flags; \/**< bit-mask of set fields *\/$/;"	m	struct:amqp_queue_properties_t_
_flags	librabbitmq\amqp_framing.h	/^  amqp_flags_t _flags; \/**< bit-mask of set fields *\/$/;"	m	struct:amqp_tx_properties_t_
active	librabbitmq\amqp_framing.h	/^  amqp_boolean_t active; \/**< active *\/$/;"	m	struct:amqp_access_request_t_
active	librabbitmq\amqp_framing.h	/^  amqp_boolean_t active; \/**< active *\/$/;"	m	struct:amqp_channel_flow_ok_t_
active	librabbitmq\amqp_framing.h	/^  amqp_boolean_t active; \/**< active *\/$/;"	m	struct:amqp_channel_flow_t_
amqp_access_properties_t	librabbitmq\amqp_framing.h	/^} amqp_access_properties_t;$/;"	t	typeref:struct:amqp_access_properties_t_
amqp_access_properties_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_access_properties_t_ {$/;"	s
amqp_access_request_ok_t	librabbitmq\amqp_framing.h	/^} amqp_access_request_ok_t;$/;"	t	typeref:struct:amqp_access_request_ok_t_
amqp_access_request_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_access_request_ok_t_ {$/;"	s
amqp_access_request_t	librabbitmq\amqp_framing.h	/^} amqp_access_request_t;$/;"	t	typeref:struct:amqp_access_request_t_
amqp_access_request_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_access_request_t_ {$/;"	s
amqp_basic_ack_t	librabbitmq\amqp_framing.h	/^} amqp_basic_ack_t;$/;"	t	typeref:struct:amqp_basic_ack_t_
amqp_basic_ack_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_ack_t_ {$/;"	s
amqp_basic_cancel_ok_t	librabbitmq\amqp_framing.h	/^} amqp_basic_cancel_ok_t;$/;"	t	typeref:struct:amqp_basic_cancel_ok_t_
amqp_basic_cancel_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_cancel_ok_t_ {$/;"	s
amqp_basic_cancel_t	librabbitmq\amqp_framing.h	/^} amqp_basic_cancel_t;$/;"	t	typeref:struct:amqp_basic_cancel_t_
amqp_basic_cancel_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_cancel_t_ {$/;"	s
amqp_basic_consume_ok_t	librabbitmq\amqp_framing.h	/^} amqp_basic_consume_ok_t;$/;"	t	typeref:struct:amqp_basic_consume_ok_t_
amqp_basic_consume_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_consume_ok_t_ {$/;"	s
amqp_basic_consume_t	librabbitmq\amqp_framing.h	/^} amqp_basic_consume_t;$/;"	t	typeref:struct:amqp_basic_consume_t_
amqp_basic_consume_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_consume_t_ {$/;"	s
amqp_basic_deliver_t	librabbitmq\amqp_framing.h	/^} amqp_basic_deliver_t;$/;"	t	typeref:struct:amqp_basic_deliver_t_
amqp_basic_deliver_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_deliver_t_ {$/;"	s
amqp_basic_get_empty_t	librabbitmq\amqp_framing.h	/^} amqp_basic_get_empty_t;$/;"	t	typeref:struct:amqp_basic_get_empty_t_
amqp_basic_get_empty_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_get_empty_t_ {$/;"	s
amqp_basic_get_ok_t	librabbitmq\amqp_framing.h	/^} amqp_basic_get_ok_t;$/;"	t	typeref:struct:amqp_basic_get_ok_t_
amqp_basic_get_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_get_ok_t_ {$/;"	s
amqp_basic_get_t	librabbitmq\amqp_framing.h	/^} amqp_basic_get_t;$/;"	t	typeref:struct:amqp_basic_get_t_
amqp_basic_get_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_get_t_ {$/;"	s
amqp_basic_nack_t	librabbitmq\amqp_framing.h	/^} amqp_basic_nack_t;$/;"	t	typeref:struct:amqp_basic_nack_t_
amqp_basic_nack_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_nack_t_ {$/;"	s
amqp_basic_properties_t	librabbitmq\amqp_framing.h	/^} amqp_basic_properties_t;$/;"	t	typeref:struct:amqp_basic_properties_t_
amqp_basic_properties_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_properties_t_ {$/;"	s
amqp_basic_publish_t	librabbitmq\amqp_framing.h	/^} amqp_basic_publish_t;$/;"	t	typeref:struct:amqp_basic_publish_t_
amqp_basic_publish_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_publish_t_ {$/;"	s
amqp_basic_qos_ok_t	librabbitmq\amqp_framing.h	/^} amqp_basic_qos_ok_t;$/;"	t	typeref:struct:amqp_basic_qos_ok_t_
amqp_basic_qos_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_qos_ok_t_ {$/;"	s
amqp_basic_qos_t	librabbitmq\amqp_framing.h	/^} amqp_basic_qos_t;$/;"	t	typeref:struct:amqp_basic_qos_t_
amqp_basic_qos_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_qos_t_ {$/;"	s
amqp_basic_recover_async_t	librabbitmq\amqp_framing.h	/^} amqp_basic_recover_async_t;$/;"	t	typeref:struct:amqp_basic_recover_async_t_
amqp_basic_recover_async_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_recover_async_t_ {$/;"	s
amqp_basic_recover_ok_t	librabbitmq\amqp_framing.h	/^} amqp_basic_recover_ok_t;$/;"	t	typeref:struct:amqp_basic_recover_ok_t_
amqp_basic_recover_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_recover_ok_t_ {$/;"	s
amqp_basic_recover_t	librabbitmq\amqp_framing.h	/^} amqp_basic_recover_t;$/;"	t	typeref:struct:amqp_basic_recover_t_
amqp_basic_recover_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_recover_t_ {$/;"	s
amqp_basic_reject_t	librabbitmq\amqp_framing.h	/^} amqp_basic_reject_t;$/;"	t	typeref:struct:amqp_basic_reject_t_
amqp_basic_reject_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_reject_t_ {$/;"	s
amqp_basic_return_t	librabbitmq\amqp_framing.h	/^} amqp_basic_return_t;$/;"	t	typeref:struct:amqp_basic_return_t_
amqp_basic_return_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_basic_return_t_ {$/;"	s
amqp_channel_close_ok_t	librabbitmq\amqp_framing.h	/^} amqp_channel_close_ok_t;$/;"	t	typeref:struct:amqp_channel_close_ok_t_
amqp_channel_close_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_channel_close_ok_t_ {$/;"	s
amqp_channel_close_t	librabbitmq\amqp_framing.h	/^} amqp_channel_close_t;$/;"	t	typeref:struct:amqp_channel_close_t_
amqp_channel_close_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_channel_close_t_ {$/;"	s
amqp_channel_flow_ok_t	librabbitmq\amqp_framing.h	/^} amqp_channel_flow_ok_t;$/;"	t	typeref:struct:amqp_channel_flow_ok_t_
amqp_channel_flow_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_channel_flow_ok_t_ {$/;"	s
amqp_channel_flow_t	librabbitmq\amqp_framing.h	/^} amqp_channel_flow_t;$/;"	t	typeref:struct:amqp_channel_flow_t_
amqp_channel_flow_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_channel_flow_t_ {$/;"	s
amqp_channel_open_ok_t	librabbitmq\amqp_framing.h	/^} amqp_channel_open_ok_t;$/;"	t	typeref:struct:amqp_channel_open_ok_t_
amqp_channel_open_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_channel_open_ok_t_ {$/;"	s
amqp_channel_open_t	librabbitmq\amqp_framing.h	/^} amqp_channel_open_t;$/;"	t	typeref:struct:amqp_channel_open_t_
amqp_channel_open_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_channel_open_t_ {$/;"	s
amqp_channel_properties_t	librabbitmq\amqp_framing.h	/^} amqp_channel_properties_t;$/;"	t	typeref:struct:amqp_channel_properties_t_
amqp_channel_properties_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_channel_properties_t_ {$/;"	s
amqp_confirm_properties_t	librabbitmq\amqp_framing.h	/^} amqp_confirm_properties_t;$/;"	t	typeref:struct:amqp_confirm_properties_t_
amqp_confirm_properties_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_confirm_properties_t_ {$/;"	s
amqp_confirm_select_ok_t	librabbitmq\amqp_framing.h	/^} amqp_confirm_select_ok_t;$/;"	t	typeref:struct:amqp_confirm_select_ok_t_
amqp_confirm_select_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_confirm_select_ok_t_ {$/;"	s
amqp_confirm_select_t	librabbitmq\amqp_framing.h	/^} amqp_confirm_select_t;$/;"	t	typeref:struct:amqp_confirm_select_t_
amqp_confirm_select_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_confirm_select_t_ {$/;"	s
amqp_connection_blocked_t	librabbitmq\amqp_framing.h	/^} amqp_connection_blocked_t;$/;"	t	typeref:struct:amqp_connection_blocked_t_
amqp_connection_blocked_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_connection_blocked_t_ {$/;"	s
amqp_connection_close_ok_t	librabbitmq\amqp_framing.h	/^} amqp_connection_close_ok_t;$/;"	t	typeref:struct:amqp_connection_close_ok_t_
amqp_connection_close_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_connection_close_ok_t_ {$/;"	s
amqp_connection_close_t	librabbitmq\amqp_framing.h	/^} amqp_connection_close_t;$/;"	t	typeref:struct:amqp_connection_close_t_
amqp_connection_close_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_connection_close_t_ {$/;"	s
amqp_connection_open_ok_t	librabbitmq\amqp_framing.h	/^} amqp_connection_open_ok_t;$/;"	t	typeref:struct:amqp_connection_open_ok_t_
amqp_connection_open_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_connection_open_ok_t_ {$/;"	s
amqp_connection_open_t	librabbitmq\amqp_framing.h	/^} amqp_connection_open_t;$/;"	t	typeref:struct:amqp_connection_open_t_
amqp_connection_open_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_connection_open_t_ {$/;"	s
amqp_connection_properties_t	librabbitmq\amqp_framing.h	/^} amqp_connection_properties_t;$/;"	t	typeref:struct:amqp_connection_properties_t_
amqp_connection_properties_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_connection_properties_t_ {$/;"	s
amqp_connection_secure_ok_t	librabbitmq\amqp_framing.h	/^} amqp_connection_secure_ok_t;$/;"	t	typeref:struct:amqp_connection_secure_ok_t_
amqp_connection_secure_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_connection_secure_ok_t_ {$/;"	s
amqp_connection_secure_t	librabbitmq\amqp_framing.h	/^} amqp_connection_secure_t;$/;"	t	typeref:struct:amqp_connection_secure_t_
amqp_connection_secure_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_connection_secure_t_ {$/;"	s
amqp_connection_start_ok_t	librabbitmq\amqp_framing.h	/^} amqp_connection_start_ok_t;$/;"	t	typeref:struct:amqp_connection_start_ok_t_
amqp_connection_start_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_connection_start_ok_t_ {$/;"	s
amqp_connection_start_t	librabbitmq\amqp_framing.h	/^} amqp_connection_start_t;$/;"	t	typeref:struct:amqp_connection_start_t_
amqp_connection_start_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_connection_start_t_ {$/;"	s
amqp_connection_tune_ok_t	librabbitmq\amqp_framing.h	/^} amqp_connection_tune_ok_t;$/;"	t	typeref:struct:amqp_connection_tune_ok_t_
amqp_connection_tune_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_connection_tune_ok_t_ {$/;"	s
amqp_connection_tune_t	librabbitmq\amqp_framing.h	/^} amqp_connection_tune_t;$/;"	t	typeref:struct:amqp_connection_tune_t_
amqp_connection_tune_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_connection_tune_t_ {$/;"	s
amqp_connection_unblocked_t	librabbitmq\amqp_framing.h	/^} amqp_connection_unblocked_t;$/;"	t	typeref:struct:amqp_connection_unblocked_t_
amqp_connection_unblocked_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_connection_unblocked_t_ {$/;"	s
amqp_exchange_bind_ok_t	librabbitmq\amqp_framing.h	/^} amqp_exchange_bind_ok_t;$/;"	t	typeref:struct:amqp_exchange_bind_ok_t_
amqp_exchange_bind_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_exchange_bind_ok_t_ {$/;"	s
amqp_exchange_bind_t	librabbitmq\amqp_framing.h	/^} amqp_exchange_bind_t;$/;"	t	typeref:struct:amqp_exchange_bind_t_
amqp_exchange_bind_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_exchange_bind_t_ {$/;"	s
amqp_exchange_declare_ok_t	librabbitmq\amqp_framing.h	/^} amqp_exchange_declare_ok_t;$/;"	t	typeref:struct:amqp_exchange_declare_ok_t_
amqp_exchange_declare_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_exchange_declare_ok_t_ {$/;"	s
amqp_exchange_declare_t	librabbitmq\amqp_framing.h	/^} amqp_exchange_declare_t;$/;"	t	typeref:struct:amqp_exchange_declare_t_
amqp_exchange_declare_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_exchange_declare_t_ {$/;"	s
amqp_exchange_delete_ok_t	librabbitmq\amqp_framing.h	/^} amqp_exchange_delete_ok_t;$/;"	t	typeref:struct:amqp_exchange_delete_ok_t_
amqp_exchange_delete_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_exchange_delete_ok_t_ {$/;"	s
amqp_exchange_delete_t	librabbitmq\amqp_framing.h	/^} amqp_exchange_delete_t;$/;"	t	typeref:struct:amqp_exchange_delete_t_
amqp_exchange_delete_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_exchange_delete_t_ {$/;"	s
amqp_exchange_properties_t	librabbitmq\amqp_framing.h	/^} amqp_exchange_properties_t;$/;"	t	typeref:struct:amqp_exchange_properties_t_
amqp_exchange_properties_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_exchange_properties_t_ {$/;"	s
amqp_exchange_unbind_ok_t	librabbitmq\amqp_framing.h	/^} amqp_exchange_unbind_ok_t;$/;"	t	typeref:struct:amqp_exchange_unbind_ok_t_
amqp_exchange_unbind_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_exchange_unbind_ok_t_ {$/;"	s
amqp_exchange_unbind_t	librabbitmq\amqp_framing.h	/^} amqp_exchange_unbind_t;$/;"	t	typeref:struct:amqp_exchange_unbind_t_
amqp_exchange_unbind_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_exchange_unbind_t_ {$/;"	s
amqp_queue_bind_ok_t	librabbitmq\amqp_framing.h	/^} amqp_queue_bind_ok_t;$/;"	t	typeref:struct:amqp_queue_bind_ok_t_
amqp_queue_bind_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_queue_bind_ok_t_ {$/;"	s
amqp_queue_bind_t	librabbitmq\amqp_framing.h	/^} amqp_queue_bind_t;$/;"	t	typeref:struct:amqp_queue_bind_t_
amqp_queue_bind_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_queue_bind_t_ {$/;"	s
amqp_queue_declare_ok_t	librabbitmq\amqp_framing.h	/^} amqp_queue_declare_ok_t;$/;"	t	typeref:struct:amqp_queue_declare_ok_t_
amqp_queue_declare_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_queue_declare_ok_t_ {$/;"	s
amqp_queue_declare_t	librabbitmq\amqp_framing.h	/^} amqp_queue_declare_t;$/;"	t	typeref:struct:amqp_queue_declare_t_
amqp_queue_declare_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_queue_declare_t_ {$/;"	s
amqp_queue_delete_ok_t	librabbitmq\amqp_framing.h	/^} amqp_queue_delete_ok_t;$/;"	t	typeref:struct:amqp_queue_delete_ok_t_
amqp_queue_delete_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_queue_delete_ok_t_ {$/;"	s
amqp_queue_delete_t	librabbitmq\amqp_framing.h	/^} amqp_queue_delete_t;$/;"	t	typeref:struct:amqp_queue_delete_t_
amqp_queue_delete_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_queue_delete_t_ {$/;"	s
amqp_queue_properties_t	librabbitmq\amqp_framing.h	/^} amqp_queue_properties_t;$/;"	t	typeref:struct:amqp_queue_properties_t_
amqp_queue_properties_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_queue_properties_t_ {$/;"	s
amqp_queue_purge_ok_t	librabbitmq\amqp_framing.h	/^} amqp_queue_purge_ok_t;$/;"	t	typeref:struct:amqp_queue_purge_ok_t_
amqp_queue_purge_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_queue_purge_ok_t_ {$/;"	s
amqp_queue_purge_t	librabbitmq\amqp_framing.h	/^} amqp_queue_purge_t;$/;"	t	typeref:struct:amqp_queue_purge_t_
amqp_queue_purge_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_queue_purge_t_ {$/;"	s
amqp_queue_unbind_ok_t	librabbitmq\amqp_framing.h	/^} amqp_queue_unbind_ok_t;$/;"	t	typeref:struct:amqp_queue_unbind_ok_t_
amqp_queue_unbind_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_queue_unbind_ok_t_ {$/;"	s
amqp_queue_unbind_t	librabbitmq\amqp_framing.h	/^} amqp_queue_unbind_t;$/;"	t	typeref:struct:amqp_queue_unbind_t_
amqp_queue_unbind_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_queue_unbind_t_ {$/;"	s
amqp_tx_commit_ok_t	librabbitmq\amqp_framing.h	/^} amqp_tx_commit_ok_t;$/;"	t	typeref:struct:amqp_tx_commit_ok_t_
amqp_tx_commit_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_tx_commit_ok_t_ {$/;"	s
amqp_tx_commit_t	librabbitmq\amqp_framing.h	/^} amqp_tx_commit_t;$/;"	t	typeref:struct:amqp_tx_commit_t_
amqp_tx_commit_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_tx_commit_t_ {$/;"	s
amqp_tx_properties_t	librabbitmq\amqp_framing.h	/^} amqp_tx_properties_t;$/;"	t	typeref:struct:amqp_tx_properties_t_
amqp_tx_properties_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_tx_properties_t_ {$/;"	s
amqp_tx_rollback_ok_t	librabbitmq\amqp_framing.h	/^} amqp_tx_rollback_ok_t;$/;"	t	typeref:struct:amqp_tx_rollback_ok_t_
amqp_tx_rollback_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_tx_rollback_ok_t_ {$/;"	s
amqp_tx_rollback_t	librabbitmq\amqp_framing.h	/^} amqp_tx_rollback_t;$/;"	t	typeref:struct:amqp_tx_rollback_t_
amqp_tx_rollback_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_tx_rollback_t_ {$/;"	s
amqp_tx_select_ok_t	librabbitmq\amqp_framing.h	/^} amqp_tx_select_ok_t;$/;"	t	typeref:struct:amqp_tx_select_ok_t_
amqp_tx_select_ok_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_tx_select_ok_t_ {$/;"	s
amqp_tx_select_t	librabbitmq\amqp_framing.h	/^} amqp_tx_select_t;$/;"	t	typeref:struct:amqp_tx_select_t_
amqp_tx_select_t_	librabbitmq\amqp_framing.h	/^typedef struct amqp_tx_select_t_ {$/;"	s
app_id	librabbitmq\amqp_framing.h	/^  amqp_bytes_t app_id; \/**< app-id *\/$/;"	m	struct:amqp_basic_properties_t_
arguments	librabbitmq\amqp_framing.h	/^  amqp_table_t arguments; \/**< arguments *\/$/;"	m	struct:amqp_basic_consume_t_
arguments	librabbitmq\amqp_framing.h	/^  amqp_table_t arguments; \/**< arguments *\/$/;"	m	struct:amqp_exchange_bind_t_
arguments	librabbitmq\amqp_framing.h	/^  amqp_table_t arguments; \/**< arguments *\/$/;"	m	struct:amqp_exchange_declare_t_
arguments	librabbitmq\amqp_framing.h	/^  amqp_table_t arguments; \/**< arguments *\/$/;"	m	struct:amqp_exchange_unbind_t_
arguments	librabbitmq\amqp_framing.h	/^  amqp_table_t arguments; \/**< arguments *\/$/;"	m	struct:amqp_queue_bind_t_
arguments	librabbitmq\amqp_framing.h	/^  amqp_table_t arguments; \/**< arguments *\/$/;"	m	struct:amqp_queue_declare_t_
arguments	librabbitmq\amqp_framing.h	/^  amqp_table_t arguments; \/**< arguments *\/$/;"	m	struct:amqp_queue_unbind_t_
auto_delete	librabbitmq\amqp_framing.h	/^  amqp_boolean_t auto_delete; \/**< auto-delete *\/$/;"	m	struct:amqp_exchange_declare_t_
auto_delete	librabbitmq\amqp_framing.h	/^  amqp_boolean_t auto_delete; \/**< auto-delete *\/$/;"	m	struct:amqp_queue_declare_t_
capabilities	librabbitmq\amqp_framing.h	/^  amqp_bytes_t capabilities; \/**< capabilities *\/$/;"	m	struct:amqp_connection_open_t_
challenge	librabbitmq\amqp_framing.h	/^  amqp_bytes_t challenge; \/**< challenge *\/$/;"	m	struct:amqp_connection_secure_t_
channel_id	librabbitmq\amqp_framing.h	/^  amqp_bytes_t channel_id; \/**< channel-id *\/$/;"	m	struct:amqp_channel_open_ok_t_
channel_max	librabbitmq\amqp_framing.h	/^  uint16_t channel_max; \/**< channel-max *\/$/;"	m	struct:amqp_connection_tune_ok_t_
channel_max	librabbitmq\amqp_framing.h	/^  uint16_t channel_max; \/**< channel-max *\/$/;"	m	struct:amqp_connection_tune_t_
class_id	librabbitmq\amqp_framing.h	/^  uint16_t class_id; \/**< class-id *\/$/;"	m	struct:amqp_channel_close_t_
class_id	librabbitmq\amqp_framing.h	/^  uint16_t class_id; \/**< class-id *\/$/;"	m	struct:amqp_connection_close_t_
client_properties	librabbitmq\amqp_framing.h	/^  amqp_table_t client_properties; \/**< client-properties *\/$/;"	m	struct:amqp_connection_start_ok_t_
cluster_id	librabbitmq\amqp_framing.h	/^  amqp_bytes_t cluster_id; \/**< cluster-id *\/$/;"	m	struct:amqp_basic_get_empty_t_
cluster_id	librabbitmq\amqp_framing.h	/^  amqp_bytes_t cluster_id; \/**< cluster-id *\/$/;"	m	struct:amqp_basic_properties_t_
consumer_count	librabbitmq\amqp_framing.h	/^  uint32_t consumer_count; \/**< consumer-count *\/$/;"	m	struct:amqp_queue_declare_ok_t_
consumer_tag	librabbitmq\amqp_framing.h	/^  amqp_bytes_t consumer_tag; \/**< consumer-tag *\/$/;"	m	struct:amqp_basic_cancel_ok_t_
consumer_tag	librabbitmq\amqp_framing.h	/^  amqp_bytes_t consumer_tag; \/**< consumer-tag *\/$/;"	m	struct:amqp_basic_cancel_t_
consumer_tag	librabbitmq\amqp_framing.h	/^  amqp_bytes_t consumer_tag; \/**< consumer-tag *\/$/;"	m	struct:amqp_basic_consume_ok_t_
consumer_tag	librabbitmq\amqp_framing.h	/^  amqp_bytes_t consumer_tag; \/**< consumer-tag *\/$/;"	m	struct:amqp_basic_consume_t_
consumer_tag	librabbitmq\amqp_framing.h	/^  amqp_bytes_t consumer_tag; \/**< consumer-tag *\/$/;"	m	struct:amqp_basic_deliver_t_
content_encoding	librabbitmq\amqp_framing.h	/^  amqp_bytes_t content_encoding; \/**< content-encoding *\/$/;"	m	struct:amqp_basic_properties_t_
content_type	librabbitmq\amqp_framing.h	/^  amqp_bytes_t content_type; \/**< content-type *\/$/;"	m	struct:amqp_basic_properties_t_
correlation_id	librabbitmq\amqp_framing.h	/^  amqp_bytes_t correlation_id; \/**< correlation-id *\/$/;"	m	struct:amqp_basic_properties_t_
delivery_mode	librabbitmq\amqp_framing.h	/^  uint8_t delivery_mode; \/**< delivery-mode *\/$/;"	m	struct:amqp_basic_properties_t_
delivery_tag	librabbitmq\amqp_framing.h	/^  uint64_t delivery_tag; \/**< delivery-tag *\/$/;"	m	struct:amqp_basic_ack_t_
delivery_tag	librabbitmq\amqp_framing.h	/^  uint64_t delivery_tag; \/**< delivery-tag *\/$/;"	m	struct:amqp_basic_deliver_t_
delivery_tag	librabbitmq\amqp_framing.h	/^  uint64_t delivery_tag; \/**< delivery-tag *\/$/;"	m	struct:amqp_basic_get_ok_t_
delivery_tag	librabbitmq\amqp_framing.h	/^  uint64_t delivery_tag; \/**< delivery-tag *\/$/;"	m	struct:amqp_basic_nack_t_
delivery_tag	librabbitmq\amqp_framing.h	/^  uint64_t delivery_tag; \/**< delivery-tag *\/$/;"	m	struct:amqp_basic_reject_t_
destination	librabbitmq\amqp_framing.h	/^  amqp_bytes_t destination; \/**< destination *\/$/;"	m	struct:amqp_exchange_bind_t_
destination	librabbitmq\amqp_framing.h	/^  amqp_bytes_t destination; \/**< destination *\/$/;"	m	struct:amqp_exchange_unbind_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_access_properties_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_basic_qos_ok_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_basic_recover_ok_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_channel_close_ok_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_channel_properties_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_confirm_properties_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_confirm_select_ok_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_connection_close_ok_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_connection_properties_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_connection_unblocked_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_exchange_bind_ok_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_exchange_declare_ok_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_exchange_delete_ok_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_exchange_properties_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_exchange_unbind_ok_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_queue_bind_ok_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_queue_properties_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_queue_unbind_ok_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_tx_commit_ok_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_tx_commit_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_tx_properties_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_tx_rollback_ok_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_tx_rollback_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_tx_select_ok_t_
dummy	librabbitmq\amqp_framing.h	/^  char dummy; \/**< Dummy field to avoid empty struct *\/$/;"	m	struct:amqp_tx_select_t_
durable	librabbitmq\amqp_framing.h	/^  amqp_boolean_t durable; \/**< durable *\/$/;"	m	struct:amqp_exchange_declare_t_
durable	librabbitmq\amqp_framing.h	/^  amqp_boolean_t durable; \/**< durable *\/$/;"	m	struct:amqp_queue_declare_t_
exchange	librabbitmq\amqp_framing.h	/^  amqp_bytes_t exchange; \/**< exchange *\/$/;"	m	struct:amqp_basic_deliver_t_
exchange	librabbitmq\amqp_framing.h	/^  amqp_bytes_t exchange; \/**< exchange *\/$/;"	m	struct:amqp_basic_get_ok_t_
exchange	librabbitmq\amqp_framing.h	/^  amqp_bytes_t exchange; \/**< exchange *\/$/;"	m	struct:amqp_basic_publish_t_
exchange	librabbitmq\amqp_framing.h	/^  amqp_bytes_t exchange; \/**< exchange *\/$/;"	m	struct:amqp_basic_return_t_
exchange	librabbitmq\amqp_framing.h	/^  amqp_bytes_t exchange; \/**< exchange *\/$/;"	m	struct:amqp_exchange_declare_t_
exchange	librabbitmq\amqp_framing.h	/^  amqp_bytes_t exchange; \/**< exchange *\/$/;"	m	struct:amqp_exchange_delete_t_
exchange	librabbitmq\amqp_framing.h	/^  amqp_bytes_t exchange; \/**< exchange *\/$/;"	m	struct:amqp_queue_bind_t_
exchange	librabbitmq\amqp_framing.h	/^  amqp_bytes_t exchange; \/**< exchange *\/$/;"	m	struct:amqp_queue_unbind_t_
exclusive	librabbitmq\amqp_framing.h	/^  amqp_boolean_t exclusive; \/**< exclusive *\/$/;"	m	struct:amqp_access_request_t_
exclusive	librabbitmq\amqp_framing.h	/^  amqp_boolean_t exclusive; \/**< exclusive *\/$/;"	m	struct:amqp_basic_consume_t_
exclusive	librabbitmq\amqp_framing.h	/^  amqp_boolean_t exclusive; \/**< exclusive *\/$/;"	m	struct:amqp_queue_declare_t_
expiration	librabbitmq\amqp_framing.h	/^  amqp_bytes_t expiration; \/**< expiration *\/$/;"	m	struct:amqp_basic_properties_t_
frame_max	librabbitmq\amqp_framing.h	/^  uint32_t frame_max; \/**< frame-max *\/$/;"	m	struct:amqp_connection_tune_ok_t_
frame_max	librabbitmq\amqp_framing.h	/^  uint32_t frame_max; \/**< frame-max *\/$/;"	m	struct:amqp_connection_tune_t_
global	librabbitmq\amqp_framing.h	/^  amqp_boolean_t global; \/**< global *\/$/;"	m	struct:amqp_basic_qos_t_
headers	librabbitmq\amqp_framing.h	/^  amqp_table_t headers; \/**< headers *\/$/;"	m	struct:amqp_basic_properties_t_
heartbeat	librabbitmq\amqp_framing.h	/^  uint16_t heartbeat; \/**< heartbeat *\/$/;"	m	struct:amqp_connection_tune_ok_t_
heartbeat	librabbitmq\amqp_framing.h	/^  uint16_t heartbeat; \/**< heartbeat *\/$/;"	m	struct:amqp_connection_tune_t_
if_empty	librabbitmq\amqp_framing.h	/^  amqp_boolean_t if_empty; \/**< if-empty *\/$/;"	m	struct:amqp_queue_delete_t_
if_unused	librabbitmq\amqp_framing.h	/^  amqp_boolean_t if_unused; \/**< if-unused *\/$/;"	m	struct:amqp_exchange_delete_t_
if_unused	librabbitmq\amqp_framing.h	/^  amqp_boolean_t if_unused; \/**< if-unused *\/$/;"	m	struct:amqp_queue_delete_t_
immediate	librabbitmq\amqp_framing.h	/^  amqp_boolean_t immediate; \/**< immediate *\/$/;"	m	struct:amqp_basic_publish_t_
insist	librabbitmq\amqp_framing.h	/^  amqp_boolean_t insist; \/**< insist *\/$/;"	m	struct:amqp_connection_open_t_
internal	librabbitmq\amqp_framing.h	/^  amqp_boolean_t internal; \/**< internal *\/$/;"	m	struct:amqp_exchange_declare_t_
known_hosts	librabbitmq\amqp_framing.h	/^  amqp_bytes_t known_hosts; \/**< known-hosts *\/$/;"	m	struct:amqp_connection_open_ok_t_
locale	librabbitmq\amqp_framing.h	/^  amqp_bytes_t locale; \/**< locale *\/$/;"	m	struct:amqp_connection_start_ok_t_
locales	librabbitmq\amqp_framing.h	/^  amqp_bytes_t locales; \/**< locales *\/$/;"	m	struct:amqp_connection_start_t_
mandatory	librabbitmq\amqp_framing.h	/^  amqp_boolean_t mandatory; \/**< mandatory *\/$/;"	m	struct:amqp_basic_publish_t_
mechanism	librabbitmq\amqp_framing.h	/^  amqp_bytes_t mechanism; \/**< mechanism *\/$/;"	m	struct:amqp_connection_start_ok_t_
mechanisms	librabbitmq\amqp_framing.h	/^  amqp_bytes_t mechanisms; \/**< mechanisms *\/$/;"	m	struct:amqp_connection_start_t_
message_count	librabbitmq\amqp_framing.h	/^  uint32_t message_count; \/**< message-count *\/$/;"	m	struct:amqp_basic_get_ok_t_
message_count	librabbitmq\amqp_framing.h	/^  uint32_t message_count; \/**< message-count *\/$/;"	m	struct:amqp_queue_declare_ok_t_
message_count	librabbitmq\amqp_framing.h	/^  uint32_t message_count; \/**< message-count *\/$/;"	m	struct:amqp_queue_delete_ok_t_
message_count	librabbitmq\amqp_framing.h	/^  uint32_t message_count; \/**< message-count *\/$/;"	m	struct:amqp_queue_purge_ok_t_
message_id	librabbitmq\amqp_framing.h	/^  amqp_bytes_t message_id; \/**< message-id *\/$/;"	m	struct:amqp_basic_properties_t_
method_id	librabbitmq\amqp_framing.h	/^  uint16_t method_id; \/**< method-id *\/$/;"	m	struct:amqp_channel_close_t_
method_id	librabbitmq\amqp_framing.h	/^  uint16_t method_id; \/**< method-id *\/$/;"	m	struct:amqp_connection_close_t_
multiple	librabbitmq\amqp_framing.h	/^  amqp_boolean_t multiple; \/**< multiple *\/$/;"	m	struct:amqp_basic_ack_t_
multiple	librabbitmq\amqp_framing.h	/^  amqp_boolean_t multiple; \/**< multiple *\/$/;"	m	struct:amqp_basic_nack_t_
no_ack	librabbitmq\amqp_framing.h	/^  amqp_boolean_t no_ack; \/**< no-ack *\/$/;"	m	struct:amqp_basic_consume_t_
no_ack	librabbitmq\amqp_framing.h	/^  amqp_boolean_t no_ack; \/**< no-ack *\/$/;"	m	struct:amqp_basic_get_t_
no_local	librabbitmq\amqp_framing.h	/^  amqp_boolean_t no_local; \/**< no-local *\/$/;"	m	struct:amqp_basic_consume_t_
nowait	librabbitmq\amqp_framing.h	/^  amqp_boolean_t nowait; \/**< nowait *\/$/;"	m	struct:amqp_basic_cancel_t_
nowait	librabbitmq\amqp_framing.h	/^  amqp_boolean_t nowait; \/**< nowait *\/$/;"	m	struct:amqp_basic_consume_t_
nowait	librabbitmq\amqp_framing.h	/^  amqp_boolean_t nowait; \/**< nowait *\/$/;"	m	struct:amqp_confirm_select_t_
nowait	librabbitmq\amqp_framing.h	/^  amqp_boolean_t nowait; \/**< nowait *\/$/;"	m	struct:amqp_exchange_bind_t_
nowait	librabbitmq\amqp_framing.h	/^  amqp_boolean_t nowait; \/**< nowait *\/$/;"	m	struct:amqp_exchange_declare_t_
nowait	librabbitmq\amqp_framing.h	/^  amqp_boolean_t nowait; \/**< nowait *\/$/;"	m	struct:amqp_exchange_delete_t_
nowait	librabbitmq\amqp_framing.h	/^  amqp_boolean_t nowait; \/**< nowait *\/$/;"	m	struct:amqp_exchange_unbind_t_
nowait	librabbitmq\amqp_framing.h	/^  amqp_boolean_t nowait; \/**< nowait *\/$/;"	m	struct:amqp_queue_bind_t_
nowait	librabbitmq\amqp_framing.h	/^  amqp_boolean_t nowait; \/**< nowait *\/$/;"	m	struct:amqp_queue_declare_t_
nowait	librabbitmq\amqp_framing.h	/^  amqp_boolean_t nowait; \/**< nowait *\/$/;"	m	struct:amqp_queue_delete_t_
nowait	librabbitmq\amqp_framing.h	/^  amqp_boolean_t nowait; \/**< nowait *\/$/;"	m	struct:amqp_queue_purge_t_
out_of_band	librabbitmq\amqp_framing.h	/^  amqp_bytes_t out_of_band; \/**< out-of-band *\/$/;"	m	struct:amqp_channel_open_t_
passive	librabbitmq\amqp_framing.h	/^  amqp_boolean_t passive; \/**< passive *\/$/;"	m	struct:amqp_access_request_t_
passive	librabbitmq\amqp_framing.h	/^  amqp_boolean_t passive; \/**< passive *\/$/;"	m	struct:amqp_exchange_declare_t_
passive	librabbitmq\amqp_framing.h	/^  amqp_boolean_t passive; \/**< passive *\/$/;"	m	struct:amqp_queue_declare_t_
prefetch_count	librabbitmq\amqp_framing.h	/^  uint16_t prefetch_count; \/**< prefetch-count *\/$/;"	m	struct:amqp_basic_qos_t_
prefetch_size	librabbitmq\amqp_framing.h	/^  uint32_t prefetch_size; \/**< prefetch-size *\/$/;"	m	struct:amqp_basic_qos_t_
priority	librabbitmq\amqp_framing.h	/^  uint8_t priority; \/**< priority *\/$/;"	m	struct:amqp_basic_properties_t_
queue	librabbitmq\amqp_framing.h	/^  amqp_bytes_t queue; \/**< queue *\/$/;"	m	struct:amqp_basic_consume_t_
queue	librabbitmq\amqp_framing.h	/^  amqp_bytes_t queue; \/**< queue *\/$/;"	m	struct:amqp_basic_get_t_
queue	librabbitmq\amqp_framing.h	/^  amqp_bytes_t queue; \/**< queue *\/$/;"	m	struct:amqp_queue_bind_t_
queue	librabbitmq\amqp_framing.h	/^  amqp_bytes_t queue; \/**< queue *\/$/;"	m	struct:amqp_queue_declare_ok_t_
queue	librabbitmq\amqp_framing.h	/^  amqp_bytes_t queue; \/**< queue *\/$/;"	m	struct:amqp_queue_declare_t_
queue	librabbitmq\amqp_framing.h	/^  amqp_bytes_t queue; \/**< queue *\/$/;"	m	struct:amqp_queue_delete_t_
queue	librabbitmq\amqp_framing.h	/^  amqp_bytes_t queue; \/**< queue *\/$/;"	m	struct:amqp_queue_purge_t_
queue	librabbitmq\amqp_framing.h	/^  amqp_bytes_t queue; \/**< queue *\/$/;"	m	struct:amqp_queue_unbind_t_
read	librabbitmq\amqp_framing.h	/^  amqp_boolean_t read; \/**< read *\/$/;"	m	struct:amqp_access_request_t_
realm	librabbitmq\amqp_framing.h	/^  amqp_bytes_t realm; \/**< realm *\/$/;"	m	struct:amqp_access_request_t_
reason	librabbitmq\amqp_framing.h	/^  amqp_bytes_t reason; \/**< reason *\/$/;"	m	struct:amqp_connection_blocked_t_
redelivered	librabbitmq\amqp_framing.h	/^  amqp_boolean_t redelivered; \/**< redelivered *\/$/;"	m	struct:amqp_basic_deliver_t_
redelivered	librabbitmq\amqp_framing.h	/^  amqp_boolean_t redelivered; \/**< redelivered *\/$/;"	m	struct:amqp_basic_get_ok_t_
reply_code	librabbitmq\amqp_framing.h	/^  uint16_t reply_code; \/**< reply-code *\/$/;"	m	struct:amqp_basic_return_t_
reply_code	librabbitmq\amqp_framing.h	/^  uint16_t reply_code; \/**< reply-code *\/$/;"	m	struct:amqp_channel_close_t_
reply_code	librabbitmq\amqp_framing.h	/^  uint16_t reply_code; \/**< reply-code *\/$/;"	m	struct:amqp_connection_close_t_
reply_text	librabbitmq\amqp_framing.h	/^  amqp_bytes_t reply_text; \/**< reply-text *\/$/;"	m	struct:amqp_basic_return_t_
reply_text	librabbitmq\amqp_framing.h	/^  amqp_bytes_t reply_text; \/**< reply-text *\/$/;"	m	struct:amqp_channel_close_t_
reply_text	librabbitmq\amqp_framing.h	/^  amqp_bytes_t reply_text; \/**< reply-text *\/$/;"	m	struct:amqp_connection_close_t_
reply_to	librabbitmq\amqp_framing.h	/^  amqp_bytes_t reply_to; \/**< reply-to *\/$/;"	m	struct:amqp_basic_properties_t_
requeue	librabbitmq\amqp_framing.h	/^  amqp_boolean_t requeue; \/**< requeue *\/$/;"	m	struct:amqp_basic_nack_t_
requeue	librabbitmq\amqp_framing.h	/^  amqp_boolean_t requeue; \/**< requeue *\/$/;"	m	struct:amqp_basic_recover_async_t_
requeue	librabbitmq\amqp_framing.h	/^  amqp_boolean_t requeue; \/**< requeue *\/$/;"	m	struct:amqp_basic_recover_t_
requeue	librabbitmq\amqp_framing.h	/^  amqp_boolean_t requeue; \/**< requeue *\/$/;"	m	struct:amqp_basic_reject_t_
response	librabbitmq\amqp_framing.h	/^  amqp_bytes_t response; \/**< response *\/$/;"	m	struct:amqp_connection_secure_ok_t_
response	librabbitmq\amqp_framing.h	/^  amqp_bytes_t response; \/**< response *\/$/;"	m	struct:amqp_connection_start_ok_t_
routing_key	librabbitmq\amqp_framing.h	/^  amqp_bytes_t routing_key; \/**< routing-key *\/$/;"	m	struct:amqp_basic_deliver_t_
routing_key	librabbitmq\amqp_framing.h	/^  amqp_bytes_t routing_key; \/**< routing-key *\/$/;"	m	struct:amqp_basic_get_ok_t_
routing_key	librabbitmq\amqp_framing.h	/^  amqp_bytes_t routing_key; \/**< routing-key *\/$/;"	m	struct:amqp_basic_publish_t_
routing_key	librabbitmq\amqp_framing.h	/^  amqp_bytes_t routing_key; \/**< routing-key *\/$/;"	m	struct:amqp_basic_return_t_
routing_key	librabbitmq\amqp_framing.h	/^  amqp_bytes_t routing_key; \/**< routing-key *\/$/;"	m	struct:amqp_exchange_bind_t_
routing_key	librabbitmq\amqp_framing.h	/^  amqp_bytes_t routing_key; \/**< routing-key *\/$/;"	m	struct:amqp_exchange_unbind_t_
routing_key	librabbitmq\amqp_framing.h	/^  amqp_bytes_t routing_key; \/**< routing-key *\/$/;"	m	struct:amqp_queue_bind_t_
routing_key	librabbitmq\amqp_framing.h	/^  amqp_bytes_t routing_key; \/**< routing-key *\/$/;"	m	struct:amqp_queue_unbind_t_
server_properties	librabbitmq\amqp_framing.h	/^  amqp_table_t server_properties; \/**< server-properties *\/$/;"	m	struct:amqp_connection_start_t_
source	librabbitmq\amqp_framing.h	/^  amqp_bytes_t source; \/**< source *\/$/;"	m	struct:amqp_exchange_bind_t_
source	librabbitmq\amqp_framing.h	/^  amqp_bytes_t source; \/**< source *\/$/;"	m	struct:amqp_exchange_unbind_t_
ticket	librabbitmq\amqp_framing.h	/^  uint16_t ticket; \/**< ticket *\/$/;"	m	struct:amqp_access_request_ok_t_
ticket	librabbitmq\amqp_framing.h	/^  uint16_t ticket; \/**< ticket *\/$/;"	m	struct:amqp_basic_consume_t_
ticket	librabbitmq\amqp_framing.h	/^  uint16_t ticket; \/**< ticket *\/$/;"	m	struct:amqp_basic_get_t_
ticket	librabbitmq\amqp_framing.h	/^  uint16_t ticket; \/**< ticket *\/$/;"	m	struct:amqp_basic_publish_t_
ticket	librabbitmq\amqp_framing.h	/^  uint16_t ticket; \/**< ticket *\/$/;"	m	struct:amqp_exchange_bind_t_
ticket	librabbitmq\amqp_framing.h	/^  uint16_t ticket; \/**< ticket *\/$/;"	m	struct:amqp_exchange_declare_t_
ticket	librabbitmq\amqp_framing.h	/^  uint16_t ticket; \/**< ticket *\/$/;"	m	struct:amqp_exchange_delete_t_
ticket	librabbitmq\amqp_framing.h	/^  uint16_t ticket; \/**< ticket *\/$/;"	m	struct:amqp_exchange_unbind_t_
ticket	librabbitmq\amqp_framing.h	/^  uint16_t ticket; \/**< ticket *\/$/;"	m	struct:amqp_queue_bind_t_
ticket	librabbitmq\amqp_framing.h	/^  uint16_t ticket; \/**< ticket *\/$/;"	m	struct:amqp_queue_declare_t_
ticket	librabbitmq\amqp_framing.h	/^  uint16_t ticket; \/**< ticket *\/$/;"	m	struct:amqp_queue_delete_t_
ticket	librabbitmq\amqp_framing.h	/^  uint16_t ticket; \/**< ticket *\/$/;"	m	struct:amqp_queue_purge_t_
ticket	librabbitmq\amqp_framing.h	/^  uint16_t ticket; \/**< ticket *\/$/;"	m	struct:amqp_queue_unbind_t_
timestamp	librabbitmq\amqp_framing.h	/^  uint64_t timestamp; \/**< timestamp *\/$/;"	m	struct:amqp_basic_properties_t_
type	librabbitmq\amqp_framing.h	/^  amqp_bytes_t type; \/**< type *\/$/;"	m	struct:amqp_basic_properties_t_
type	librabbitmq\amqp_framing.h	/^  amqp_bytes_t type; \/**< type *\/$/;"	m	struct:amqp_exchange_declare_t_
user_id	librabbitmq\amqp_framing.h	/^  amqp_bytes_t user_id; \/**< user-id *\/$/;"	m	struct:amqp_basic_properties_t_
version_major	librabbitmq\amqp_framing.h	/^  uint8_t version_major; \/**< version-major *\/$/;"	m	struct:amqp_connection_start_t_
version_minor	librabbitmq\amqp_framing.h	/^  uint8_t version_minor; \/**< version-minor *\/$/;"	m	struct:amqp_connection_start_t_
virtual_host	librabbitmq\amqp_framing.h	/^  amqp_bytes_t virtual_host; \/**< virtual-host *\/$/;"	m	struct:amqp_connection_open_t_
write	librabbitmq\amqp_framing.h	/^  amqp_boolean_t write; \/**< write *\/$/;"	m	struct:amqp_access_request_t_
amqp_hostcheck	librabbitmq\amqp_hostcheck.c	/^amqp_hostcheck_result amqp_hostcheck(const char *match_pattern,$/;"	f
amqp_hostmatch	librabbitmq\amqp_hostcheck.c	/^static amqp_hostcheck_result amqp_hostmatch(const char *hostname,$/;"	f	file:
amqp_raw_equal	librabbitmq\amqp_hostcheck.c	/^amqp_raw_equal(const char *first, const char *second)$/;"	f	file:
amqp_raw_nequal	librabbitmq\amqp_hostcheck.c	/^amqp_raw_nequal(const char *first, const char *second, size_t max)$/;"	f	file:
amqp_raw_toupper	librabbitmq\amqp_hostcheck.c	/^amqp_raw_toupper(char in)$/;"	f	file:
AMQP_HCR_MATCH	librabbitmq\amqp_hostcheck.h	/^  AMQP_HCR_MATCH = 1$/;"	e	enum:__anon2
AMQP_HCR_NO_MATCH	librabbitmq\amqp_hostcheck.h	/^  AMQP_HCR_NO_MATCH = 0,$/;"	e	enum:__anon2
amqp_hostcheck_result	librabbitmq\amqp_hostcheck.h	/^} amqp_hostcheck_result;$/;"	t	typeref:enum:__anon2
librabbitmq_amqp_hostcheck_h	librabbitmq\amqp_hostcheck.h	3;"	d
amqp_bytes_equal	librabbitmq\amqp_mem.c	/^int amqp_bytes_equal(amqp_bytes_t r, amqp_bytes_t l) {$/;"	f
amqp_bytes_free	librabbitmq\amqp_mem.c	/^void amqp_bytes_free(amqp_bytes_t bytes)$/;"	f
amqp_bytes_malloc	librabbitmq\amqp_mem.c	/^amqp_bytes_t amqp_bytes_malloc(size_t amount)$/;"	f
amqp_bytes_malloc_dup	librabbitmq\amqp_mem.c	/^amqp_bytes_t amqp_bytes_malloc_dup(amqp_bytes_t src)$/;"	f
amqp_cstring_bytes	librabbitmq\amqp_mem.c	/^amqp_bytes_t amqp_cstring_bytes(char const *cstr)$/;"	f
amqp_get_channel_pool	librabbitmq\amqp_mem.c	/^amqp_pool_t *amqp_get_channel_pool(amqp_connection_state_t state, amqp_channel_t channel)$/;"	f
amqp_get_or_create_channel_pool	librabbitmq\amqp_mem.c	/^amqp_pool_t *amqp_get_or_create_channel_pool(amqp_connection_state_t state, amqp_channel_t channel)$/;"	f
amqp_pool_alloc	librabbitmq\amqp_mem.c	/^void *amqp_pool_alloc(amqp_pool_t *pool, size_t amount)$/;"	f
amqp_pool_alloc_bytes	librabbitmq\amqp_mem.c	/^void amqp_pool_alloc_bytes(amqp_pool_t *pool, size_t amount, amqp_bytes_t *output)$/;"	f
amqp_version	librabbitmq\amqp_mem.c	/^char const *amqp_version(void)$/;"	f
amqp_version_number	librabbitmq\amqp_mem.c	/^uint32_t amqp_version_number(void)$/;"	f
empty_amqp_pool	librabbitmq\amqp_mem.c	/^void empty_amqp_pool(amqp_pool_t *pool)$/;"	f
empty_blocklist	librabbitmq\amqp_mem.c	/^static void empty_blocklist(amqp_pool_blocklist_t *x)$/;"	f	file:
init_amqp_pool	librabbitmq\amqp_mem.c	/^void init_amqp_pool(amqp_pool_t *pool, size_t pagesize)$/;"	f
record_pool_block	librabbitmq\amqp_mem.c	/^static int record_pool_block(amqp_pool_blocklist_t *x, void *block)$/;"	f	file:
recycle_amqp_pool	librabbitmq\amqp_mem.c	/^void recycle_amqp_pool(amqp_pool_t *pool)$/;"	f
amqp_openssl_lockarray	librabbitmq\amqp_openssl.c	/^static pthread_mutex_t *amqp_openssl_lockarray = NULL;$/;"	v	file:
amqp_set_initialize_ssl_library	librabbitmq\amqp_openssl.c	/^amqp_set_initialize_ssl_library(amqp_boolean_t do_initialize)$/;"	f
amqp_ssl_locking_callback	librabbitmq\amqp_openssl.c	/^amqp_ssl_locking_callback(int mode, int n,$/;"	f
amqp_ssl_socket_class	librabbitmq\amqp_openssl.c	/^static const struct amqp_socket_class_t amqp_ssl_socket_class = {$/;"	v	typeref:struct:amqp_socket_class_t	file:
amqp_ssl_socket_close	librabbitmq\amqp_openssl.c	/^amqp_ssl_socket_close(void *base, amqp_socket_close_enum force)$/;"	f	file:
amqp_ssl_socket_delete	librabbitmq\amqp_openssl.c	/^amqp_ssl_socket_delete(void *base)$/;"	f	file:
amqp_ssl_socket_get_sockfd	librabbitmq\amqp_openssl.c	/^amqp_ssl_socket_get_sockfd(void *base)$/;"	f	file:
amqp_ssl_socket_new	librabbitmq\amqp_openssl.c	/^amqp_ssl_socket_new(amqp_connection_state_t state)$/;"	f
amqp_ssl_socket_open	librabbitmq\amqp_openssl.c	/^amqp_ssl_socket_open(void *base, const char *host, int port, struct timeval *timeout)$/;"	f	file:
amqp_ssl_socket_recv	librabbitmq\amqp_openssl.c	/^amqp_ssl_socket_recv(void *base,$/;"	f	file:
amqp_ssl_socket_send	librabbitmq\amqp_openssl.c	/^static ssize_t amqp_ssl_socket_send(void *base, const void *buf, size_t len,$/;"	f	file:
amqp_ssl_socket_set_cacert	librabbitmq\amqp_openssl.c	/^amqp_ssl_socket_set_cacert(amqp_socket_t *base,$/;"	f
amqp_ssl_socket_set_cert	librabbitmq\amqp_openssl.c	/^amqp_ssl_socket_set_cert(amqp_socket_t *base,$/;"	f
amqp_ssl_socket_set_key	librabbitmq\amqp_openssl.c	/^amqp_ssl_socket_set_key(amqp_socket_t *base,$/;"	f
amqp_ssl_socket_set_key_buffer	librabbitmq\amqp_openssl.c	/^amqp_ssl_socket_set_key_buffer(amqp_socket_t *base,$/;"	f
amqp_ssl_socket_set_ssl_versions	librabbitmq\amqp_openssl.c	/^int amqp_ssl_socket_set_ssl_versions(amqp_socket_t *base,$/;"	f
amqp_ssl_socket_set_verify	librabbitmq\amqp_openssl.c	/^amqp_ssl_socket_set_verify(amqp_socket_t *base,$/;"	f
amqp_ssl_socket_set_verify_hostname	librabbitmq\amqp_openssl.c	/^void amqp_ssl_socket_set_verify_hostname(amqp_socket_t *base,$/;"	f
amqp_ssl_socket_set_verify_peer	librabbitmq\amqp_openssl.c	/^void amqp_ssl_socket_set_verify_peer(amqp_socket_t *base,$/;"	f
amqp_ssl_socket_t	librabbitmq\amqp_openssl.c	/^struct amqp_ssl_socket_t {$/;"	s	file:
amqp_ssl_threadid_callback	librabbitmq\amqp_openssl.c	/^amqp_ssl_threadid_callback(void)$/;"	f
ctx	librabbitmq\amqp_openssl.c	/^  SSL_CTX *ctx;$/;"	m	struct:amqp_ssl_socket_t	file:
destroy_openssl	librabbitmq\amqp_openssl.c	/^destroy_openssl(void)$/;"	f	file:
do_initialize_openssl	librabbitmq\amqp_openssl.c	/^static amqp_boolean_t do_initialize_openssl = 1;$/;"	v	file:
initialize_openssl	librabbitmq\amqp_openssl.c	/^initialize_openssl(void)$/;"	f	file:
internal_error	librabbitmq\amqp_openssl.c	/^  int internal_error;$/;"	m	struct:amqp_ssl_socket_t	file:
klass	librabbitmq\amqp_openssl.c	/^  const struct amqp_socket_class_t *klass;$/;"	m	struct:amqp_ssl_socket_t	typeref:struct:amqp_ssl_socket_t::amqp_socket_class_t	file:
open_ssl_connections	librabbitmq\amqp_openssl.c	/^static int open_ssl_connections = 0;$/;"	v	file:
openssl_init_mutex	librabbitmq\amqp_openssl.c	/^static pthread_mutex_t openssl_init_mutex = NULL;$/;"	v	file:
openssl_init_mutex	librabbitmq\amqp_openssl.c	/^static pthread_mutex_t openssl_init_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
openssl_initialized	librabbitmq\amqp_openssl.c	/^static amqp_boolean_t openssl_initialized = 0;$/;"	v	file:
password_cb	librabbitmq\amqp_openssl.c	/^password_cb(AMQP_UNUSED char *buffer,$/;"	f	file:
sockfd	librabbitmq\amqp_openssl.c	/^  int sockfd;$/;"	m	struct:amqp_ssl_socket_t	file:
ssl	librabbitmq\amqp_openssl.c	/^  SSL *ssl;$/;"	m	struct:amqp_ssl_socket_t	file:
verify_hostname	librabbitmq\amqp_openssl.c	/^  amqp_boolean_t verify_hostname;$/;"	m	struct:amqp_ssl_socket_t	file:
verify_peer	librabbitmq\amqp_openssl.c	/^  amqp_boolean_t verify_peer;$/;"	m	struct:amqp_ssl_socket_t	file:
win32_create_mutex	librabbitmq\amqp_openssl.c	/^static long win32_create_mutex = 0;$/;"	v	file:
HOSTNAME_MAX_SIZE	librabbitmq\amqp_openssl_hostname_validation.c	38;"	d	file:
amqp_matches_common_name	librabbitmq\amqp_openssl_hostname_validation.c	/^static amqp_hostname_validation_result amqp_matches_common_name($/;"	f	file:
amqp_matches_subject_alternative_name	librabbitmq\amqp_openssl_hostname_validation.c	/^static amqp_hostname_validation_result amqp_matches_subject_alternative_name($/;"	f	file:
amqp_ssl_validate_hostname	librabbitmq\amqp_openssl_hostname_validation.c	/^amqp_hostname_validation_result amqp_ssl_validate_hostname($/;"	f
AMQP_HVR_ERROR	librabbitmq\amqp_openssl_hostname_validation.h	/^  AMQP_HVR_ERROR$/;"	e	enum:__anon9
AMQP_HVR_MALFORMED_CERTIFICATE	librabbitmq\amqp_openssl_hostname_validation.h	/^  AMQP_HVR_MALFORMED_CERTIFICATE,$/;"	e	enum:__anon9
AMQP_HVR_MATCH_FOUND	librabbitmq\amqp_openssl_hostname_validation.h	/^  AMQP_HVR_MATCH_FOUND,$/;"	e	enum:__anon9
AMQP_HVR_MATCH_NOT_FOUND	librabbitmq\amqp_openssl_hostname_validation.h	/^  AMQP_HVR_MATCH_NOT_FOUND,$/;"	e	enum:__anon9
AMQP_HVR_NO_SAN_PRESENT	librabbitmq\amqp_openssl_hostname_validation.h	/^  AMQP_HVR_NO_SAN_PRESENT,$/;"	e	enum:__anon9
amqp_hostname_validation_result	librabbitmq\amqp_openssl_hostname_validation.h	/^} amqp_hostname_validation_result;$/;"	t	typeref:enum:__anon9
librabbitmq_amqp_openssl_hostname_validation_h	librabbitmq\amqp_openssl_hostname_validation.h	3;"	d
AMQP_BIG_ENDIAN	librabbitmq\amqp_private.h	270;"	d
AMQP_BIG_ENDIAN	librabbitmq\amqp_private.h	276;"	d
AMQP_BIG_ENDIAN	librabbitmq\amqp_private.h	284;"	d
AMQP_LITTLE_ENDIAN	librabbitmq\amqp_private.h	268;"	d
AMQP_LITTLE_ENDIAN	librabbitmq\amqp_private.h	279;"	d
AMQP_LITTLE_ENDIAN	librabbitmq\amqp_private.h	290;"	d
AMQP_NORETURN	librabbitmq\amqp_private.h	68;"	d
AMQP_NORETURN	librabbitmq\amqp_private.h	73;"	d
AMQP_PRIVATE	librabbitmq\amqp_private.h	78;"	d
AMQP_PRIVATE	librabbitmq\amqp_private.h	81;"	d
AMQP_PRIVATE_STATUS_SOCKET_NEEDREAD	librabbitmq\amqp_private.h	/^  AMQP_PRIVATE_STATUS_SOCKET_NEEDREAD =  -0x1301,$/;"	e	enum:amqp_status_private_enum_
AMQP_PRIVATE_STATUS_SOCKET_NEEDWRITE	librabbitmq\amqp_private.h	/^  AMQP_PRIVATE_STATUS_SOCKET_NEEDWRITE = -0x1302$/;"	e	enum:amqp_status_private_enum_
AMQP_PSEUDOFRAME_PROTOCOL_HEADER	librabbitmq\amqp_private.h	137;"	d
AMQP_UNUSED	librabbitmq\amqp_private.h	70;"	d
AMQP_UNUSED	librabbitmq\amqp_private.h	74;"	d
AMQ_COPYRIGHT	librabbitmq\amqp_private.h	44;"	d
CONNECTION_STATE_BODY	librabbitmq\amqp_private.h	/^  CONNECTION_STATE_BODY$/;"	e	enum:amqp_connection_state_enum_
CONNECTION_STATE_HEADER	librabbitmq\amqp_private.h	/^  CONNECTION_STATE_HEADER,$/;"	e	enum:amqp_connection_state_enum_
CONNECTION_STATE_IDLE	librabbitmq\amqp_private.h	/^  CONNECTION_STATE_IDLE = 0,$/;"	e	enum:amqp_connection_state_enum_
CONNECTION_STATE_INITIAL	librabbitmq\amqp_private.h	/^  CONNECTION_STATE_INITIAL,$/;"	e	enum:amqp_connection_state_enum_
DECLARE_CODEC_BASE_TYPE	librabbitmq\amqp_private.h	216;"	d
DECLARE_XTOXLL	librabbitmq\amqp_private.h	297;"	d
DECLARE_XTOXLL	librabbitmq\amqp_private.h	314;"	d
FOOTER_SIZE	librabbitmq\amqp_private.h	135;"	d
HEADER_SIZE	librabbitmq\amqp_private.h	134;"	d
POOL_TABLE_SIZE	librabbitmq\amqp_private.h	144;"	d
WIN32_LEAN_AND_MEAN	librabbitmq\amqp_private.h	58;"	d
WINVER	librabbitmq\amqp_private.h	55;"	d
amqp_connection_state_enum	librabbitmq\amqp_private.h	/^} amqp_connection_state_enum;$/;"	t	typeref:enum:amqp_connection_state_enum_
amqp_connection_state_enum_	librabbitmq\amqp_private.h	/^typedef enum amqp_connection_state_enum_ {$/;"	g
amqp_connection_state_t_	librabbitmq\amqp_private.h	/^struct amqp_connection_state_t_ {$/;"	s
amqp_decode_bytes	librabbitmq\amqp_private.h	/^static inline int amqp_decode_bytes(amqp_bytes_t encoded, size_t *offset,$/;"	f
amqp_encode_bytes	librabbitmq\amqp_private.h	/^static inline int amqp_encode_bytes(amqp_bytes_t encoded, size_t *offset,$/;"	f
amqp_heartbeat_recv	librabbitmq\amqp_private.h	/^static inline int amqp_heartbeat_recv(amqp_connection_state_t state) {$/;"	f
amqp_heartbeat_send	librabbitmq\amqp_private.h	/^static inline int amqp_heartbeat_send(amqp_connection_state_t state) {$/;"	f
amqp_link_t	librabbitmq\amqp_private.h	/^} amqp_link_t;$/;"	t	typeref:struct:amqp_link_t_
amqp_link_t_	librabbitmq\amqp_private.h	/^typedef struct amqp_link_t_ {$/;"	s
amqp_offset	librabbitmq\amqp_private.h	/^static inline void *amqp_offset(void *data, size_t offset)$/;"	f
amqp_pool_table_entry_t	librabbitmq\amqp_private.h	/^} amqp_pool_table_entry_t;$/;"	t	typeref:struct:amqp_pool_table_entry_t_
amqp_pool_table_entry_t_	librabbitmq\amqp_private.h	/^typedef struct amqp_pool_table_entry_t_ {$/;"	s
amqp_rpc_reply_error	librabbitmq\amqp_private.h	/^static inline amqp_rpc_reply_t amqp_rpc_reply_error(amqp_status_enum status) {$/;"	f
amqp_status_private_enum	librabbitmq\amqp_private.h	/^} amqp_status_private_enum;$/;"	t	typeref:enum:amqp_status_private_enum_
amqp_status_private_enum_	librabbitmq\amqp_private.h	/^typedef enum amqp_status_private_enum_$/;"	g
channel	librabbitmq\amqp_private.h	/^  amqp_channel_t channel;$/;"	m	struct:amqp_pool_table_entry_t_
channel_max	librabbitmq\amqp_private.h	/^  int channel_max;$/;"	m	struct:amqp_connection_state_t_
client_properties	librabbitmq\amqp_private.h	/^  amqp_table_t client_properties;$/;"	m	struct:amqp_connection_state_t_
data	librabbitmq\amqp_private.h	/^  void *data;$/;"	m	struct:amqp_link_t_
first_queued_frame	librabbitmq\amqp_private.h	/^  amqp_link_t *first_queued_frame;$/;"	m	struct:amqp_connection_state_t_
frame_max	librabbitmq\amqp_private.h	/^  int frame_max;$/;"	m	struct:amqp_connection_state_t_
header_buffer	librabbitmq\amqp_private.h	/^  char header_buffer[HEADER_SIZE + 1];$/;"	m	struct:amqp_connection_state_t_
heartbeat	librabbitmq\amqp_private.h	/^  int heartbeat;$/;"	m	struct:amqp_connection_state_t_
inbound_buffer	librabbitmq\amqp_private.h	/^  amqp_bytes_t inbound_buffer;$/;"	m	struct:amqp_connection_state_t_
inbound_offset	librabbitmq\amqp_private.h	/^  size_t inbound_offset;$/;"	m	struct:amqp_connection_state_t_
last_queued_frame	librabbitmq\amqp_private.h	/^  amqp_link_t *last_queued_frame;$/;"	m	struct:amqp_connection_state_t_
librabbitmq_amqp_private_h	librabbitmq\amqp_private.h	3;"	d
most_recent_api_result	librabbitmq\amqp_private.h	/^  amqp_rpc_reply_t most_recent_api_result;$/;"	m	struct:amqp_connection_state_t_
next	librabbitmq\amqp_private.h	/^  struct amqp_link_t_ *next;$/;"	m	struct:amqp_link_t_	typeref:struct:amqp_link_t_::amqp_link_t_
next	librabbitmq\amqp_private.h	/^  struct amqp_pool_table_entry_t_ *next;$/;"	m	struct:amqp_pool_table_entry_t_	typeref:struct:amqp_pool_table_entry_t_::amqp_pool_table_entry_t_
next_recv_heartbeat	librabbitmq\amqp_private.h	/^  amqp_time_t next_recv_heartbeat;$/;"	m	struct:amqp_connection_state_t_
next_send_heartbeat	librabbitmq\amqp_private.h	/^  amqp_time_t next_send_heartbeat;$/;"	m	struct:amqp_connection_state_t_
outbound_buffer	librabbitmq\amqp_private.h	/^  amqp_bytes_t outbound_buffer;$/;"	m	struct:amqp_connection_state_t_
pool	librabbitmq\amqp_private.h	/^  amqp_pool_t pool;$/;"	m	struct:amqp_pool_table_entry_t_
pool_table	librabbitmq\amqp_private.h	/^  amqp_pool_table_entry_t *pool_table[POOL_TABLE_SIZE];$/;"	m	struct:amqp_connection_state_t_
properties_pool	librabbitmq\amqp_private.h	/^  amqp_pool_t properties_pool;$/;"	m	struct:amqp_connection_state_t_
server_properties	librabbitmq\amqp_private.h	/^  amqp_table_t server_properties;$/;"	m	struct:amqp_connection_state_t_
sock_inbound_buffer	librabbitmq\amqp_private.h	/^  amqp_bytes_t sock_inbound_buffer;$/;"	m	struct:amqp_connection_state_t_
sock_inbound_limit	librabbitmq\amqp_private.h	/^  size_t sock_inbound_limit;$/;"	m	struct:amqp_connection_state_t_
sock_inbound_offset	librabbitmq\amqp_private.h	/^  size_t sock_inbound_offset;$/;"	m	struct:amqp_connection_state_t_
socket	librabbitmq\amqp_private.h	/^  amqp_socket_t *socket;$/;"	m	struct:amqp_connection_state_t_
state	librabbitmq\amqp_private.h	/^  amqp_connection_state_enum state;$/;"	m	struct:amqp_connection_state_t_
target_size	librabbitmq\amqp_private.h	/^  size_t target_size;$/;"	m	struct:amqp_connection_state_t_
WIN32_LEAN_AND_MEAN	librabbitmq\amqp_socket.c	62;"	d	file:
_CRT_SECURE_NO_WARNINGS	librabbitmq\amqp_socket.c	42;"	d	file:
amqp_create_link_for_frame	librabbitmq\amqp_socket.c	/^static amqp_link_t * amqp_create_link_for_frame(amqp_connection_state_t state, amqp_frame_t *frame)$/;"	f	file:
amqp_data_in_buffer	librabbitmq\amqp_socket.c	/^amqp_boolean_t amqp_data_in_buffer(amqp_connection_state_t state)$/;"	f
amqp_frames_enqueued	librabbitmq\amqp_socket.c	/^amqp_boolean_t amqp_frames_enqueued(amqp_connection_state_t state)$/;"	f
amqp_get_rpc_reply	librabbitmq\amqp_socket.c	/^amqp_rpc_reply_t amqp_get_rpc_reply(amqp_connection_state_t state)$/;"	f
amqp_id_in_reply_list	librabbitmq\amqp_socket.c	/^static int amqp_id_in_reply_list( amqp_method_number_t expected, amqp_method_number_t *list )$/;"	f	file:
amqp_login	librabbitmq\amqp_socket.c	/^amqp_rpc_reply_t amqp_login(amqp_connection_state_t state,$/;"	f
amqp_login_inner	librabbitmq\amqp_socket.c	/^static amqp_rpc_reply_t amqp_login_inner(amqp_connection_state_t state,$/;"	f	file:
amqp_login_with_properties	librabbitmq\amqp_socket.c	/^amqp_rpc_reply_t amqp_login_with_properties(amqp_connection_state_t state,$/;"	f
amqp_merge_capabilities	librabbitmq\amqp_socket.c	/^int amqp_merge_capabilities(const amqp_table_t *base, const amqp_table_t *add,$/;"	f
amqp_open_socket	librabbitmq\amqp_socket.c	/^amqp_open_socket(char const *hostname,$/;"	f
amqp_open_socket_inner	librabbitmq\amqp_socket.c	/^int amqp_open_socket_inner(char const *hostname,$/;"	f
amqp_open_socket_noblock	librabbitmq\amqp_socket.c	/^int amqp_open_socket_noblock(char const *hostname,$/;"	f
amqp_os_socket_close	librabbitmq\amqp_socket.c	/^amqp_os_socket_close(int sockfd)$/;"	f
amqp_os_socket_error	librabbitmq\amqp_socket.c	/^amqp_os_socket_error(void)$/;"	f
amqp_os_socket_init	librabbitmq\amqp_socket.c	/^amqp_os_socket_init(void)$/;"	f	file:
amqp_os_socket_setsockblock	librabbitmq\amqp_socket.c	/^amqp_os_socket_setsockblock(int sock, int block)$/;"	f	file:
amqp_os_socket_setsockopt	librabbitmq\amqp_socket.c	/^amqp_os_socket_setsockopt(int sock, int level, int optname,$/;"	f	file:
amqp_os_socket_socket	librabbitmq\amqp_socket.c	/^amqp_os_socket_socket(int domain, int type, int protocol)$/;"	f	file:
amqp_poll	librabbitmq\amqp_socket.c	/^int amqp_poll(int fd, int event, amqp_time_t deadline) {$/;"	f
amqp_put_back_frame	librabbitmq\amqp_socket.c	/^int amqp_put_back_frame(amqp_connection_state_t state, amqp_frame_t *frame)$/;"	f
amqp_queue_frame	librabbitmq\amqp_socket.c	/^int amqp_queue_frame(amqp_connection_state_t state, amqp_frame_t *frame)$/;"	f
amqp_send_header	librabbitmq\amqp_socket.c	/^int amqp_send_header(amqp_connection_state_t state)$/;"	f
amqp_send_method	librabbitmq\amqp_socket.c	/^int amqp_send_method(amqp_connection_state_t state, amqp_channel_t channel,$/;"	f
amqp_send_method_inner	librabbitmq\amqp_socket.c	/^int amqp_send_method_inner(amqp_connection_state_t state,$/;"	f
amqp_simple_rpc	librabbitmq\amqp_socket.c	/^amqp_rpc_reply_t amqp_simple_rpc(amqp_connection_state_t state,$/;"	f
amqp_simple_rpc_decoded	librabbitmq\amqp_socket.c	/^void *amqp_simple_rpc_decoded(amqp_connection_state_t state,$/;"	f
amqp_simple_wait_frame	librabbitmq\amqp_socket.c	/^int amqp_simple_wait_frame(amqp_connection_state_t state,$/;"	f
amqp_simple_wait_frame_noblock	librabbitmq\amqp_socket.c	/^int amqp_simple_wait_frame_noblock(amqp_connection_state_t state,$/;"	f
amqp_simple_wait_frame_on_channel	librabbitmq\amqp_socket.c	/^int amqp_simple_wait_frame_on_channel(amqp_connection_state_t state,$/;"	f
amqp_simple_wait_method	librabbitmq\amqp_socket.c	/^int amqp_simple_wait_method(amqp_connection_state_t state,$/;"	f
amqp_simple_wait_method_list	librabbitmq\amqp_socket.c	/^static int amqp_simple_wait_method_list(amqp_connection_state_t state,$/;"	f	file:
amqp_socket_close	librabbitmq\amqp_socket.c	/^amqp_socket_close(amqp_socket_t *self, amqp_socket_close_enum force)$/;"	f
amqp_socket_delete	librabbitmq\amqp_socket.c	/^amqp_socket_delete(amqp_socket_t *self)$/;"	f
amqp_socket_get_sockfd	librabbitmq\amqp_socket.c	/^amqp_socket_get_sockfd(amqp_socket_t *self)$/;"	f
amqp_socket_open	librabbitmq\amqp_socket.c	/^amqp_socket_open(amqp_socket_t *self, const char *host, int port)$/;"	f
amqp_socket_open_noblock	librabbitmq\amqp_socket.c	/^amqp_socket_open_noblock(amqp_socket_t *self, const char *host, int port, struct timeval *timeout)$/;"	f
amqp_socket_recv	librabbitmq\amqp_socket.c	/^amqp_socket_recv(amqp_socket_t *self, void *buf, size_t len, int flags)$/;"	f
amqp_socket_send	librabbitmq\amqp_socket.c	/^amqp_socket_send(amqp_socket_t *self, const void *buf, size_t len, int flags)$/;"	f
amqp_try_recv	librabbitmq\amqp_socket.c	/^int amqp_try_recv(amqp_connection_state_t state) {$/;"	f
amqp_try_send	librabbitmq\amqp_socket.c	/^ssize_t amqp_try_send(amqp_connection_state_t state, const void *buf,$/;"	f
bytes_equal	librabbitmq\amqp_socket.c	/^static int bytes_equal(amqp_bytes_t l, amqp_bytes_t r)$/;"	f	file:
consume_one_frame	librabbitmq\amqp_socket.c	/^static int consume_one_frame(amqp_connection_state_t state, amqp_frame_t *decoded_frame)$/;"	f	file:
do_poll	librabbitmq\amqp_socket.c	/^static ssize_t do_poll(amqp_connection_state_t state, ssize_t res,$/;"	f	file:
recv_with_timeout	librabbitmq\amqp_socket.c	/^static int recv_with_timeout(amqp_connection_state_t state, amqp_time_t timeout) {$/;"	f	file:
sasl_mechanism_in_list	librabbitmq\amqp_socket.c	/^int sasl_mechanism_in_list(amqp_bytes_t mechanisms,$/;"	f
sasl_method_name	librabbitmq\amqp_socket.c	/^static amqp_bytes_t sasl_method_name(amqp_sasl_method_enum method)$/;"	f	file:
sasl_response	librabbitmq\amqp_socket.c	/^static amqp_bytes_t sasl_response(amqp_pool_t *pool,$/;"	f	file:
wait_frame_inner	librabbitmq\amqp_socket.c	/^static int wait_frame_inner(amqp_connection_state_t state,$/;"	f	file:
AMQP_SC_FORCE	librabbitmq\amqp_socket.h	/^  AMQP_SC_FORCE = 1$/;"	e	enum:__anon11
AMQP_SC_NONE	librabbitmq\amqp_socket.h	/^  AMQP_SC_NONE = 0,$/;"	e	enum:__anon11
AMQP_SF_MORE	librabbitmq\amqp_socket.h	/^  AMQP_SF_MORE = 1,$/;"	e	enum:__anon10
AMQP_SF_NONE	librabbitmq\amqp_socket.h	/^  AMQP_SF_NONE = 0,$/;"	e	enum:__anon10
AMQP_SF_POLLERR	librabbitmq\amqp_socket.h	/^  AMQP_SF_POLLERR = 8$/;"	e	enum:__anon10
AMQP_SF_POLLIN	librabbitmq\amqp_socket.h	/^  AMQP_SF_POLLIN = 2,$/;"	e	enum:__anon10
AMQP_SF_POLLOUT	librabbitmq\amqp_socket.h	/^  AMQP_SF_POLLOUT = 4,$/;"	e	enum:__anon10
AMQP_SOCKET_H	librabbitmq\amqp_socket.h	33;"	d
amqp_socket_class_t	librabbitmq\amqp_socket.h	/^struct amqp_socket_class_t {$/;"	s
amqp_socket_close_enum	librabbitmq\amqp_socket.h	/^} amqp_socket_close_enum;$/;"	t	typeref:enum:__anon11
amqp_socket_close_fn	librabbitmq\amqp_socket.h	/^typedef int (*amqp_socket_close_fn)(void *, amqp_socket_close_enum);$/;"	t
amqp_socket_delete_fn	librabbitmq\amqp_socket.h	/^typedef void (*amqp_socket_delete_fn)(void *);$/;"	t
amqp_socket_flag_enum	librabbitmq\amqp_socket.h	/^} amqp_socket_flag_enum;$/;"	t	typeref:enum:__anon10
amqp_socket_get_sockfd_fn	librabbitmq\amqp_socket.h	/^typedef int (*amqp_socket_get_sockfd_fn)(void *);$/;"	t
amqp_socket_open_fn	librabbitmq\amqp_socket.h	/^typedef int (*amqp_socket_open_fn)(void *, const char *, int, struct timeval *);$/;"	t
amqp_socket_recv_fn	librabbitmq\amqp_socket.h	/^typedef ssize_t (*amqp_socket_recv_fn)(void *, void *, size_t, int);$/;"	t
amqp_socket_send_fn	librabbitmq\amqp_socket.h	/^typedef ssize_t (*amqp_socket_send_fn)(void *, const void *, size_t, int);$/;"	t
amqp_socket_t_	librabbitmq\amqp_socket.h	/^struct amqp_socket_t_ {$/;"	s
close	librabbitmq\amqp_socket.h	/^  amqp_socket_close_fn close;$/;"	m	struct:amqp_socket_class_t
get_sockfd	librabbitmq\amqp_socket.h	/^  amqp_socket_get_sockfd_fn get_sockfd;$/;"	m	struct:amqp_socket_class_t
klass	librabbitmq\amqp_socket.h	/^  const struct amqp_socket_class_t *klass;$/;"	m	struct:amqp_socket_t_	typeref:struct:amqp_socket_t_::amqp_socket_class_t
open	librabbitmq\amqp_socket.h	/^  amqp_socket_open_fn open;$/;"	m	struct:amqp_socket_class_t
recv	librabbitmq\amqp_socket.h	/^  amqp_socket_recv_fn recv;$/;"	m	struct:amqp_socket_class_t
send	librabbitmq\amqp_socket.h	/^  amqp_socket_send_fn send;$/;"	m	struct:amqp_socket_class_t
AMQP_SSL_H	librabbitmq\amqp_ssl_socket.h	30;"	d
AMQP_TLSv1	librabbitmq\amqp_ssl_socket.h	/^  AMQP_TLSv1 = 1,$/;"	e	enum:__anon12
AMQP_TLSv1_1	librabbitmq\amqp_ssl_socket.h	/^  AMQP_TLSv1_1 = 2,$/;"	e	enum:__anon12
AMQP_TLSv1_2	librabbitmq\amqp_ssl_socket.h	/^  AMQP_TLSv1_2 = 3,$/;"	e	enum:__anon12
AMQP_TLSvLATEST	librabbitmq\amqp_ssl_socket.h	/^  AMQP_TLSvLATEST = 0xFFFF$/;"	e	enum:__anon12
amqp_tls_version_t	librabbitmq\amqp_ssl_socket.h	/^} amqp_tls_version_t;$/;"	t	typeref:enum:__anon12
FIELD_ENCODER	librabbitmq\amqp_table.c	369;"	d	file:
INITIAL_ARRAY_SIZE	librabbitmq\amqp_table.c	49;"	d	file:
INITIAL_TABLE_SIZE	librabbitmq\amqp_table.c	50;"	d	file:
SIMPLE_FIELD_DECODER	librabbitmq\amqp_table.c	215;"	d	file:
TRIVIAL_FIELD_DECODER	librabbitmq\amqp_table.c	214;"	d	file:
amqp_decode_array	librabbitmq\amqp_table.c	/^static int amqp_decode_array(amqp_bytes_t encoded,$/;"	f	file:
amqp_decode_field_value	librabbitmq\amqp_table.c	/^static int amqp_decode_field_value(amqp_bytes_t encoded,$/;"	f	file:
amqp_decode_table	librabbitmq\amqp_table.c	/^int amqp_decode_table(amqp_bytes_t encoded,$/;"	f
amqp_encode_array	librabbitmq\amqp_table.c	/^static int amqp_encode_array(amqp_bytes_t encoded,$/;"	f	file:
amqp_encode_field_value	librabbitmq\amqp_table.c	/^static int amqp_encode_field_value(amqp_bytes_t encoded,$/;"	f	file:
amqp_encode_table	librabbitmq\amqp_table.c	/^int amqp_encode_table(amqp_bytes_t encoded,$/;"	f
amqp_field_value_clone	librabbitmq\amqp_table.c	/^amqp_field_value_clone(const amqp_field_value_t *original, amqp_field_value_t *clone, amqp_pool_t *pool)$/;"	f	file:
amqp_table_clone	librabbitmq\amqp_table.c	/^amqp_table_clone(const amqp_table_t *original, amqp_table_t *clone, amqp_pool_t *pool)$/;"	f
amqp_table_construct_bool_entry	librabbitmq\amqp_table.c	/^amqp_table_entry_t amqp_table_construct_bool_entry(const char *key,$/;"	f
amqp_table_construct_table_entry	librabbitmq\amqp_table.c	/^amqp_table_entry_t amqp_table_construct_table_entry(const char *key,$/;"	f
amqp_table_construct_utf8_entry	librabbitmq\amqp_table.c	/^amqp_table_entry_t amqp_table_construct_utf8_entry(const char *key,$/;"	f
amqp_table_entry_clone	librabbitmq\amqp_table.c	/^amqp_table_entry_clone(const amqp_table_entry_t *original, amqp_table_entry_t *clone, amqp_pool_t *pool)$/;"	f	file:
amqp_table_entry_cmp	librabbitmq\amqp_table.c	/^int amqp_table_entry_cmp(void const *entry1, void const *entry2)$/;"	f
amqp_table_get_entry_by_key	librabbitmq\amqp_table.c	/^amqp_table_entry_t *amqp_table_get_entry_by_key(const amqp_table_t *table,$/;"	f
AMQP_TABLE_H	librabbitmq\amqp_table.h	31;"	d
WIN32_LEAN_AND_MEAN	librabbitmq\amqp_tcp_socket.c	34;"	d	file:
amqp_tcp_socket_class	librabbitmq\amqp_tcp_socket.c	/^static const struct amqp_socket_class_t amqp_tcp_socket_class = {$/;"	v	typeref:struct:amqp_socket_class_t	file:
amqp_tcp_socket_close	librabbitmq\amqp_tcp_socket.c	/^amqp_tcp_socket_close(void *base, AMQP_UNUSED amqp_socket_close_enum force)$/;"	f	file:
amqp_tcp_socket_delete	librabbitmq\amqp_tcp_socket.c	/^amqp_tcp_socket_delete(void *base)$/;"	f	file:
amqp_tcp_socket_get_sockfd	librabbitmq\amqp_tcp_socket.c	/^amqp_tcp_socket_get_sockfd(void *base)$/;"	f	file:
amqp_tcp_socket_new	librabbitmq\amqp_tcp_socket.c	/^amqp_tcp_socket_new(amqp_connection_state_t state)$/;"	f
amqp_tcp_socket_open	librabbitmq\amqp_tcp_socket.c	/^amqp_tcp_socket_open(void *base, const char *host, int port, struct timeval *timeout)$/;"	f	file:
amqp_tcp_socket_recv	librabbitmq\amqp_tcp_socket.c	/^amqp_tcp_socket_recv(void *base, void *buf, size_t len, int flags)$/;"	f	file:
amqp_tcp_socket_send	librabbitmq\amqp_tcp_socket.c	/^amqp_tcp_socket_send(void *base, const void *buf, size_t len, int flags)$/;"	f	file:
amqp_tcp_socket_set_sockfd	librabbitmq\amqp_tcp_socket.c	/^amqp_tcp_socket_set_sockfd(amqp_socket_t *base, int sockfd)$/;"	f
amqp_tcp_socket_t	librabbitmq\amqp_tcp_socket.c	/^struct amqp_tcp_socket_t {$/;"	s	file:
internal_error	librabbitmq\amqp_tcp_socket.c	/^  int internal_error;$/;"	m	struct:amqp_tcp_socket_t	file:
klass	librabbitmq\amqp_tcp_socket.c	/^  const struct amqp_socket_class_t *klass;$/;"	m	struct:amqp_tcp_socket_t	typeref:struct:amqp_tcp_socket_t::amqp_socket_class_t	file:
sockfd	librabbitmq\amqp_tcp_socket.c	/^  int sockfd;$/;"	m	struct:amqp_tcp_socket_t	file:
state	librabbitmq\amqp_tcp_socket.c	/^  int state;$/;"	m	struct:amqp_tcp_socket_t	file:
AMQP_TCP_SOCKET_H	librabbitmq\amqp_tcp_socket.h	34;"	d
AMQP_MAC_TIMER_API	librabbitmq\amqp_time.c	33;"	d	file:
AMQP_POSIX_TIMER_API	librabbitmq\amqp_time.c	35;"	d	file:
AMQP_WIN_TIMER_API	librabbitmq\amqp_time.c	31;"	d	file:
WIN32_LEAN_AND_MEAN	librabbitmq\amqp_time.c	40;"	d	file:
amqp_get_monotonic_timestamp	librabbitmq\amqp_time.c	/^amqp_get_monotonic_timestamp(void)$/;"	f
amqp_time_equal	librabbitmq\amqp_time.c	/^int amqp_time_equal(amqp_time_t l, amqp_time_t r) {$/;"	f
amqp_time_first	librabbitmq\amqp_time.c	/^amqp_time_t amqp_time_first(amqp_time_t l, amqp_time_t r) {$/;"	f
amqp_time_from_now	librabbitmq\amqp_time.c	/^int amqp_time_from_now(amqp_time_t *time, struct timeval *timeout) {$/;"	f
amqp_time_has_past	librabbitmq\amqp_time.c	/^int amqp_time_has_past(amqp_time_t time) {$/;"	f
amqp_time_immediate	librabbitmq\amqp_time.c	/^amqp_time_t amqp_time_immediate(void) {$/;"	f
amqp_time_infinite	librabbitmq\amqp_time.c	/^amqp_time_t amqp_time_infinite(void) {$/;"	f
amqp_time_ms_until	librabbitmq\amqp_time.c	/^int amqp_time_ms_until(amqp_time_t time) {$/;"	f
amqp_time_s_from_now	librabbitmq\amqp_time.c	/^int amqp_time_s_from_now(amqp_time_t *time, int seconds) {$/;"	f
amqp_time_tv_until	librabbitmq\amqp_time.c	/^int amqp_time_tv_until(amqp_time_t time, struct timeval *in,$/;"	f
AMQP_MS_PER_S	librabbitmq\amqp_time.h	41;"	d
AMQP_NS_PER_MS	librabbitmq\amqp_time.h	44;"	d
AMQP_NS_PER_S	librabbitmq\amqp_time.h	43;"	d
AMQP_NS_PER_US	librabbitmq\amqp_time.h	45;"	d
AMQP_TIMER_H	librabbitmq\amqp_time.h	25;"	d
AMQP_US_PER_MS	librabbitmq\amqp_time.h	42;"	d
WIN32_LEAN_AND_MEAN	librabbitmq\amqp_time.h	34;"	d
WINVER	librabbitmq\amqp_time.h	31;"	d
amqp_time_t	librabbitmq\amqp_time.h	/^} amqp_time_t;$/;"	t	typeref:struct:amqp_time_t_
amqp_time_t_	librabbitmq\amqp_time.h	/^typedef struct amqp_time_t_ {$/;"	s
time_point_ns	librabbitmq\amqp_time.h	/^  uint64_t time_point_ns;$/;"	m	struct:amqp_time_t_
_CRT_SECURE_NO_WARNINGS	librabbitmq\amqp_url.c	42;"	d	file:
amqp_default_connection_info	librabbitmq\amqp_url.c	/^void amqp_default_connection_info(struct amqp_connection_info *ci)$/;"	f
amqp_parse_url	librabbitmq\amqp_url.c	/^int amqp_parse_url(char *url, struct amqp_connection_info *parsed)$/;"	f
find_delim	librabbitmq\amqp_url.c	/^static char find_delim(char **pp, int colon_and_at_sign_are_delims)$/;"	f	file:
BitDecoder	librabbitmq\codegen.py	/^class BitDecoder(object):$/;"	c
BitEncoder	librabbitmq\codegen.py	/^class BitEncoder(object):$/;"	c
BitType	librabbitmq\codegen.py	/^class BitType(object):$/;"	c
Emitter	librabbitmq\codegen.py	/^class Emitter(object):$/;"	c
SimpleType	librabbitmq\codegen.py	/^class SimpleType(object):$/;"	c
StrType	librabbitmq\codegen.py	/^class StrType(object):$/;"	c
TableType	librabbitmq\codegen.py	/^class TableType(object):$/;"	c
__init__	librabbitmq\codegen.py	/^    def __init__(self):$/;"	m	class:BitType
__init__	librabbitmq\codegen.py	/^    def __init__(self):$/;"	m	class:TableType
__init__	librabbitmq\codegen.py	/^    def __init__(self, bits):$/;"	m	class:SimpleType
__init__	librabbitmq\codegen.py	/^    def __init__(self, emitter):$/;"	m	class:BitDecoder
__init__	librabbitmq\codegen.py	/^    def __init__(self, emitter):$/;"	m	class:BitEncoder
__init__	librabbitmq\codegen.py	/^    def __init__(self, lenbits):$/;"	m	class:StrType
__init__	librabbitmq\codegen.py	/^    def __init__(self, prefix):$/;"	m	class:Emitter
apiMethodInfo	librabbitmq\codegen.py	/^apiMethodInfo  = {$/;"	v
apiMethodsSuppressArgs	librabbitmq\codegen.py	/^apiMethodsSuppressArgs = {"ticket": 0, "nowait": False}$/;"	v
cConstantName	librabbitmq\codegen.py	/^def cConstantName(s):$/;"	f
cFlagName	librabbitmq\codegen.py	/^def cFlagName(c, f):$/;"	f
c_ize	librabbitmq\codegen.py	/^def c_ize(s):$/;"	f
decode	librabbitmq\codegen.py	/^    def decode(self, emitter, lvalue):$/;"	m	class:BitType
decode	librabbitmq\codegen.py	/^    def decode(self, emitter, lvalue):$/;"	m	class:SimpleType
decode	librabbitmq\codegen.py	/^    def decode(self, emitter, lvalue):$/;"	m	class:StrType
decode	librabbitmq\codegen.py	/^    def decode(self, emitter, lvalue):$/;"	m	class:TableType
decode_bit	librabbitmq\codegen.py	/^    def decode_bit(self, lvalue):$/;"	m	class:BitDecoder
division	librabbitmq\codegen.py	/^from __future__ import division$/;"	i
emit	librabbitmq\codegen.py	/^    def emit(self, line):$/;"	m	class:BitDecoder
emit	librabbitmq\codegen.py	/^    def emit(self, line):$/;"	m	class:BitEncoder
emit	librabbitmq\codegen.py	/^    def emit(self, line):$/;"	m	class:Emitter
encode	librabbitmq\codegen.py	/^    def encode(self, emitter, value):$/;"	m	class:BitType
encode	librabbitmq\codegen.py	/^    def encode(self, emitter, value):$/;"	m	class:SimpleType
encode	librabbitmq\codegen.py	/^    def encode(self, emitter, value):$/;"	m	class:StrType
encode	librabbitmq\codegen.py	/^    def encode(self, emitter, value):$/;"	m	class:TableType
encode_bit	librabbitmq\codegen.py	/^    def encode_bit(self, value):$/;"	m	class:BitEncoder
fieldDeclList	librabbitmq\codegen.py	/^    def fieldDeclList(fields):$/;"	f	function:genHrl
fieldMapList	librabbitmq\codegen.py	/^    def fieldMapList(fields):$/;"	f	function:genErl
fieldTempList	librabbitmq\codegen.py	/^    def fieldTempList(fields):$/;"	f	function:genErl
flush	librabbitmq\codegen.py	/^    def flush(self):$/;"	m	class:BitEncoder
genDecodeMethodFields	librabbitmq\codegen.py	/^    def genDecodeMethodFields(m):$/;"	f	function:genErl
genDecodeProperties	librabbitmq\codegen.py	/^    def genDecodeProperties(c):$/;"	f	function:genErl
genEncodeMethodFields	librabbitmq\codegen.py	/^    def genEncodeMethodFields(m):$/;"	f	function:genErl
genEncodeProperties	librabbitmq\codegen.py	/^    def genEncodeProperties(c):$/;"	f	function:genErl
genErl	librabbitmq\codegen.py	/^def genErl(spec):$/;"	f
genHrl	librabbitmq\codegen.py	/^def genHrl(spec):$/;"	f
genLookupMethodName	librabbitmq\codegen.py	/^    def genLookupMethodName(m):$/;"	f	function:genErl
generateErl	librabbitmq\codegen.py	/^def generateErl(specPath):$/;"	f
generateHrl	librabbitmq\codegen.py	/^def generateHrl(specPath):$/;"	f
literal	librabbitmq\codegen.py	/^    def literal(self, value):$/;"	m	class:BitType
literal	librabbitmq\codegen.py	/^    def literal(self, value):$/;"	m	class:SimpleType
literal	librabbitmq\codegen.py	/^    def literal(self, value):$/;"	m	class:StrType
literal	librabbitmq\codegen.py	/^    def literal(self, value):$/;"	m	class:TableType
methodApiPrototype	librabbitmq\codegen.py	/^def methodApiPrototype(m):$/;"	f
nested_scopes	librabbitmq\codegen.py	/^from __future__ import nested_scopes$/;"	i
propDeclList	librabbitmq\codegen.py	/^    def propDeclList(fields):$/;"	f	function:genHrl
re	librabbitmq\codegen.py	/^import re$/;"	i
string	librabbitmq\codegen.py	/^import string$/;"	i
typeFor	librabbitmq\codegen.py	/^def typeFor(spec, f):$/;"	f
types	librabbitmq\codegen.py	/^types = {$/;"	v
AMQP_THREADS_H	librabbitmq\unix\threads.h	25;"	d
INT16_C	librabbitmq\win32\msinttypes\stdint.h	231;"	d
INT16_MAX	librabbitmq\win32\msinttypes\stdint.h	135;"	d
INT16_MIN	librabbitmq\win32\msinttypes\stdint.h	134;"	d
INT32_C	librabbitmq\win32\msinttypes\stdint.h	232;"	d
INT32_MAX	librabbitmq\win32\msinttypes\stdint.h	137;"	d
INT32_MIN	librabbitmq\win32\msinttypes\stdint.h	136;"	d
INT64_C	librabbitmq\win32\msinttypes\stdint.h	233;"	d
INT64_MAX	librabbitmq\win32\msinttypes\stdint.h	139;"	d
INT64_MIN	librabbitmq\win32\msinttypes\stdint.h	138;"	d
INT8_C	librabbitmq\win32\msinttypes\stdint.h	230;"	d
INT8_MAX	librabbitmq\win32\msinttypes\stdint.h	133;"	d
INT8_MIN	librabbitmq\win32\msinttypes\stdint.h	132;"	d
INTMAX_C	librabbitmq\win32\msinttypes\stdint.h	241;"	d
INTMAX_MAX	librabbitmq\win32\msinttypes\stdint.h	186;"	d
INTMAX_MIN	librabbitmq\win32\msinttypes\stdint.h	185;"	d
INTPTR_MAX	librabbitmq\win32\msinttypes\stdint.h	176;"	d
INTPTR_MAX	librabbitmq\win32\msinttypes\stdint.h	180;"	d
INTPTR_MIN	librabbitmq\win32\msinttypes\stdint.h	175;"	d
INTPTR_MIN	librabbitmq\win32\msinttypes\stdint.h	179;"	d
INT_FAST16_MAX	librabbitmq\win32\msinttypes\stdint.h	163;"	d
INT_FAST16_MIN	librabbitmq\win32\msinttypes\stdint.h	162;"	d
INT_FAST32_MAX	librabbitmq\win32\msinttypes\stdint.h	165;"	d
INT_FAST32_MIN	librabbitmq\win32\msinttypes\stdint.h	164;"	d
INT_FAST64_MAX	librabbitmq\win32\msinttypes\stdint.h	167;"	d
INT_FAST64_MIN	librabbitmq\win32\msinttypes\stdint.h	166;"	d
INT_FAST8_MAX	librabbitmq\win32\msinttypes\stdint.h	161;"	d
INT_FAST8_MIN	librabbitmq\win32\msinttypes\stdint.h	160;"	d
INT_LEAST16_MAX	librabbitmq\win32\msinttypes\stdint.h	149;"	d
INT_LEAST16_MIN	librabbitmq\win32\msinttypes\stdint.h	148;"	d
INT_LEAST32_MAX	librabbitmq\win32\msinttypes\stdint.h	151;"	d
INT_LEAST32_MIN	librabbitmq\win32\msinttypes\stdint.h	150;"	d
INT_LEAST64_MAX	librabbitmq\win32\msinttypes\stdint.h	153;"	d
INT_LEAST64_MIN	librabbitmq\win32\msinttypes\stdint.h	152;"	d
INT_LEAST8_MAX	librabbitmq\win32\msinttypes\stdint.h	147;"	d
INT_LEAST8_MIN	librabbitmq\win32\msinttypes\stdint.h	146;"	d
PTRDIFF_MAX	librabbitmq\win32\msinttypes\stdint.h	193;"	d
PTRDIFF_MAX	librabbitmq\win32\msinttypes\stdint.h	196;"	d
PTRDIFF_MIN	librabbitmq\win32\msinttypes\stdint.h	192;"	d
PTRDIFF_MIN	librabbitmq\win32\msinttypes\stdint.h	195;"	d
SIG_ATOMIC_MAX	librabbitmq\win32\msinttypes\stdint.h	200;"	d
SIG_ATOMIC_MIN	librabbitmq\win32\msinttypes\stdint.h	199;"	d
SIZE_MAX	librabbitmq\win32\msinttypes\stdint.h	204;"	d
SIZE_MAX	librabbitmq\win32\msinttypes\stdint.h	206;"	d
UINT16_C	librabbitmq\win32\msinttypes\stdint.h	236;"	d
UINT16_MAX	librabbitmq\win32\msinttypes\stdint.h	141;"	d
UINT32_C	librabbitmq\win32\msinttypes\stdint.h	237;"	d
UINT32_MAX	librabbitmq\win32\msinttypes\stdint.h	142;"	d
UINT64_C	librabbitmq\win32\msinttypes\stdint.h	238;"	d
UINT64_MAX	librabbitmq\win32\msinttypes\stdint.h	143;"	d
UINT8_C	librabbitmq\win32\msinttypes\stdint.h	235;"	d
UINT8_MAX	librabbitmq\win32\msinttypes\stdint.h	140;"	d
UINTMAX_C	librabbitmq\win32\msinttypes\stdint.h	242;"	d
UINTMAX_MAX	librabbitmq\win32\msinttypes\stdint.h	187;"	d
UINTPTR_MAX	librabbitmq\win32\msinttypes\stdint.h	177;"	d
UINTPTR_MAX	librabbitmq\win32\msinttypes\stdint.h	181;"	d
UINT_FAST16_MAX	librabbitmq\win32\msinttypes\stdint.h	169;"	d
UINT_FAST32_MAX	librabbitmq\win32\msinttypes\stdint.h	170;"	d
UINT_FAST64_MAX	librabbitmq\win32\msinttypes\stdint.h	171;"	d
UINT_FAST8_MAX	librabbitmq\win32\msinttypes\stdint.h	168;"	d
UINT_LEAST16_MAX	librabbitmq\win32\msinttypes\stdint.h	155;"	d
UINT_LEAST32_MAX	librabbitmq\win32\msinttypes\stdint.h	156;"	d
UINT_LEAST64_MAX	librabbitmq\win32\msinttypes\stdint.h	157;"	d
UINT_LEAST8_MAX	librabbitmq\win32\msinttypes\stdint.h	154;"	d
WCHAR_MAX	librabbitmq\win32\msinttypes\stdint.h	215;"	d
WCHAR_MIN	librabbitmq\win32\msinttypes\stdint.h	212;"	d
WINT_MAX	librabbitmq\win32\msinttypes\stdint.h	219;"	d
WINT_MIN	librabbitmq\win32\msinttypes\stdint.h	218;"	d
_MSC_STDINT_H_	librabbitmq\win32\msinttypes\stdint.h	37;"	d
_W64	librabbitmq\win32\msinttypes\stdint.h	60;"	d
_W64	librabbitmq\win32\msinttypes\stdint.h	62;"	d
int16_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef signed __int16    int16_t;$/;"	t
int16_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef signed short      int16_t;$/;"	t
int32_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef signed __int32    int32_t;$/;"	t
int32_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef signed int        int32_t;$/;"	t
int64_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef signed __int64       int64_t;$/;"	t
int8_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef signed __int8     int8_t;$/;"	t
int8_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef signed char       int8_t;$/;"	t
int_fast16_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef int16_t   int_fast16_t;$/;"	t
int_fast32_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef int32_t   int_fast32_t;$/;"	t
int_fast64_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef int64_t   int_fast64_t;$/;"	t
int_fast8_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef int8_t    int_fast8_t;$/;"	t
int_least16_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef int16_t   int_least16_t;$/;"	t
int_least32_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef int32_t   int_least32_t;$/;"	t
int_least64_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef int64_t   int_least64_t;$/;"	t
int_least8_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef int8_t    int_least8_t;$/;"	t
intmax_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef int64_t   intmax_t;$/;"	t
intptr_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef _W64 signed int   intptr_t;$/;"	t
intptr_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef signed __int64    intptr_t;$/;"	t
uint16_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef unsigned __int16  uint16_t;$/;"	t
uint16_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef unsigned short    uint16_t;$/;"	t
uint32_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef unsigned __int32  uint32_t;$/;"	t
uint32_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef unsigned int      uint32_t;$/;"	t
uint64_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef unsigned __int64     uint64_t;$/;"	t
uint8_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef unsigned __int8   uint8_t;$/;"	t
uint8_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef unsigned char     uint8_t;$/;"	t
uint_fast16_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef uint16_t  uint_fast16_t;$/;"	t
uint_fast32_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef uint32_t  uint_fast32_t;$/;"	t
uint_fast64_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef uint64_t  uint_fast64_t;$/;"	t
uint_fast8_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef uint8_t   uint_fast8_t;$/;"	t
uint_least16_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef uint16_t  uint_least16_t;$/;"	t
uint_least32_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef uint32_t  uint_least32_t;$/;"	t
uint_least64_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef uint64_t  uint_least64_t;$/;"	t
uint_least8_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef uint8_t   uint_least8_t;$/;"	t
uintmax_t	librabbitmq\win32\msinttypes\stdint.h	/^typedef uint64_t  uintmax_t;$/;"	t
uintptr_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef _W64 unsigned int uintptr_t;$/;"	t
uintptr_t	librabbitmq\win32\msinttypes\stdint.h	/^   typedef unsigned __int64  uintptr_t;$/;"	t
pthread_mutex_init	librabbitmq\win32\threads.c	/^pthread_mutex_init(pthread_mutex_t *mutex, void *attr)$/;"	f
pthread_mutex_lock	librabbitmq\win32\threads.c	/^pthread_mutex_lock(pthread_mutex_t *mutex)$/;"	f
pthread_mutex_unlock	librabbitmq\win32\threads.c	/^pthread_mutex_unlock(pthread_mutex_t *mutex)$/;"	f
pthread_self	librabbitmq\win32\threads.c	/^pthread_self(void)$/;"	f
AMQP_THREAD_H	librabbitmq\win32\threads.h	29;"	d
WIN32_LEAN_AND_MEAN	librabbitmq\win32\threads.h	35;"	d
WINVER	librabbitmq\win32\threads.h	32;"	d
pthread_mutex_t	librabbitmq\win32\threads.h	/^typedef CRITICAL_SECTION *pthread_mutex_t;$/;"	t
pthread_once_t	librabbitmq\win32\threads.h	/^typedef int pthread_once_t;$/;"	t
CreateProcess	ltmain.sh	/^   CreateProcess().  We must quote the arguments since Win32 CreateProcess()$/;"	f
func_append	ltmain.sh	/^func_append ()$/;"	f
func_append_quoted	ltmain.sh	/^func_append_quoted ()$/;"	f
func_arith	ltmain.sh	/^func_arith ()$/;"	f
func_basename	ltmain.sh	/^func_basename ()$/;"	f
func_check_version_match	ltmain.sh	/^func_check_version_match ()$/;"	f
func_config	ltmain.sh	/^func_config ()$/;"	f
func_convert_core_file_wine_to_w32	ltmain.sh	/^func_convert_core_file_wine_to_w32 ()$/;"	f
func_convert_core_msys_to_w32	ltmain.sh	/^func_convert_core_msys_to_w32 ()$/;"	f
func_convert_core_path_wine_to_w32	ltmain.sh	/^func_convert_core_path_wine_to_w32 ()$/;"	f
func_convert_file_check	ltmain.sh	/^func_convert_file_check ()$/;"	f
func_convert_file_cygwin_to_w32	ltmain.sh	/^func_convert_file_cygwin_to_w32 ()$/;"	f
func_convert_file_msys_to_cygwin	ltmain.sh	/^func_convert_file_msys_to_cygwin ()$/;"	f
func_convert_file_msys_to_w32	ltmain.sh	/^func_convert_file_msys_to_w32 ()$/;"	f
func_convert_file_nix_to_cygwin	ltmain.sh	/^func_convert_file_nix_to_cygwin ()$/;"	f
func_convert_file_nix_to_w32	ltmain.sh	/^func_convert_file_nix_to_w32 ()$/;"	f
func_convert_file_noop	ltmain.sh	/^func_convert_file_noop ()$/;"	f
func_convert_path_check	ltmain.sh	/^func_convert_path_check ()$/;"	f
func_convert_path_cygwin_to_w32	ltmain.sh	/^func_convert_path_cygwin_to_w32 ()$/;"	f
func_convert_path_front_back_pathsep	ltmain.sh	/^func_convert_path_front_back_pathsep ()$/;"	f
func_convert_path_msys_to_cygwin	ltmain.sh	/^func_convert_path_msys_to_cygwin ()$/;"	f
func_convert_path_msys_to_w32	ltmain.sh	/^func_convert_path_msys_to_w32 ()$/;"	f
func_convert_path_nix_to_cygwin	ltmain.sh	/^func_convert_path_nix_to_cygwin ()$/;"	f
func_convert_path_nix_to_w32	ltmain.sh	/^func_convert_path_nix_to_w32 ()$/;"	f
func_convert_path_noop	ltmain.sh	/^func_convert_path_noop ()$/;"	f
func_cygming_dll_for_implib	ltmain.sh	/^func_cygming_dll_for_implib ()$/;"	f
func_cygming_dll_for_implib_fallback	ltmain.sh	/^func_cygming_dll_for_implib_fallback ()$/;"	f
func_cygming_dll_for_implib_fallback_core	ltmain.sh	/^func_cygming_dll_for_implib_fallback_core ()$/;"	f
func_cygming_gnu_implib_p	ltmain.sh	/^func_cygming_gnu_implib_p ()$/;"	f
func_cygming_ms_implib_p	ltmain.sh	/^func_cygming_ms_implib_p ()$/;"	f
func_cygpath	ltmain.sh	/^func_cygpath ()$/;"	f
func_dirname	ltmain.sh	/^func_dirname ()$/;"	f
func_dirname_and_basename	ltmain.sh	/^func_dirname_and_basename ()$/;"	f
func_echo	ltmain.sh	/^func_echo ()$/;"	f
func_echo_all	ltmain.sh	/^func_echo_all ()$/;"	f
func_emit_cwrapperexe_src	ltmain.sh	/^func_emit_cwrapperexe_src ()$/;"	f
func_emit_wrapper	ltmain.sh	/^func_emit_wrapper ()$/;"	f
func_enable_tag	ltmain.sh	/^func_enable_tag ()$/;"	f
func_error	ltmain.sh	/^func_error ()$/;"	f
func_exec_program	ltmain.sh	/^func_exec_program ()$/;"	f
func_exec_program_core	ltmain.sh	/^func_exec_program_core ()$/;"	f
func_execute_cmds	ltmain.sh	/^func_execute_cmds ()$/;"	f
func_extract_an_archive	ltmain.sh	/^func_extract_an_archive ()$/;"	f
func_extract_archives	ltmain.sh	/^func_extract_archives ()$/;"	f
func_fallback_echo	ltmain.sh	/^func_fallback_echo ()$/;"	f
func_fatal_configuration	ltmain.sh	/^func_fatal_configuration ()$/;"	f
func_fatal_error	ltmain.sh	/^func_fatal_error ()$/;"	f
func_fatal_help	ltmain.sh	/^func_fatal_help ()$/;"	f
func_features	ltmain.sh	/^func_features ()$/;"	f
func_generate_dlsyms	ltmain.sh	/^func_generate_dlsyms ()$/;"	f
func_grep	ltmain.sh	/^func_grep ()$/;"	f
func_help	ltmain.sh	/^func_help ()$/;"	f
func_infer_tag	ltmain.sh	/^func_infer_tag ()$/;"	f
func_init_to_host_path_cmd	ltmain.sh	/^func_init_to_host_path_cmd ()$/;"	f
func_lalib_p	ltmain.sh	/^func_lalib_p ()$/;"	f
func_lalib_unsafe_p	ltmain.sh	/^func_lalib_unsafe_p ()$/;"	f
func_len	ltmain.sh	/^func_len ()$/;"	f
func_lo2o	ltmain.sh	/^func_lo2o ()$/;"	f
func_lt_dump_args	ltmain.sh	/^func_lt_dump_args ()$/;"	f
func_ltwrapper_executable_p	ltmain.sh	/^func_ltwrapper_executable_p ()$/;"	f
func_ltwrapper_p	ltmain.sh	/^func_ltwrapper_p ()$/;"	f
func_ltwrapper_script_p	ltmain.sh	/^func_ltwrapper_script_p ()$/;"	f
func_ltwrapper_scriptname	ltmain.sh	/^func_ltwrapper_scriptname ()$/;"	f
func_missing_arg	ltmain.sh	/^func_missing_arg ()$/;"	f
func_mkdir_p	ltmain.sh	/^func_mkdir_p ()$/;"	f
func_mktempdir	ltmain.sh	/^func_mktempdir ()$/;"	f
func_mode_compile	ltmain.sh	/^func_mode_compile ()$/;"	f
func_mode_execute	ltmain.sh	/^func_mode_execute ()$/;"	f
func_mode_finish	ltmain.sh	/^func_mode_finish ()$/;"	f
func_mode_help	ltmain.sh	/^func_mode_help ()$/;"	f
func_mode_install	ltmain.sh	/^func_mode_install ()$/;"	f
func_mode_link	ltmain.sh	/^func_mode_link ()$/;"	f
func_mode_uninstall	ltmain.sh	/^func_mode_uninstall ()$/;"	f
func_normal_abspath	ltmain.sh	/^func_normal_abspath ()$/;"	f
func_parse_lt_options	ltmain.sh	/^func_parse_lt_options ()$/;"	f
func_quote_for_eval	ltmain.sh	/^func_quote_for_eval ()$/;"	f
func_quote_for_expand	ltmain.sh	/^func_quote_for_expand ()$/;"	f
func_relative_path	ltmain.sh	/^func_relative_path ()$/;"	f
func_replace_sysroot	ltmain.sh	/^func_replace_sysroot ()$/;"	f
func_resolve_sysroot	ltmain.sh	/^func_resolve_sysroot ()$/;"	f
func_show_eval	ltmain.sh	/^func_show_eval ()$/;"	f
func_show_eval_locale	ltmain.sh	/^func_show_eval_locale ()$/;"	f
func_source	ltmain.sh	/^func_source ()$/;"	f
func_split_long_opt	ltmain.sh	/^func_split_long_opt ()$/;"	f
func_split_short_opt	ltmain.sh	/^func_split_short_opt ()$/;"	f
func_stripname	ltmain.sh	/^func_stripname ()$/;"	f
func_to_host_file	ltmain.sh	/^func_to_host_file ()$/;"	f
func_to_host_path	ltmain.sh	/^func_to_host_path ()$/;"	f
func_to_tool_file	ltmain.sh	/^func_to_tool_file ()$/;"	f
func_tr_sh	ltmain.sh	/^func_tr_sh ()$/;"	f
func_usage	ltmain.sh	/^func_usage ()$/;"	f
func_verbose	ltmain.sh	/^func_verbose ()$/;"	f
func_version	ltmain.sh	/^func_version ()$/;"	f
func_warning	ltmain.sh	/^func_warning ()$/;"	f
func_win32_import_lib_p	ltmain.sh	/^func_win32_import_lib_p ()$/;"	f
func_win32_libid	ltmain.sh	/^func_win32_libid ()$/;"	f
func_write_libtool_object	ltmain.sh	/^func_write_libtool_object ()$/;"	f
func_xform	ltmain.sh	/^func_xform ()$/;"	f
hostcheck_fail	tests\test_hostcheck.c	/^hostcheck_fail(const char *match_pattern, const char *url)$/;"	f	file:
hostcheck_success	tests\test_hostcheck.c	/^hostcheck_success(const char *match_pattern, const char *url)$/;"	f	file:
main	tests\test_hostcheck.c	/^main(void)$/;"	f
compare_amqp_table	tests\test_merge_capabilities.c	/^static int compare_amqp_table(amqp_table_t* result, amqp_table_t* expect) {$/;"	f	file:
compare_amqp_table_entry	tests\test_merge_capabilities.c	/^static int compare_amqp_table_entry(amqp_table_entry_t result,$/;"	f	file:
compare_bytes	tests\test_merge_capabilities.c	/^static int compare_bytes(amqp_bytes_t l, amqp_bytes_t r) {$/;"	f	file:
compare_field_value	tests\test_merge_capabilities.c	/^static int compare_field_value(amqp_field_value_t result,$/;"	f	file:
main	tests\test_merge_capabilities.c	/^int main(void) {$/;"	f
test_merge_capabilities	tests\test_merge_capabilities.c	/^static void test_merge_capabilities(amqp_table_t* base, amqp_table_t* add,$/;"	f	file:
_CRT_NONSTDC_NO_DEPRECATE	tests\test_parse_url.c	41;"	d	file:
main	tests\test_parse_url.c	/^int main(void)$/;"	f
match_int	tests\test_parse_url.c	/^static void match_int(const char *what, int expect, int got)$/;"	f	file:
match_string	tests\test_parse_url.c	/^static void match_string(const char *what, const char *expect, const char *got)$/;"	f	file:
parse_fail	tests\test_parse_url.c	/^static void parse_fail(const char *url)$/;"	f	file:
parse_success	tests\test_parse_url.c	/^static void parse_success(const char *url,$/;"	f	file:
main	tests\test_sasl_mechanism.c	/^int main(void)$/;"	f
parse_fail	tests\test_sasl_mechanism.c	/^static void parse_fail(amqp_bytes_t mechanisms,$/;"	f	file:
parse_success	tests\test_sasl_mechanism.c	/^static void parse_success(amqp_bytes_t mechanisms,$/;"	f	file:
check_errorstrings	tests\test_status_enum.c	/^static void check_errorstrings(amqp_status_enum start, amqp_status_enum end) {$/;"	f	file:
main	tests\test_status_enum.c	/^int main(void) {$/;"	f
CHUNK_SIZE	tests\test_tables.c	415;"	d	file:
_CRT_SECURE_NO_WARNINGS	tests\test_tables.c	39;"	d	file:
_USE_MATH_DEFINES	tests\test_tables.c	38;"	d	file:
compare_files	tests\test_tables.c	/^static int compare_files(FILE *f1_in, FILE *f2_in)$/;"	f	file:
die	tests\test_tables.c	/^void die(const char *fmt, ...)$/;"	f
dump_indent	tests\test_tables.c	/^static void dump_indent(int indent, FILE *out)$/;"	f	file:
dump_value	tests\test_tables.c	/^static void dump_value(int indent, amqp_field_value_t v, FILE *out)$/;"	f	file:
expected_file_name	tests\test_tables.c	/^const char *expected_file_name = "tests\/test_tables.expected";$/;"	v
main	tests\test_tables.c	/^int main(void)$/;"	f
pre_encoded_table	tests\test_tables.c	/^static uint8_t pre_encoded_table[] = {$/;"	v	file:
test_dump_value	tests\test_tables.c	/^static void test_dump_value(FILE *out)$/;"	f	file:
test_table_codec	tests\test_tables.c	/^static void test_table_codec(FILE *out)$/;"	f	file:
PRIX16	tests\win32\msinttypes\inttypes.h	108;"	d
PRIX32	tests\win32\msinttypes\inttypes.h	121;"	d
PRIX64	tests\win32\msinttypes\inttypes.h	134;"	d
PRIX8	tests\win32\msinttypes\inttypes.h	95;"	d
PRIXFAST16	tests\win32\msinttypes\inttypes.h	116;"	d
PRIXFAST32	tests\win32\msinttypes\inttypes.h	129;"	d
PRIXFAST64	tests\win32\msinttypes\inttypes.h	142;"	d
PRIXFAST8	tests\win32\msinttypes\inttypes.h	103;"	d
PRIXLEAST16	tests\win32\msinttypes\inttypes.h	112;"	d
PRIXLEAST32	tests\win32\msinttypes\inttypes.h	125;"	d
PRIXLEAST64	tests\win32\msinttypes\inttypes.h	138;"	d
PRIXLEAST8	tests\win32\msinttypes\inttypes.h	99;"	d
PRIXMAX	tests\win32\msinttypes\inttypes.h	147;"	d
PRIXPTR	tests\win32\msinttypes\inttypes.h	152;"	d
PRId16	tests\win32\msinttypes\inttypes.h	64;"	d
PRId32	tests\win32\msinttypes\inttypes.h	71;"	d
PRId64	tests\win32\msinttypes\inttypes.h	78;"	d
PRId8	tests\win32\msinttypes\inttypes.h	57;"	d
PRIdFAST16	tests\win32\msinttypes\inttypes.h	68;"	d
PRIdFAST32	tests\win32\msinttypes\inttypes.h	75;"	d
PRIdFAST64	tests\win32\msinttypes\inttypes.h	82;"	d
PRIdFAST8	tests\win32\msinttypes\inttypes.h	61;"	d
PRIdLEAST16	tests\win32\msinttypes\inttypes.h	66;"	d
PRIdLEAST32	tests\win32\msinttypes\inttypes.h	73;"	d
PRIdLEAST64	tests\win32\msinttypes\inttypes.h	80;"	d
PRIdLEAST8	tests\win32\msinttypes\inttypes.h	59;"	d
PRIdMAX	tests\win32\msinttypes\inttypes.h	85;"	d
PRIdPTR	tests\win32\msinttypes\inttypes.h	88;"	d
PRIi16	tests\win32\msinttypes\inttypes.h	65;"	d
PRIi32	tests\win32\msinttypes\inttypes.h	72;"	d
PRIi64	tests\win32\msinttypes\inttypes.h	79;"	d
PRIi8	tests\win32\msinttypes\inttypes.h	58;"	d
PRIiFAST16	tests\win32\msinttypes\inttypes.h	69;"	d
PRIiFAST32	tests\win32\msinttypes\inttypes.h	76;"	d
PRIiFAST64	tests\win32\msinttypes\inttypes.h	83;"	d
PRIiFAST8	tests\win32\msinttypes\inttypes.h	62;"	d
PRIiLEAST16	tests\win32\msinttypes\inttypes.h	67;"	d
PRIiLEAST32	tests\win32\msinttypes\inttypes.h	74;"	d
PRIiLEAST64	tests\win32\msinttypes\inttypes.h	81;"	d
PRIiLEAST8	tests\win32\msinttypes\inttypes.h	60;"	d
PRIiMAX	tests\win32\msinttypes\inttypes.h	86;"	d
PRIiPTR	tests\win32\msinttypes\inttypes.h	89;"	d
PRIo16	tests\win32\msinttypes\inttypes.h	105;"	d
PRIo32	tests\win32\msinttypes\inttypes.h	118;"	d
PRIo64	tests\win32\msinttypes\inttypes.h	131;"	d
PRIo8	tests\win32\msinttypes\inttypes.h	92;"	d
PRIoFAST16	tests\win32\msinttypes\inttypes.h	113;"	d
PRIoFAST32	tests\win32\msinttypes\inttypes.h	126;"	d
PRIoFAST64	tests\win32\msinttypes\inttypes.h	139;"	d
PRIoFAST8	tests\win32\msinttypes\inttypes.h	100;"	d
PRIoLEAST16	tests\win32\msinttypes\inttypes.h	109;"	d
PRIoLEAST32	tests\win32\msinttypes\inttypes.h	122;"	d
PRIoLEAST64	tests\win32\msinttypes\inttypes.h	135;"	d
PRIoLEAST8	tests\win32\msinttypes\inttypes.h	96;"	d
PRIoMAX	tests\win32\msinttypes\inttypes.h	144;"	d
PRIoPTR	tests\win32\msinttypes\inttypes.h	149;"	d
PRIu16	tests\win32\msinttypes\inttypes.h	106;"	d
PRIu32	tests\win32\msinttypes\inttypes.h	119;"	d
PRIu64	tests\win32\msinttypes\inttypes.h	132;"	d
PRIu8	tests\win32\msinttypes\inttypes.h	93;"	d
PRIuFAST16	tests\win32\msinttypes\inttypes.h	114;"	d
PRIuFAST32	tests\win32\msinttypes\inttypes.h	127;"	d
PRIuFAST64	tests\win32\msinttypes\inttypes.h	140;"	d
PRIuFAST8	tests\win32\msinttypes\inttypes.h	101;"	d
PRIuLEAST16	tests\win32\msinttypes\inttypes.h	110;"	d
PRIuLEAST32	tests\win32\msinttypes\inttypes.h	123;"	d
PRIuLEAST64	tests\win32\msinttypes\inttypes.h	136;"	d
PRIuLEAST8	tests\win32\msinttypes\inttypes.h	97;"	d
PRIuMAX	tests\win32\msinttypes\inttypes.h	145;"	d
PRIuPTR	tests\win32\msinttypes\inttypes.h	150;"	d
PRIx16	tests\win32\msinttypes\inttypes.h	107;"	d
PRIx32	tests\win32\msinttypes\inttypes.h	120;"	d
PRIx64	tests\win32\msinttypes\inttypes.h	133;"	d
PRIx8	tests\win32\msinttypes\inttypes.h	94;"	d
PRIxFAST16	tests\win32\msinttypes\inttypes.h	115;"	d
PRIxFAST32	tests\win32\msinttypes\inttypes.h	128;"	d
PRIxFAST64	tests\win32\msinttypes\inttypes.h	141;"	d
PRIxFAST8	tests\win32\msinttypes\inttypes.h	102;"	d
PRIxLEAST16	tests\win32\msinttypes\inttypes.h	111;"	d
PRIxLEAST32	tests\win32\msinttypes\inttypes.h	124;"	d
PRIxLEAST64	tests\win32\msinttypes\inttypes.h	137;"	d
PRIxLEAST8	tests\win32\msinttypes\inttypes.h	98;"	d
PRIxMAX	tests\win32\msinttypes\inttypes.h	146;"	d
PRIxPTR	tests\win32\msinttypes\inttypes.h	151;"	d
SCNX16	tests\win32\msinttypes\inttypes.h	211;"	d
SCNX32	tests\win32\msinttypes\inttypes.h	224;"	d
SCNX64	tests\win32\msinttypes\inttypes.h	237;"	d
SCNX8	tests\win32\msinttypes\inttypes.h	198;"	d
SCNXFAST16	tests\win32\msinttypes\inttypes.h	219;"	d
SCNXFAST32	tests\win32\msinttypes\inttypes.h	232;"	d
SCNXFAST64	tests\win32\msinttypes\inttypes.h	245;"	d
SCNXFAST8	tests\win32\msinttypes\inttypes.h	206;"	d
SCNXLEAST16	tests\win32\msinttypes\inttypes.h	215;"	d
SCNXLEAST32	tests\win32\msinttypes\inttypes.h	228;"	d
SCNXLEAST64	tests\win32\msinttypes\inttypes.h	241;"	d
SCNXLEAST8	tests\win32\msinttypes\inttypes.h	202;"	d
SCNXMAX	tests\win32\msinttypes\inttypes.h	250;"	d
SCNXPTR	tests\win32\msinttypes\inttypes.h	256;"	d
SCNXPTR	tests\win32\msinttypes\inttypes.h	261;"	d
SCNd16	tests\win32\msinttypes\inttypes.h	162;"	d
SCNd32	tests\win32\msinttypes\inttypes.h	169;"	d
SCNd64	tests\win32\msinttypes\inttypes.h	176;"	d
SCNd8	tests\win32\msinttypes\inttypes.h	155;"	d
SCNdFAST16	tests\win32\msinttypes\inttypes.h	166;"	d
SCNdFAST32	tests\win32\msinttypes\inttypes.h	173;"	d
SCNdFAST64	tests\win32\msinttypes\inttypes.h	180;"	d
SCNdFAST8	tests\win32\msinttypes\inttypes.h	159;"	d
SCNdLEAST16	tests\win32\msinttypes\inttypes.h	164;"	d
SCNdLEAST32	tests\win32\msinttypes\inttypes.h	171;"	d
SCNdLEAST64	tests\win32\msinttypes\inttypes.h	178;"	d
SCNdLEAST8	tests\win32\msinttypes\inttypes.h	157;"	d
SCNdMAX	tests\win32\msinttypes\inttypes.h	183;"	d
SCNdPTR	tests\win32\msinttypes\inttypes.h	187;"	d
SCNdPTR	tests\win32\msinttypes\inttypes.h	190;"	d
SCNi16	tests\win32\msinttypes\inttypes.h	163;"	d
SCNi32	tests\win32\msinttypes\inttypes.h	170;"	d
SCNi64	tests\win32\msinttypes\inttypes.h	177;"	d
SCNi8	tests\win32\msinttypes\inttypes.h	156;"	d
SCNiFAST16	tests\win32\msinttypes\inttypes.h	167;"	d
SCNiFAST32	tests\win32\msinttypes\inttypes.h	174;"	d
SCNiFAST64	tests\win32\msinttypes\inttypes.h	181;"	d
SCNiFAST8	tests\win32\msinttypes\inttypes.h	160;"	d
SCNiLEAST16	tests\win32\msinttypes\inttypes.h	165;"	d
SCNiLEAST32	tests\win32\msinttypes\inttypes.h	172;"	d
SCNiLEAST64	tests\win32\msinttypes\inttypes.h	179;"	d
SCNiLEAST8	tests\win32\msinttypes\inttypes.h	158;"	d
SCNiMAX	tests\win32\msinttypes\inttypes.h	184;"	d
SCNiPTR	tests\win32\msinttypes\inttypes.h	188;"	d
SCNiPTR	tests\win32\msinttypes\inttypes.h	191;"	d
SCNo16	tests\win32\msinttypes\inttypes.h	208;"	d
SCNo32	tests\win32\msinttypes\inttypes.h	221;"	d
SCNo64	tests\win32\msinttypes\inttypes.h	234;"	d
SCNo8	tests\win32\msinttypes\inttypes.h	195;"	d
SCNoFAST16	tests\win32\msinttypes\inttypes.h	216;"	d
SCNoFAST32	tests\win32\msinttypes\inttypes.h	229;"	d
SCNoFAST64	tests\win32\msinttypes\inttypes.h	242;"	d
SCNoFAST8	tests\win32\msinttypes\inttypes.h	203;"	d
SCNoLEAST16	tests\win32\msinttypes\inttypes.h	212;"	d
SCNoLEAST32	tests\win32\msinttypes\inttypes.h	225;"	d
SCNoLEAST64	tests\win32\msinttypes\inttypes.h	238;"	d
SCNoLEAST8	tests\win32\msinttypes\inttypes.h	199;"	d
SCNoMAX	tests\win32\msinttypes\inttypes.h	247;"	d
SCNoPTR	tests\win32\msinttypes\inttypes.h	253;"	d
SCNoPTR	tests\win32\msinttypes\inttypes.h	258;"	d
SCNu16	tests\win32\msinttypes\inttypes.h	209;"	d
SCNu32	tests\win32\msinttypes\inttypes.h	222;"	d
SCNu64	tests\win32\msinttypes\inttypes.h	235;"	d
SCNu8	tests\win32\msinttypes\inttypes.h	196;"	d
SCNuFAST16	tests\win32\msinttypes\inttypes.h	217;"	d
SCNuFAST32	tests\win32\msinttypes\inttypes.h	230;"	d
SCNuFAST64	tests\win32\msinttypes\inttypes.h	243;"	d
SCNuFAST8	tests\win32\msinttypes\inttypes.h	204;"	d
SCNuLEAST16	tests\win32\msinttypes\inttypes.h	213;"	d
SCNuLEAST32	tests\win32\msinttypes\inttypes.h	226;"	d
SCNuLEAST64	tests\win32\msinttypes\inttypes.h	239;"	d
SCNuLEAST8	tests\win32\msinttypes\inttypes.h	200;"	d
SCNuMAX	tests\win32\msinttypes\inttypes.h	248;"	d
SCNuPTR	tests\win32\msinttypes\inttypes.h	254;"	d
SCNuPTR	tests\win32\msinttypes\inttypes.h	259;"	d
SCNx16	tests\win32\msinttypes\inttypes.h	210;"	d
SCNx32	tests\win32\msinttypes\inttypes.h	223;"	d
SCNx64	tests\win32\msinttypes\inttypes.h	236;"	d
SCNx8	tests\win32\msinttypes\inttypes.h	197;"	d
SCNxFAST16	tests\win32\msinttypes\inttypes.h	218;"	d
SCNxFAST32	tests\win32\msinttypes\inttypes.h	231;"	d
SCNxFAST64	tests\win32\msinttypes\inttypes.h	244;"	d
SCNxFAST8	tests\win32\msinttypes\inttypes.h	205;"	d
SCNxLEAST16	tests\win32\msinttypes\inttypes.h	214;"	d
SCNxLEAST32	tests\win32\msinttypes\inttypes.h	227;"	d
SCNxLEAST64	tests\win32\msinttypes\inttypes.h	240;"	d
SCNxLEAST8	tests\win32\msinttypes\inttypes.h	201;"	d
SCNxMAX	tests\win32\msinttypes\inttypes.h	249;"	d
SCNxPTR	tests\win32\msinttypes\inttypes.h	255;"	d
SCNxPTR	tests\win32\msinttypes\inttypes.h	260;"	d
_MSC_INTTYPES_H_	tests\win32\msinttypes\inttypes.h	37;"	d
imaxabs	tests\win32\msinttypes\inttypes.h	269;"	d
imaxdiv	tests\win32\msinttypes\inttypes.h	/^imaxdiv_t __cdecl imaxdiv(intmax_t numer, intmax_t denom)$/;"	f
imaxdiv_t	tests\win32\msinttypes\inttypes.h	/^} imaxdiv_t;$/;"	t	typeref:struct:__anon1
quot	tests\win32\msinttypes\inttypes.h	/^   intmax_t quot;$/;"	m	struct:__anon1
rem	tests\win32\msinttypes\inttypes.h	/^   intmax_t rem;$/;"	m	struct:__anon1
strtoimax	tests\win32\msinttypes\inttypes.h	297;"	d
strtoumax	tests\win32\msinttypes\inttypes.h	298;"	d
wcstoimax	tests\win32\msinttypes\inttypes.h	301;"	d
wcstoumax	tests\win32\msinttypes\inttypes.h	302;"	d
amqp_cacert	tools\common.c	/^static char *amqp_cacert = "\/etc\/ssl\/certs\/cacert.pem";$/;"	v	file:
amqp_cert	tools\common.c	/^static char *amqp_cert = NULL;$/;"	v	file:
amqp_heartbeat	tools\common.c	/^static int amqp_heartbeat = 0;$/;"	v	file:
amqp_key	tools\common.c	/^static char *amqp_key = NULL;$/;"	v	file:
amqp_password	tools\common.c	/^static char *amqp_password;$/;"	v	file:
amqp_port	tools\common.c	/^static int amqp_port = -1;$/;"	v	file:
amqp_rpc_reply_string	tools\common.c	/^const char *amqp_rpc_reply_string(amqp_rpc_reply_t r)$/;"	f
amqp_server	tools\common.c	/^static char *amqp_server;$/;"	v	file:
amqp_server_exception_string	tools\common.c	/^const char *amqp_server_exception_string(amqp_rpc_reply_t r)$/;"	f
amqp_ssl	tools\common.c	/^static int amqp_ssl = 0;$/;"	v	file:
amqp_url	tools\common.c	/^static char *amqp_url;$/;"	v	file:
amqp_username	tools\common.c	/^static char *amqp_username;$/;"	v	file:
amqp_vhost	tools\common.c	/^static char *amqp_vhost;$/;"	v	file:
close_connection	tools\common.c	/^void close_connection(amqp_connection_state_t conn)$/;"	f
connect_options	tools\common.c	/^struct poptOption connect_options[] = {$/;"	v	typeref:struct:poptOption
connect_options_title	tools\common.c	/^const char *connect_options_title = "Connection options";$/;"	v
copy_body	tools\common.c	/^void copy_body(amqp_connection_state_t conn, int fd)$/;"	f
cstring_bytes	tools\common.c	/^amqp_bytes_t cstring_bytes(const char *str)$/;"	f
die	tools\common.c	/^void die(const char *fmt, ...)$/;"	f
die_amqp_error	tools\common.c	/^void die_amqp_error(int err, const char *fmt, ...)$/;"	f
die_errno	tools\common.c	/^void die_errno(int err, const char *fmt, ...)$/;"	f
die_rpc	tools\common.c	/^void die_rpc(amqp_rpc_reply_t r, const char *fmt, ...)$/;"	f
init_connection_info	tools\common.c	/^static void init_connection_info(struct amqp_connection_info *ci)$/;"	f	file:
make_connection	tools\common.c	/^amqp_connection_state_t make_connection(void)$/;"	f
process_all_options	tools\common.c	/^void process_all_options(int argc, const char **argv,$/;"	f
process_options	tools\common.c	/^poptContext process_options(int argc, const char **argv,$/;"	f
read_all	tools\common.c	/^amqp_bytes_t read_all(int fd)$/;"	f
write_all	tools\common.c	/^void write_all(int fd, amqp_bytes_t data)$/;"	f
INCLUDE_OPTIONS	tools\common.h	66;"	d
AMQP_CONSUME_MAX_PREFETCH_COUNT	tools\consume.c	144;"	d	file:
LISTEN_KEYS_DELIMITER	tools\consume.c	49;"	d	file:
MAX_LISTEN_KEYS	tools\consume.c	48;"	d	file:
do_consume	tools\consume.c	/^static void do_consume(amqp_connection_state_t conn, amqp_bytes_t queue,$/;"	f	file:
main	tools\consume.c	/^int main(int argc, const char **argv)$/;"	f
setup_queue	tools\consume.c	/^static amqp_bytes_t setup_queue(amqp_connection_state_t conn,$/;"	f	file:
stringify_bytes	tools\consume.c	/^static char *stringify_bytes(amqp_bytes_t bytes)$/;"	f	file:
main	tools\declare_queue.c	/^int main(int argc, const char **argv)$/;"	f
main	tools\delete_queue.c	/^int main(int argc, const char **argv)$/;"	f
do_get	tools\get.c	/^static int do_get(amqp_connection_state_t conn, char *queue)$/;"	f	file:
main	tools\get.c	/^int main(int argc, const char **argv)$/;"	f
MAX_LINE_LENGTH	tools\publish.c	47;"	d	file:
do_publish	tools\publish.c	/^static void do_publish(amqp_connection_state_t conn,$/;"	f	file:
main	tools\publish.c	/^int main(int argc, const char **argv)$/;"	f
finish_pipeline	tools\unix\process.c	/^int finish_pipeline(struct pipeline *pl)$/;"	f
pipeline	tools\unix\process.c	/^void pipeline(const char *const *argv, struct pipeline *pl)$/;"	f
infd	tools\unix\process.h	/^  int infd;$/;"	m	struct:pipeline
pid	tools\unix\process.h	/^  int pid;$/;"	m	struct:pipeline
pipeline	tools\unix\process.h	/^struct pipeline {$/;"	s
asprintf	tools\win32\compat.c	/^int asprintf(char **strp, const char *fmt, ...)$/;"	f
die_windows_error	tools\win32\process.c	/^void die_windows_error(const char *fmt, ...)$/;"	f
finish_pipeline	tools\win32\process.c	/^int finish_pipeline(struct pipeline *pl)$/;"	f
make_command_line	tools\win32\process.c	/^static char *make_command_line(const char *const *argv)$/;"	f	file:
pipeline	tools\win32\process.c	/^void pipeline(const char *const *argv, struct pipeline *pl)$/;"	f
infd	tools\win32\process.h	/^  int infd;$/;"	m	struct:pipeline
pipeline	tools\win32\process.h	/^struct pipeline {$/;"	s
proc_handle	tools\win32\process.h	/^  HANDLE proc_handle;$/;"	m	struct:pipeline
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.8	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
